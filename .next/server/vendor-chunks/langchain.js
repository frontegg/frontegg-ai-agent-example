"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/langchain";
exports.ids = ["vendor-chunks/langchain"];
exports.modules = {

/***/ "(rsc)/./node_modules/langchain/agents.js":
/*!******************************************!*\
  !*** ./node_modules/langchain/agents.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Agent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.Agent),
/* harmony export */   AgentActionOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.AgentActionOutputParser),
/* harmony export */   AgentExecutor: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.AgentExecutor),
/* harmony export */   BaseMultiActionAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMultiActionAgent),
/* harmony export */   BaseSingleActionAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseSingleActionAgent),
/* harmony export */   ChatAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatAgent),
/* harmony export */   ChatAgentOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatAgentOutputParser),
/* harmony export */   ChatConversationalAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatConversationalAgent),
/* harmony export */   ChatConversationalAgentOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatConversationalAgentOutputParser),
/* harmony export */   ChatConversationalAgentOutputParserWithRetries: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatConversationalAgentOutputParserWithRetries),
/* harmony export */   JsonToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonToolkit),
/* harmony export */   LLMSingleActionAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.LLMSingleActionAgent),
/* harmony export */   OpenAIAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.OpenAIAgent),
/* harmony export */   OpenApiToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.OpenApiToolkit),
/* harmony export */   RequestsToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.RequestsToolkit),
/* harmony export */   RunnableAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableAgent),
/* harmony export */   StructuredChatAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredChatAgent),
/* harmony export */   StructuredChatOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredChatOutputParser),
/* harmony export */   StructuredChatOutputParserWithRetries: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredChatOutputParserWithRetries),
/* harmony export */   Toolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.Toolkit),
/* harmony export */   VectorStoreRouterToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.VectorStoreRouterToolkit),
/* harmony export */   VectorStoreToolkit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.VectorStoreToolkit),
/* harmony export */   XMLAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.XMLAgent),
/* harmony export */   ZapierToolKit: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ZapierToolKit),
/* harmony export */   ZeroShotAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ZeroShotAgent),
/* harmony export */   ZeroShotAgentOutputParser: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.ZeroShotAgentOutputParser),
/* harmony export */   createJsonAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createJsonAgent),
/* harmony export */   createOpenAIFunctionsAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createOpenAIFunctionsAgent),
/* harmony export */   createOpenAIToolsAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createOpenAIToolsAgent),
/* harmony export */   createOpenApiAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createOpenApiAgent),
/* harmony export */   createReactAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createReactAgent),
/* harmony export */   createStructuredChatAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createStructuredChatAgent),
/* harmony export */   createToolCallingAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createToolCallingAgent),
/* harmony export */   createVectorStoreAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createVectorStoreAgent),
/* harmony export */   createVectorStoreRouterAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createVectorStoreRouterAgent),
/* harmony export */   createXmlAgent: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.createXmlAgent),
/* harmony export */   initializeAgentExecutor: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.initializeAgentExecutor),
/* harmony export */   initializeAgentExecutorWithOptions: () => (/* reexport safe */ _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__.initializeAgentExecutorWithOptions)
/* harmony export */ });
/* harmony import */ var _dist_agents_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/agents/index.js */ "(rsc)/./node_modules/langchain/dist/agents/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/agent.js":
/*!*****************************************************!*\
  !*** ./node_modules/langchain/dist/agents/agent.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* binding */ Agent),\n/* harmony export */   AgentRunnableSequence: () => (/* binding */ AgentRunnableSequence),\n/* harmony export */   BaseAgent: () => (/* binding */ BaseAgent),\n/* harmony export */   BaseMultiActionAgent: () => (/* binding */ BaseMultiActionAgent),\n/* harmony export */   BaseSingleActionAgent: () => (/* binding */ BaseSingleActionAgent),\n/* harmony export */   LLMSingleActionAgent: () => (/* binding */ LLMSingleActionAgent),\n/* harmony export */   RunnableAgent: () => (/* binding */ RunnableAgent),\n/* harmony export */   RunnableMultiActionAgent: () => (/* binding */ RunnableMultiActionAgent),\n/* harmony export */   RunnableSingleActionAgent: () => (/* binding */ RunnableSingleActionAgent),\n/* harmony export */   isRunnableAgent: () => (/* binding */ isRunnableAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n\n\n/**\n * Error class for parse errors in LangChain. Contains information about\n * the error message and the output that caused the error.\n */\nclass ParseError extends Error {\n    constructor(msg, output) {\n        super(msg);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n/**\n * Abstract base class for agents in LangChain. Provides common\n * functionality for agents, such as handling inputs and outputs.\n */\nclass BaseAgent extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    get returnValues() {\n        return [\"output\"];\n    }\n    get allowedTools() {\n        return undefined;\n    }\n    /**\n     * Return the string type key uniquely identifying this class of agent.\n     */\n    _agentType() {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Return response when agent has been stopped due to max iterations\n     */\n    returnStoppedResponse(earlyStoppingMethod, _steps, _inputs, _callbackManager) {\n        if (earlyStoppingMethod === \"force\") {\n            return Promise.resolve({\n                returnValues: { output: \"Agent stopped due to max iterations.\" },\n                log: \"\",\n            });\n        }\n        throw new Error(`Invalid stopping method: ${earlyStoppingMethod}`);\n    }\n    /**\n     * Prepare the agent for output, if needed\n     */\n    async prepareForOutput(_returnValues, _steps) {\n        return {};\n    }\n}\n/**\n * Abstract base class for single action agents in LangChain. Extends the\n * BaseAgent class and provides additional functionality specific to\n * single action agents.\n */\nclass BaseSingleActionAgent extends BaseAgent {\n    _agentActionType() {\n        return \"single\";\n    }\n}\n/**\n * Abstract base class for multi-action agents in LangChain. Extends the\n * BaseAgent class and provides additional functionality specific to\n * multi-action agents.\n */\nclass BaseMultiActionAgent extends BaseAgent {\n    _agentActionType() {\n        return \"multi\";\n    }\n}\nfunction isAgentAction(input) {\n    return !Array.isArray(input) && input?.tool !== undefined;\n}\nfunction isRunnableAgent(x) {\n    return (x.runnable !==\n        undefined);\n}\n// TODO: Remove in the future. Only for backwards compatibility.\n// Allows for the creation of runnables with properties that will\n// be passed to the agent executor constructor.\nclass AgentRunnableSequence extends _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableSequence {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"streamRunnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"singleAction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromRunnables([first, ...runnables], config) {\n        const sequence = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableSequence.from([first, ...runnables], config.name);\n        sequence.singleAction = config.singleAction;\n        sequence.streamRunnable = config.streamRunnable;\n        return sequence;\n    }\n    static isAgentRunnableSequence(x) {\n        return typeof x.singleAction === \"boolean\";\n    }\n}\n/**\n * Class representing a single-action agent powered by runnables.\n * Extends the BaseSingleActionAgent class and provides methods for\n * planning agent actions with runnables.\n */\nclass RunnableSingleActionAgent extends BaseSingleActionAgent {\n    get inputKeys() {\n        return [];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"runnable\"]\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Whether to stream from the runnable or not.\n         * If true, the underlying LLM is invoked in a streaming fashion to make it\n         * possible to get access to the individual LLM tokens when using\n         * `streamLog` with the Agent Executor. If false then LLM is invoked in a\n         * non-streaming fashion and individual LLM tokens will not be available\n         * in `streamLog`.\n         *\n         * Note that the runnable should still only stream a single action or\n         * finish chunk.\n         */\n        Object.defineProperty(this, \"streamRunnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"defaultRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RunnableAgent\"\n        });\n        this.runnable = fields.runnable;\n        this.defaultRunName =\n            fields.defaultRunName ?? this.runnable.name ?? this.defaultRunName;\n        this.streamRunnable = fields.streamRunnable ?? this.streamRunnable;\n    }\n    async plan(steps, inputs, callbackManager, config) {\n        const combinedInput = { ...inputs, steps };\n        const combinedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n            callbacks: callbackManager,\n            runName: this.defaultRunName,\n        });\n        if (this.streamRunnable) {\n            const stream = await this.runnable.stream(combinedInput, combinedConfig);\n            let finalOutput;\n            for await (const chunk of stream) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    throw new Error([\n                        `Multiple agent actions/finishes received in streamed agent output.`,\n                        `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                    ].join(\"\\n\"));\n                }\n            }\n            if (finalOutput === undefined) {\n                throw new Error([\n                    \"No streaming output received from underlying runnable.\",\n                    `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                ].join(\"\\n\"));\n            }\n            return finalOutput;\n        }\n        else {\n            return this.runnable.invoke(combinedInput, combinedConfig);\n        }\n    }\n}\n/**\n * Class representing a multi-action agent powered by runnables.\n * Extends the BaseMultiActionAgent class and provides methods for\n * planning agent actions with runnables.\n */\nclass RunnableMultiActionAgent extends BaseMultiActionAgent {\n    get inputKeys() {\n        return [];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"runnable\"]\n        });\n        // TODO: Rename input to \"intermediate_steps\"\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"defaultRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RunnableAgent\"\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streamRunnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.runnable = fields.runnable;\n        this.stop = fields.stop;\n        this.defaultRunName =\n            fields.defaultRunName ?? this.runnable.name ?? this.defaultRunName;\n        this.streamRunnable = fields.streamRunnable ?? this.streamRunnable;\n    }\n    async plan(steps, inputs, callbackManager, config) {\n        const combinedInput = { ...inputs, steps };\n        const combinedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n            callbacks: callbackManager,\n            runName: this.defaultRunName,\n        });\n        let output;\n        if (this.streamRunnable) {\n            const stream = await this.runnable.stream(combinedInput, combinedConfig);\n            let finalOutput;\n            for await (const chunk of stream) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    throw new Error([\n                        `Multiple agent actions/finishes received in streamed agent output.`,\n                        `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                    ].join(\"\\n\"));\n                }\n            }\n            if (finalOutput === undefined) {\n                throw new Error([\n                    \"No streaming output received from underlying runnable.\",\n                    `Set \"streamRunnable: false\" when initializing the agent to invoke this agent in non-streaming mode.`,\n                ].join(\"\\n\"));\n            }\n            output = finalOutput;\n        }\n        else {\n            output = await this.runnable.invoke(combinedInput, combinedConfig);\n        }\n        if (isAgentAction(output)) {\n            return [output];\n        }\n        return output;\n    }\n}\n/** @deprecated Renamed to RunnableMultiActionAgent. */\nclass RunnableAgent extends RunnableMultiActionAgent {\n}\n/**\n * Class representing a single action agent using a LLMChain in LangChain.\n * Extends the BaseSingleActionAgent class and provides methods for\n * planning agent actions based on LLMChain outputs.\n * @example\n * ```typescript\n * const customPromptTemplate = new CustomPromptTemplate({\n *   tools: [new Calculator()],\n *   inputVariables: [\"input\", \"agent_scratchpad\"],\n * });\n * const customOutputParser = new CustomOutputParser();\n * const agent = new LLMSingleActionAgent({\n *   llmChain: new LLMChain({\n *     prompt: customPromptTemplate,\n *     llm: new ChatOpenAI({ temperature: 0 }),\n *   }),\n *   outputParser: customOutputParser,\n *   stop: [\"\\nObservation\"],\n * });\n * const executor = new AgentExecutor({\n *   agent,\n *   tools: [new Calculator()],\n * });\n * const result = await executor.invoke({\n *   input:\n *     \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\",\n * });\n * ```\n */\nclass LLMSingleActionAgent extends BaseSingleActionAgent {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\"]\n        });\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.stop = input.stop;\n        this.llmChain = input.llmChain;\n        this.outputParser = input.outputParser;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys;\n    }\n    /**\n     * Decide what to do given some input.\n     *\n     * @param steps - Steps the LLM has taken so far, along with observations from each.\n     * @param inputs - User inputs.\n     * @param callbackManager - Callback manager.\n     *\n     * @returns Action specifying what tool to use.\n     */\n    async plan(steps, inputs, callbackManager) {\n        const output = await this.llmChain.call({\n            intermediate_steps: steps,\n            stop: this.stop,\n            ...inputs,\n        }, callbackManager);\n        return this.outputParser.parse(output[this.llmChain.outputKey], callbackManager);\n    }\n}\n/**\n * Class responsible for calling a language model and deciding an action.\n *\n * @remarks This is driven by an LLMChain. The prompt in the LLMChain *must*\n * include a variable called \"agent_scratchpad\" where the agent can put its\n * intermediary work.\n *\n * @deprecated Use {@link https://js.langchain.com/docs/modules/agents/agent_types/ | new agent creation methods}.\n */\nclass Agent extends BaseSingleActionAgent {\n    get allowedTools() {\n        return this._allowedTools;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys.filter((k) => k !== \"agent_scratchpad\");\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_allowedTools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        this.llmChain = input.llmChain;\n        this._allowedTools = input.allowedTools;\n        this.outputParser = input.outputParser;\n    }\n    /**\n     * Get the default output parser for this agent.\n     */\n    static getDefaultOutputParser(_fields) {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Create a prompt for this class\n     *\n     * @param _tools - List of tools the agent will have access to, used to format the prompt.\n     * @param _fields - Additional fields used to format the prompt.\n     *\n     * @returns A PromptTemplate assembled from the given tools and fields.\n     * */\n    static createPrompt(_tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _fields) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Construct an agent from an LLM and a list of tools */\n    static fromLLMAndTools(_llm, _tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _args) {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Validate that appropriate tools are passed in\n     */\n    static validateTools(_tools) { }\n    _stop() {\n        return [`\\n${this.observationPrefix()}`];\n    }\n    /**\n     * Name of tool to use to terminate the chain.\n     */\n    finishToolName() {\n        return \"Final Answer\";\n    }\n    /**\n     * Construct a scratchpad to let the agent continue its thought process\n     */\n    async constructScratchPad(steps) {\n        return steps.reduce((thoughts, { action, observation }) => thoughts +\n            [\n                action.log,\n                `${this.observationPrefix()}${observation}`,\n                this.llmPrefix(),\n            ].join(\"\\n\"), \"\");\n    }\n    async _plan(steps, inputs, suffix, callbackManager) {\n        const thoughts = await this.constructScratchPad(steps);\n        const newInputs = {\n            ...inputs,\n            agent_scratchpad: suffix ? `${thoughts}${suffix}` : thoughts,\n        };\n        if (this._stop().length !== 0) {\n            newInputs.stop = this._stop();\n        }\n        const output = await this.llmChain.predict(newInputs, callbackManager);\n        if (!this.outputParser) {\n            throw new Error(\"Output parser not set\");\n        }\n        return this.outputParser.parse(output, callbackManager);\n    }\n    /**\n     * Decide what to do given some input.\n     *\n     * @param steps - Steps the LLM has taken so far, along with observations from each.\n     * @param inputs - User inputs.\n     * @param callbackManager - Callback manager to use for this call.\n     *\n     * @returns Action specifying what tool to use.\n     */\n    plan(steps, inputs, callbackManager) {\n        return this._plan(steps, inputs, undefined, callbackManager);\n    }\n    /**\n     * Return response when agent has been stopped due to max iterations\n     */\n    async returnStoppedResponse(earlyStoppingMethod, steps, inputs, callbackManager) {\n        if (earlyStoppingMethod === \"force\") {\n            return {\n                returnValues: { output: \"Agent stopped due to max iterations.\" },\n                log: \"\",\n            };\n        }\n        if (earlyStoppingMethod === \"generate\") {\n            try {\n                const action = await this._plan(steps, inputs, \"\\n\\nI now need to return a final answer based on the previous steps:\", callbackManager);\n                if (\"returnValues\" in action) {\n                    return action;\n                }\n                return { returnValues: { output: action.log }, log: action.log };\n            }\n            catch (err) {\n                // fine to use instanceof because we're in the same module\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (!(err instanceof ParseError)) {\n                    throw err;\n                }\n                return { returnValues: { output: err.output }, log: err.output };\n            }\n        }\n        throw new Error(`Invalid stopping method: ${earlyStoppingMethod}`);\n    }\n    /**\n     * Load an agent from a json-like object describing it.\n     */\n    static async deserialize(data) {\n        switch (data._type) {\n            case \"zero-shot-react-description\": {\n                const { ZeroShotAgent } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./mrkl/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\"));\n                return ZeroShotAgent.deserialize(data);\n            }\n            default:\n                throw new Error(\"Unknown agent type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/agent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/chat/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/chat/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAgent: () => (/* binding */ ChatAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat/prompt.js\");\n\n\n\n\n\nconst DEFAULT_HUMAN_MESSAGE_TEMPLATE = \"{input}\\n\\n{agent_scratchpad}\";\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain_agents.createStructuredChatAgent.html | createStructuredChatAgent method instead}.\n */\nclass ChatAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_2__.Agent {\n    static lc_name() {\n        return \"ChatAgent\";\n    }\n    constructor(input) {\n        const outputParser = input?.outputParser ?? ChatAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat\"]\n        });\n    }\n    _agentType() {\n        return \"chat-zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    /**\n     * Validates that all tools have descriptions. Throws an error if a tool\n     * without a description is found.\n     * @param tools Array of Tool instances to validate.\n     * @returns void\n     */\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Returns a default output parser for the ChatAgent.\n     * @param _fields Optional OutputParserArgs to customize the output parser.\n     * @returns ChatAgentOutputParser instance\n     */\n    static getDefaultOutputParser(_fields) {\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_3__.ChatAgentOutputParser();\n    }\n    /**\n     * Constructs the agent's scratchpad, which is a string representation of\n     * the agent's previous steps.\n     * @param steps Array of AgentStep instances representing the agent's previous steps.\n     * @returns Promise resolving to a string representing the agent's scratchpad.\n     */\n    async constructScratchPad(steps) {\n        const agentScratchpad = await super.constructScratchPad(steps);\n        if (agentScratchpad) {\n            return `This was your previous work (but I haven't seen any of it! I only see what you return as final answer):\\n${agentScratchpad}`;\n        }\n        return agentScratchpad;\n    }\n    /**\n     * Create prompt in the style of the zero shot agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.humanMessageTemplate - String to use directly as the human message template\n     * @param args.formatInstructions - Formattable string to use as the instructions template\n     */\n    static createPrompt(tools, args) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_4__.PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_4__.SUFFIX, humanMessageTemplate = DEFAULT_HUMAN_MESSAGE_TEMPLATE, formatInstructions = _prompt_js__WEBPACK_IMPORTED_MODULE_4__.FORMAT_INSTRUCTIONS, } = args ?? {};\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const template = [prefix, toolStrings, formatInstructions, suffix].join(\"\\n\\n\");\n        const messages = [\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(template),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(humanMessageTemplate),\n        ];\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\n    }\n    /**\n     * Creates a ChatAgent instance using a language model, tools, and\n     * optional arguments.\n     * @param llm BaseLanguageModelInterface instance to use in the agent.\n     * @param tools Array of Tool instances to include in the agent.\n     * @param args Optional arguments to customize the agent and prompt.\n     * @returns ChatAgent instance\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        ChatAgent.validateTools(tools);\n        const prompt = ChatAgent.createPrompt(tools, args);\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        const outputParser = args?.outputParser ?? ChatAgent.getDefaultOutputParser();\n        return new ChatAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/chat/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/chat/outputParser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/chat/outputParser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAgentOutputParser: () => (/* binding */ ChatAgentOutputParser),\n/* harmony export */   FINAL_ANSWER_ACTION: () => (/* binding */ FINAL_ANSWER_ACTION)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat/prompt.js\");\n\n\n\nconst FINAL_ANSWER_ACTION = \"Final Answer:\";\n/**\n * A class that extends the AgentActionOutputParser to parse the output of\n * the ChatAgent in LangChain. It checks if the output text contains the\n * final answer action or a JSON response, and parses it accordingly.\n * @example\n * ```typescript\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\n *     \"ai\",\n *     `{PREFIX}\n * {FORMAT_INSTRUCTIONS}\n * {SUFFIX}`,\n *   ],\n *   [\"human\", \"Question: {input}\"],\n * ]);\n * const runnableAgent = RunnableSequence.from([\n *   {\n *     input: (i: { input: string; steps: AgentStep[] }) => i.input,\n *     agent_scratchpad: (i: { input: string; steps: AgentStep[] }) =>\n *       formatLogToString(i.steps),\n *   },\n *   prompt,\n *   new OpenAI({ temperature: 0 }),\n *   new ChatAgentOutputParser(),\n * ]);\n *\n * const executor = AgentExecutor.fromAgentAndTools({\n *   agent: runnableAgent,\n *   tools: [new SerpAPI(), new Calculator()],\n * });\n *\n * const result = await executor.invoke({\n *   input:\n *     \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\",\n * });\n * ```\n */\nclass ChatAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat\"]\n        });\n    }\n    /**\n     * Parses the output text from the MRKL chain into an agent action or\n     * agent finish. If the text contains the final answer action or does not\n     * contain an action, it returns an AgentFinish with the output and log.\n     * If the text contains a JSON response, it returns the tool, toolInput,\n     * and log.\n     * @param text The output text from the MRKL chain.\n     * @returns An object that satisfies the AgentFinish interface or an object with the tool, toolInput, and log.\n     */\n    async parse(text) {\n        if (text.includes(FINAL_ANSWER_ACTION) || !text.includes(`\"action\":`)) {\n            const parts = text.split(FINAL_ANSWER_ACTION);\n            const output = parts[parts.length - 1].trim();\n            return { returnValues: { output }, log: text };\n        }\n        const action = text.includes(\"```\")\n            ? text.trim().split(/```(?:json)?/)[1]\n            : text.trim();\n        try {\n            const response = JSON.parse(action.trim());\n            return {\n                tool: response.action,\n                toolInput: response.action_input,\n                log: text,\n            };\n        }\n        catch {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Unable to parse JSON response from chat agent.\\n\\n${text}`);\n        }\n    }\n    /**\n     * Returns the format instructions used in the output parser for the\n     * ChatAgent class.\n     * @returns The format instructions as a string.\n     */\n    getFormatInstructions() {\n        return _prompt_js__WEBPACK_IMPORTED_MODULE_2__.FORMAT_INSTRUCTIONS;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2NoYXQvb3V0cHV0UGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBQ2pCO0FBQ0o7QUFDM0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsSUFBSTtBQUNKLElBQUksT0FBTztBQUNYO0FBQ0EsMkJBQTJCLE1BQU07QUFDakM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGVBQWUsb0JBQW9CO0FBQ3ZELCtCQUErQixlQUFlLG9CQUFvQjtBQUNsRTtBQUNBLE1BQU07QUFDTjtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTyxvQ0FBb0MsOERBQXVCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCLFFBQVE7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUZBQXFCLHNEQUFzRCxLQUFLO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJEQUFtQjtBQUNsQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvY2hhdC9vdXRwdXRQYXJzZXIuanM/ZWVhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPdXRwdXRQYXJzZXJFeGNlcHRpb24gfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG5pbXBvcnQgeyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB9IGZyb20gXCIuLi90eXBlcy5qc1wiO1xuaW1wb3J0IHsgRk9STUFUX0lOU1RSVUNUSU9OUyB9IGZyb20gXCIuL3Byb21wdC5qc1wiO1xuZXhwb3J0IGNvbnN0IEZJTkFMX0FOU1dFUl9BQ1RJT04gPSBcIkZpbmFsIEFuc3dlcjpcIjtcbi8qKlxuICogQSBjbGFzcyB0aGF0IGV4dGVuZHMgdGhlIEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIHRvIHBhcnNlIHRoZSBvdXRwdXQgb2ZcbiAqIHRoZSBDaGF0QWdlbnQgaW4gTGFuZ0NoYWluLiBJdCBjaGVja3MgaWYgdGhlIG91dHB1dCB0ZXh0IGNvbnRhaW5zIHRoZVxuICogZmluYWwgYW5zd2VyIGFjdGlvbiBvciBhIEpTT04gcmVzcG9uc2UsIGFuZCBwYXJzZXMgaXQgYWNjb3JkaW5nbHkuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgcHJvbXB0ID0gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhbXG4gKiAgIFtcbiAqICAgICBcImFpXCIsXG4gKiAgICAgYHtQUkVGSVh9XG4gKiB7Rk9STUFUX0lOU1RSVUNUSU9OU31cbiAqIHtTVUZGSVh9YCxcbiAqICAgXSxcbiAqICAgW1wiaHVtYW5cIiwgXCJRdWVzdGlvbjoge2lucHV0fVwiXSxcbiAqIF0pO1xuICogY29uc3QgcnVubmFibGVBZ2VudCA9IFJ1bm5hYmxlU2VxdWVuY2UuZnJvbShbXG4gKiAgIHtcbiAqICAgICBpbnB1dDogKGk6IHsgaW5wdXQ6IHN0cmluZzsgc3RlcHM6IEFnZW50U3RlcFtdIH0pID0+IGkuaW5wdXQsXG4gKiAgICAgYWdlbnRfc2NyYXRjaHBhZDogKGk6IHsgaW5wdXQ6IHN0cmluZzsgc3RlcHM6IEFnZW50U3RlcFtdIH0pID0+XG4gKiAgICAgICBmb3JtYXRMb2dUb1N0cmluZyhpLnN0ZXBzKSxcbiAqICAgfSxcbiAqICAgcHJvbXB0LFxuICogICBuZXcgT3BlbkFJKHsgdGVtcGVyYXR1cmU6IDAgfSksXG4gKiAgIG5ldyBDaGF0QWdlbnRPdXRwdXRQYXJzZXIoKSxcbiAqIF0pO1xuICpcbiAqIGNvbnN0IGV4ZWN1dG9yID0gQWdlbnRFeGVjdXRvci5mcm9tQWdlbnRBbmRUb29scyh7XG4gKiAgIGFnZW50OiBydW5uYWJsZUFnZW50LFxuICogICB0b29sczogW25ldyBTZXJwQVBJKCksIG5ldyBDYWxjdWxhdG9yKCldLFxuICogfSk7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY3V0b3IuaW52b2tlKHtcbiAqICAgaW5wdXQ6XG4gKiAgICAgXCJXaG8gaXMgT2xpdmlhIFdpbGRlJ3MgYm95ZnJpZW5kPyBXaGF0IGlzIGhpcyBjdXJyZW50IGFnZSByYWlzZWQgdG8gdGhlIDAuMjMgcG93ZXI/XCIsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgQ2hhdEFnZW50T3V0cHV0UGFyc2VyIGV4dGVuZHMgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcImFnZW50c1wiLCBcImNoYXRcIl1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgb3V0cHV0IHRleHQgZnJvbSB0aGUgTVJLTCBjaGFpbiBpbnRvIGFuIGFnZW50IGFjdGlvbiBvclxuICAgICAqIGFnZW50IGZpbmlzaC4gSWYgdGhlIHRleHQgY29udGFpbnMgdGhlIGZpbmFsIGFuc3dlciBhY3Rpb24gb3IgZG9lcyBub3RcbiAgICAgKiBjb250YWluIGFuIGFjdGlvbiwgaXQgcmV0dXJucyBhbiBBZ2VudEZpbmlzaCB3aXRoIHRoZSBvdXRwdXQgYW5kIGxvZy5cbiAgICAgKiBJZiB0aGUgdGV4dCBjb250YWlucyBhIEpTT04gcmVzcG9uc2UsIGl0IHJldHVybnMgdGhlIHRvb2wsIHRvb2xJbnB1dCxcbiAgICAgKiBhbmQgbG9nLlxuICAgICAqIEBwYXJhbSB0ZXh0IFRoZSBvdXRwdXQgdGV4dCBmcm9tIHRoZSBNUktMIGNoYWluLlxuICAgICAqIEByZXR1cm5zIEFuIG9iamVjdCB0aGF0IHNhdGlzZmllcyB0aGUgQWdlbnRGaW5pc2ggaW50ZXJmYWNlIG9yIGFuIG9iamVjdCB3aXRoIHRoZSB0b29sLCB0b29sSW5wdXQsIGFuZCBsb2cuXG4gICAgICovXG4gICAgYXN5bmMgcGFyc2UodGV4dCkge1xuICAgICAgICBpZiAodGV4dC5pbmNsdWRlcyhGSU5BTF9BTlNXRVJfQUNUSU9OKSB8fCAhdGV4dC5pbmNsdWRlcyhgXCJhY3Rpb25cIjpgKSkge1xuICAgICAgICAgICAgY29uc3QgcGFydHMgPSB0ZXh0LnNwbGl0KEZJTkFMX0FOU1dFUl9BQ1RJT04pO1xuICAgICAgICAgICAgY29uc3Qgb3V0cHV0ID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV0udHJpbSgpO1xuICAgICAgICAgICAgcmV0dXJuIHsgcmV0dXJuVmFsdWVzOiB7IG91dHB1dCB9LCBsb2c6IHRleHQgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhY3Rpb24gPSB0ZXh0LmluY2x1ZGVzKFwiYGBgXCIpXG4gICAgICAgICAgICA/IHRleHQudHJpbSgpLnNwbGl0KC9gYGAoPzpqc29uKT8vKVsxXVxuICAgICAgICAgICAgOiB0ZXh0LnRyaW0oKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gSlNPTi5wYXJzZShhY3Rpb24udHJpbSgpKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdG9vbDogcmVzcG9uc2UuYWN0aW9uLFxuICAgICAgICAgICAgICAgIHRvb2xJbnB1dDogcmVzcG9uc2UuYWN0aW9uX2lucHV0LFxuICAgICAgICAgICAgICAgIGxvZzogdGV4dCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgdGhyb3cgbmV3IE91dHB1dFBhcnNlckV4Y2VwdGlvbihgVW5hYmxlIHRvIHBhcnNlIEpTT04gcmVzcG9uc2UgZnJvbSBjaGF0IGFnZW50LlxcblxcbiR7dGV4dH1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIHVzZWQgaW4gdGhlIG91dHB1dCBwYXJzZXIgZm9yIHRoZVxuICAgICAqIENoYXRBZ2VudCBjbGFzcy5cbiAgICAgKiBAcmV0dXJucyBUaGUgZm9ybWF0IGluc3RydWN0aW9ucyBhcyBhIHN0cmluZy5cbiAgICAgKi9cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiBGT1JNQVRfSU5TVFJVQ1RJT05TO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/chat/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/chat/prompt.js":
/*!***********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/chat/prompt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `Answer the following questions as best you can. You have access to the following tools:`;\nconst FORMAT_INSTRUCTIONS = `The way you use the tools is by specifying a json blob, denoted below by $JSON_BLOB\nSpecifically, this $JSON_BLOB should have a \"action\" key (with the name of the tool to use) and a \"action_input\" key (with the input to the tool going here). \nThe $JSON_BLOB should only contain a SINGLE action, do NOT return a list of multiple actions. Here is an example of a valid $JSON_BLOB:\n\n\\`\\`\\`\n{{\n  \"action\": \"calculator\",\n  \"action_input\": \"1 + 2\"\n}}\n\\`\\`\\`\n\nALWAYS use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: \n\\`\\`\\`\n$JSON_BLOB\n\\`\\`\\`\nObservation: the result of the action\n... (this Thought/Action/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\nconst SUFFIX = `Begin! Reminder to always use the exact characters \\`Final Answer\\` when responding.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2NoYXQvcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvY2hhdC9wcm9tcHQuanM/OWRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUFJFRklYID0gYEFuc3dlciB0aGUgZm9sbG93aW5nIHF1ZXN0aW9ucyBhcyBiZXN0IHlvdSBjYW4uIFlvdSBoYXZlIGFjY2VzcyB0byB0aGUgZm9sbG93aW5nIHRvb2xzOmA7XG5leHBvcnQgY29uc3QgRk9STUFUX0lOU1RSVUNUSU9OUyA9IGBUaGUgd2F5IHlvdSB1c2UgdGhlIHRvb2xzIGlzIGJ5IHNwZWNpZnlpbmcgYSBqc29uIGJsb2IsIGRlbm90ZWQgYmVsb3cgYnkgJEpTT05fQkxPQlxuU3BlY2lmaWNhbGx5LCB0aGlzICRKU09OX0JMT0Igc2hvdWxkIGhhdmUgYSBcImFjdGlvblwiIGtleSAod2l0aCB0aGUgbmFtZSBvZiB0aGUgdG9vbCB0byB1c2UpIGFuZCBhIFwiYWN0aW9uX2lucHV0XCIga2V5ICh3aXRoIHRoZSBpbnB1dCB0byB0aGUgdG9vbCBnb2luZyBoZXJlKS4gXG5UaGUgJEpTT05fQkxPQiBzaG91bGQgb25seSBjb250YWluIGEgU0lOR0xFIGFjdGlvbiwgZG8gTk9UIHJldHVybiBhIGxpc3Qgb2YgbXVsdGlwbGUgYWN0aW9ucy4gSGVyZSBpcyBhbiBleGFtcGxlIG9mIGEgdmFsaWQgJEpTT05fQkxPQjpcblxuXFxgXFxgXFxgXG57e1xuICBcImFjdGlvblwiOiBcImNhbGN1bGF0b3JcIixcbiAgXCJhY3Rpb25faW5wdXRcIjogXCIxICsgMlwiXG59fVxuXFxgXFxgXFxgXG5cbkFMV0FZUyB1c2UgdGhlIGZvbGxvd2luZyBmb3JtYXQ6XG5cblF1ZXN0aW9uOiB0aGUgaW5wdXQgcXVlc3Rpb24geW91IG11c3QgYW5zd2VyXG5UaG91Z2h0OiB5b3Ugc2hvdWxkIGFsd2F5cyB0aGluayBhYm91dCB3aGF0IHRvIGRvXG5BY3Rpb246IFxuXFxgXFxgXFxgXG4kSlNPTl9CTE9CXG5cXGBcXGBcXGBcbk9ic2VydmF0aW9uOiB0aGUgcmVzdWx0IG9mIHRoZSBhY3Rpb25cbi4uLiAodGhpcyBUaG91Z2h0L0FjdGlvbi9PYnNlcnZhdGlvbiBjYW4gcmVwZWF0IE4gdGltZXMpXG5UaG91Z2h0OiBJIG5vdyBrbm93IHRoZSBmaW5hbCBhbnN3ZXJcbkZpbmFsIEFuc3dlcjogdGhlIGZpbmFsIGFuc3dlciB0byB0aGUgb3JpZ2luYWwgaW5wdXQgcXVlc3Rpb25gO1xuZXhwb3J0IGNvbnN0IFNVRkZJWCA9IGBCZWdpbiEgUmVtaW5kZXIgdG8gYWx3YXlzIHVzZSB0aGUgZXhhY3QgY2hhcmFjdGVycyBcXGBGaW5hbCBBbnN3ZXJcXGAgd2hlbiByZXNwb25kaW5nLmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/chat/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/chat_convo/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/chat_convo/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatConversationalAgent: () => (/* binding */ ChatConversationalAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/prompt.js\");\n\n\n\n\n\n\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain_agents.createStructuredChatAgent.html | createStructuredChatAgent method instead}.\n */\nclass ChatConversationalAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_3__.Agent {\n    static lc_name() {\n        return \"ChatConversationalAgent\";\n    }\n    constructor(input) {\n        const outputParser = input.outputParser ?? ChatConversationalAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n    }\n    _agentType() {\n        return \"chat-conversational-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Constructs the agent scratchpad based on the agent steps. It returns an\n     * array of base messages representing the thoughts of the agent.\n     * @param steps The agent steps to construct the scratchpad from.\n     * @returns An array of base messages representing the thoughts of the agent.\n     */\n    async constructScratchPad(steps) {\n        const thoughts = [];\n        for (const step of steps) {\n            thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.AIMessage(step.action.log));\n            thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage((0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.TEMPLATE_TOOL_RESPONSE, \"f-string\", {\n                observation: step.observation,\n            })));\n        }\n        return thoughts;\n    }\n    /**\n     * Returns the default output parser for the ChatConversationalAgent\n     * class. It takes optional fields as arguments to customize the output\n     * parser.\n     * @param fields Optional fields to customize the output parser.\n     * @returns The default output parser for the ChatConversationalAgent class.\n     */\n    static getDefaultOutputParser(fields) {\n        if (fields?.llm) {\n            return _outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ChatConversationalAgentOutputParserWithRetries.fromLLM(fields.llm, {\n                toolNames: fields.toolNames,\n            });\n        }\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ChatConversationalAgentOutputParserWithRetries({\n            toolNames: fields?.toolNames,\n        });\n    }\n    /**\n     * Create prompt in the style of the ChatConversationAgent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.systemMessage - String to put before the list of tools.\n     * @param args.humanMessage - String to put after the list of tools.\n     * @param args.outputParser - Output parser to use for formatting.\n     */\n    static createPrompt(tools, args) {\n        const systemMessage = (args?.systemMessage ?? _prompt_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_PREFIX) + _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PREFIX_END;\n        const humanMessage = args?.humanMessage ?? _prompt_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_SUFFIX;\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const toolNames = tools.map((tool) => tool.name);\n        const outputParser = args?.outputParser ??\n            ChatConversationalAgent.getDefaultOutputParser({ toolNames });\n        const formatInstructions = outputParser.getFormatInstructions({\n            toolNames,\n        });\n        const renderedHumanMessage = (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(humanMessage, \"f-string\", {\n            format_instructions: formatInstructions,\n            tools: toolStrings,\n        });\n        const messages = [\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(systemMessage),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.MessagesPlaceholder(\"chat_history\"),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(renderedHumanMessage),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.MessagesPlaceholder(\"agent_scratchpad\"),\n        ];\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\n    }\n    /**\n     * Creates an instance of the ChatConversationalAgent class from a\n     * BaseLanguageModel and a set of tools. It takes optional arguments to\n     * customize the agent.\n     * @param llm The BaseLanguageModel to create the agent from.\n     * @param tools The set of tools to create the agent from.\n     * @param args Optional arguments to customize the agent.\n     * @returns An instance of the ChatConversationalAgent class.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        ChatConversationalAgent.validateTools(tools);\n        const outputParser = args?.outputParser ??\n            ChatConversationalAgent.getDefaultOutputParser({\n                llm,\n                toolNames: tools.map((tool) => tool.name),\n            });\n        const prompt = ChatConversationalAgent.createPrompt(tools, {\n            ...args,\n            outputParser,\n        });\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        return new ChatConversationalAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/chat_convo/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/chat_convo/outputParser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/chat_convo/outputParser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatConversationalAgentOutputParser: () => (/* binding */ ChatConversationalAgentOutputParser),\n/* harmony export */   ChatConversationalAgentOutputParserWithRetries: () => (/* binding */ ChatConversationalAgentOutputParserWithRetries)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/prompt.js\");\n/* harmony import */ var _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../output_parsers/fix.js */ \"(rsc)/./node_modules/langchain/dist/output_parsers/fix.js\");\n\n\n\n\n\n/**\n * Class that represents an output parser for the ChatConversationalAgent\n * class. It extends the AgentActionOutputParser class and provides\n * methods for parsing the output of the MRKL chain into agent actions.\n */\nclass ChatConversationalAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    /**\n     * Parses the given text into an AgentAction or AgentFinish object. If an\n     * output fixing parser is defined, uses it to parse the text.\n     * @param text Text to parse.\n     * @returns Promise that resolves to an AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        let jsonOutput = text.trim();\n        if (jsonOutput.includes(\"```json\") || jsonOutput.includes(\"```\")) {\n            const testString = jsonOutput.includes(\"```json\") ? \"```json\" : \"```\";\n            const firstIndex = jsonOutput.indexOf(testString);\n            const actionInputIndex = jsonOutput.indexOf(\"action_input\");\n            if (actionInputIndex > firstIndex) {\n                jsonOutput = jsonOutput\n                    .slice(firstIndex + testString.length)\n                    .trimStart();\n                const lastIndex = jsonOutput.lastIndexOf(\"```\");\n                if (lastIndex !== -1) {\n                    jsonOutput = jsonOutput.slice(0, lastIndex).trimEnd();\n                }\n            }\n        }\n        try {\n            const response = JSON.parse(jsonOutput);\n            const { action, action_input } = response;\n            if (action === \"Final Answer\") {\n                return { returnValues: { output: action_input }, log: text };\n            }\n            return { tool: action, toolInput: action_input, log: text };\n        }\n        catch (e) {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n        }\n    }\n    /**\n     * Returns the format instructions as a string. If the 'raw' option is\n     * true, returns the raw FORMAT_INSTRUCTIONS.\n     * @param options Options for getting the format instructions.\n     * @returns Format instructions as a string.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\n/**\n * Class that represents an output parser with retries for the\n * ChatConversationalAgent class. It extends the AgentActionOutputParser\n * class and provides methods for parsing the output of the MRKL chain\n * into agent actions with retry functionality.\n */\nclass ChatConversationalAgentOutputParserWithRetries extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n        Object.defineProperty(this, \"baseParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputFixingParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.toolNames = fields.toolNames ?? this.toolNames;\n        this.baseParser =\n            fields?.baseParser ??\n                new ChatConversationalAgentOutputParser({ toolNames: this.toolNames });\n        this.outputFixingParser = fields?.outputFixingParser;\n    }\n    /**\n     * Returns the format instructions as a string.\n     * @returns Format instructions as a string.\n     */\n    getFormatInstructions(options) {\n        if (options.raw) {\n            return _prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS;\n        }\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: options.toolNames.join(\", \"),\n        });\n    }\n    /**\n     * Parses the given text into an AgentAction or AgentFinish object.\n     * @param text Text to parse.\n     * @returns Promise that resolves to an AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        if (this.outputFixingParser !== undefined) {\n            return this.outputFixingParser.parse(text);\n        }\n        return this.baseParser.parse(text);\n    }\n    /**\n     * Static method to create a new\n     * ChatConversationalAgentOutputParserWithRetries from a BaseLanguageModelInterface\n     * and options. If no base parser is provided in the options, a new\n     * ChatConversationalAgentOutputParser is created. An OutputFixingParser\n     * is also created from the BaseLanguageModelInterface and the base parser.\n     * @param llm BaseLanguageModelInterface instance used to create the OutputFixingParser.\n     * @param options Options for creating the ChatConversationalAgentOutputParserWithRetries instance.\n     * @returns A new instance of ChatConversationalAgentOutputParserWithRetries.\n     */\n    static fromLLM(llm, options) {\n        const baseParser = options.baseParser ??\n            new ChatConversationalAgentOutputParser({\n                toolNames: options.toolNames ?? [],\n            });\n        const outputFixingParser = _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__.OutputFixingParser.fromLLM(llm, baseParser);\n        return new ChatConversationalAgentOutputParserWithRetries({\n            baseParser,\n            outputFixingParser,\n            toolNames: options.toolNames,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/chat_convo/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/chat_convo/prompt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/chat_convo/prompt.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_PREFIX: () => (/* binding */ DEFAULT_PREFIX),\n/* harmony export */   DEFAULT_SUFFIX: () => (/* binding */ DEFAULT_SUFFIX),\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX_END: () => (/* binding */ PREFIX_END),\n/* harmony export */   TEMPLATE_TOOL_RESPONSE: () => (/* binding */ TEMPLATE_TOOL_RESPONSE)\n/* harmony export */ });\nconst DEFAULT_PREFIX = `Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful system that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.`;\nconst PREFIX_END = ` However, above all else, all responses must adhere to the format of RESPONSE FORMAT INSTRUCTIONS.`;\nconst FORMAT_INSTRUCTIONS = `RESPONSE FORMAT INSTRUCTIONS\n----------------------------\n\nOutput a JSON markdown code snippet containing a valid JSON object in one of two formats:\n\n**Option 1:**\nUse this if you want the human to use a tool.\nMarkdown code snippet formatted in the following schema:\n\n\\`\\`\\`json\n{{{{\n    \"action\": string, // The action to take. Must be one of [{tool_names}]\n    \"action_input\": string // The input to the action. May be a stringified object.\n}}}}\n\\`\\`\\`\n\n**Option #2:**\nUse this if you want to respond directly and conversationally to the human. Markdown code snippet formatted in the following schema:\n\n\\`\\`\\`json\n{{{{\n    \"action\": \"Final Answer\",\n    \"action_input\": string // You should put what you want to return to use here and make sure to use valid json newline characters.\n}}}}\n\\`\\`\\`\n\nFor both options, remember to always include the surrounding markdown code snippet delimiters (begin with \"\\`\\`\\`json\" and end with \"\\`\\`\\`\")!\n`;\nconst DEFAULT_SUFFIX = `TOOLS\n------\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\n\n{tools}\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\n\n{{input}}`;\nconst TEMPLATE_TOOL_RESPONSE = `TOOL RESPONSE:\n---------------------\n{observation}\n\nUSER'S INPUT\n--------------------\n\nOkay, so what is the response to my last comment? If using information obtained from the tools you must mention it explicitly without mentioning the tool names - I have forgotten all TOOL RESPONSES! Remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2NoYXRfY29udm8vcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87O0FBRVA7O0FBRUE7O0FBRUE7QUFDTztBQUNBO0FBQ1A7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4REFBOEQsV0FBVztBQUN6RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTs7QUFFQSxDQUFDOztBQUVELENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBLEVBQUUsT0FBTztBQUNGO0FBQ1A7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9jaGF0X2NvbnZvL3Byb21wdC5qcz8yMmM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBERUZBVUxUX1BSRUZJWCA9IGBBc3Npc3RhbnQgaXMgYSBsYXJnZSBsYW5ndWFnZSBtb2RlbCB0cmFpbmVkIGJ5IE9wZW5BSS5cblxuQXNzaXN0YW50IGlzIGRlc2lnbmVkIHRvIGJlIGFibGUgdG8gYXNzaXN0IHdpdGggYSB3aWRlIHJhbmdlIG9mIHRhc2tzLCBmcm9tIGFuc3dlcmluZyBzaW1wbGUgcXVlc3Rpb25zIHRvIHByb3ZpZGluZyBpbi1kZXB0aCBleHBsYW5hdGlvbnMgYW5kIGRpc2N1c3Npb25zIG9uIGEgd2lkZSByYW5nZSBvZiB0b3BpY3MuIEFzIGEgbGFuZ3VhZ2UgbW9kZWwsIEFzc2lzdGFudCBpcyBhYmxlIHRvIGdlbmVyYXRlIGh1bWFuLWxpa2UgdGV4dCBiYXNlZCBvbiB0aGUgaW5wdXQgaXQgcmVjZWl2ZXMsIGFsbG93aW5nIGl0IHRvIGVuZ2FnZSBpbiBuYXR1cmFsLXNvdW5kaW5nIGNvbnZlcnNhdGlvbnMgYW5kIHByb3ZpZGUgcmVzcG9uc2VzIHRoYXQgYXJlIGNvaGVyZW50IGFuZCByZWxldmFudCB0byB0aGUgdG9waWMgYXQgaGFuZC5cblxuQXNzaXN0YW50IGlzIGNvbnN0YW50bHkgbGVhcm5pbmcgYW5kIGltcHJvdmluZywgYW5kIGl0cyBjYXBhYmlsaXRpZXMgYXJlIGNvbnN0YW50bHkgZXZvbHZpbmcuIEl0IGlzIGFibGUgdG8gcHJvY2VzcyBhbmQgdW5kZXJzdGFuZCBsYXJnZSBhbW91bnRzIG9mIHRleHQsIGFuZCBjYW4gdXNlIHRoaXMga25vd2xlZGdlIHRvIHByb3ZpZGUgYWNjdXJhdGUgYW5kIGluZm9ybWF0aXZlIHJlc3BvbnNlcyB0byBhIHdpZGUgcmFuZ2Ugb2YgcXVlc3Rpb25zLiBBZGRpdGlvbmFsbHksIEFzc2lzdGFudCBpcyBhYmxlIHRvIGdlbmVyYXRlIGl0cyBvd24gdGV4dCBiYXNlZCBvbiB0aGUgaW5wdXQgaXQgcmVjZWl2ZXMsIGFsbG93aW5nIGl0IHRvIGVuZ2FnZSBpbiBkaXNjdXNzaW9ucyBhbmQgcHJvdmlkZSBleHBsYW5hdGlvbnMgYW5kIGRlc2NyaXB0aW9ucyBvbiBhIHdpZGUgcmFuZ2Ugb2YgdG9waWNzLlxuXG5PdmVyYWxsLCBBc3Npc3RhbnQgaXMgYSBwb3dlcmZ1bCBzeXN0ZW0gdGhhdCBjYW4gaGVscCB3aXRoIGEgd2lkZSByYW5nZSBvZiB0YXNrcyBhbmQgcHJvdmlkZSB2YWx1YWJsZSBpbnNpZ2h0cyBhbmQgaW5mb3JtYXRpb24gb24gYSB3aWRlIHJhbmdlIG9mIHRvcGljcy4gV2hldGhlciB5b3UgbmVlZCBoZWxwIHdpdGggYSBzcGVjaWZpYyBxdWVzdGlvbiBvciBqdXN0IHdhbnQgdG8gaGF2ZSBhIGNvbnZlcnNhdGlvbiBhYm91dCBhIHBhcnRpY3VsYXIgdG9waWMsIEFzc2lzdGFudCBpcyBoZXJlIHRvIGFzc2lzdC5gO1xuZXhwb3J0IGNvbnN0IFBSRUZJWF9FTkQgPSBgIEhvd2V2ZXIsIGFib3ZlIGFsbCBlbHNlLCBhbGwgcmVzcG9uc2VzIG11c3QgYWRoZXJlIHRvIHRoZSBmb3JtYXQgb2YgUkVTUE9OU0UgRk9STUFUIElOU1RSVUNUSU9OUy5gO1xuZXhwb3J0IGNvbnN0IEZPUk1BVF9JTlNUUlVDVElPTlMgPSBgUkVTUE9OU0UgRk9STUFUIElOU1RSVUNUSU9OU1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5PdXRwdXQgYSBKU09OIG1hcmtkb3duIGNvZGUgc25pcHBldCBjb250YWluaW5nIGEgdmFsaWQgSlNPTiBvYmplY3QgaW4gb25lIG9mIHR3byBmb3JtYXRzOlxuXG4qKk9wdGlvbiAxOioqXG5Vc2UgdGhpcyBpZiB5b3Ugd2FudCB0aGUgaHVtYW4gdG8gdXNlIGEgdG9vbC5cbk1hcmtkb3duIGNvZGUgc25pcHBldCBmb3JtYXR0ZWQgaW4gdGhlIGZvbGxvd2luZyBzY2hlbWE6XG5cblxcYFxcYFxcYGpzb25cbnt7e3tcbiAgICBcImFjdGlvblwiOiBzdHJpbmcsIC8vIFRoZSBhY3Rpb24gdG8gdGFrZS4gTXVzdCBiZSBvbmUgb2YgW3t0b29sX25hbWVzfV1cbiAgICBcImFjdGlvbl9pbnB1dFwiOiBzdHJpbmcgLy8gVGhlIGlucHV0IHRvIHRoZSBhY3Rpb24uIE1heSBiZSBhIHN0cmluZ2lmaWVkIG9iamVjdC5cbn19fX1cblxcYFxcYFxcYFxuXG4qKk9wdGlvbiAjMjoqKlxuVXNlIHRoaXMgaWYgeW91IHdhbnQgdG8gcmVzcG9uZCBkaXJlY3RseSBhbmQgY29udmVyc2F0aW9uYWxseSB0byB0aGUgaHVtYW4uIE1hcmtkb3duIGNvZGUgc25pcHBldCBmb3JtYXR0ZWQgaW4gdGhlIGZvbGxvd2luZyBzY2hlbWE6XG5cblxcYFxcYFxcYGpzb25cbnt7e3tcbiAgICBcImFjdGlvblwiOiBcIkZpbmFsIEFuc3dlclwiLFxuICAgIFwiYWN0aW9uX2lucHV0XCI6IHN0cmluZyAvLyBZb3Ugc2hvdWxkIHB1dCB3aGF0IHlvdSB3YW50IHRvIHJldHVybiB0byB1c2UgaGVyZSBhbmQgbWFrZSBzdXJlIHRvIHVzZSB2YWxpZCBqc29uIG5ld2xpbmUgY2hhcmFjdGVycy5cbn19fX1cblxcYFxcYFxcYFxuXG5Gb3IgYm90aCBvcHRpb25zLCByZW1lbWJlciB0byBhbHdheXMgaW5jbHVkZSB0aGUgc3Vycm91bmRpbmcgbWFya2Rvd24gY29kZSBzbmlwcGV0IGRlbGltaXRlcnMgKGJlZ2luIHdpdGggXCJcXGBcXGBcXGBqc29uXCIgYW5kIGVuZCB3aXRoIFwiXFxgXFxgXFxgXCIpIVxuYDtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NVRkZJWCA9IGBUT09MU1xuLS0tLS0tXG5Bc3Npc3RhbnQgY2FuIGFzayB0aGUgdXNlciB0byB1c2UgdG9vbHMgdG8gbG9vayB1cCBpbmZvcm1hdGlvbiB0aGF0IG1heSBiZSBoZWxwZnVsIGluIGFuc3dlcmluZyB0aGUgdXNlcnMgb3JpZ2luYWwgcXVlc3Rpb24uIFRoZSB0b29scyB0aGUgaHVtYW4gY2FuIHVzZSBhcmU6XG5cbnt0b29sc31cblxue2Zvcm1hdF9pbnN0cnVjdGlvbnN9XG5cblVTRVInUyBJTlBVVFxuLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkhlcmUgaXMgdGhlIHVzZXIncyBpbnB1dCAocmVtZW1iZXIgdG8gcmVzcG9uZCB3aXRoIGEgbWFya2Rvd24gY29kZSBzbmlwcGV0IG9mIGEganNvbiBibG9iIHdpdGggYSBzaW5nbGUgYWN0aW9uLCBhbmQgTk9USElORyBlbHNlKTpcblxue3tpbnB1dH19YDtcbmV4cG9ydCBjb25zdCBURU1QTEFURV9UT09MX1JFU1BPTlNFID0gYFRPT0wgUkVTUE9OU0U6XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbntvYnNlcnZhdGlvbn1cblxuVVNFUidTIElOUFVUXG4tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5Pa2F5LCBzbyB3aGF0IGlzIHRoZSByZXNwb25zZSB0byBteSBsYXN0IGNvbW1lbnQ/IElmIHVzaW5nIGluZm9ybWF0aW9uIG9idGFpbmVkIGZyb20gdGhlIHRvb2xzIHlvdSBtdXN0IG1lbnRpb24gaXQgZXhwbGljaXRseSB3aXRob3V0IG1lbnRpb25pbmcgdGhlIHRvb2wgbmFtZXMgLSBJIGhhdmUgZm9yZ290dGVuIGFsbCBUT09MIFJFU1BPTlNFUyEgUmVtZW1iZXIgdG8gcmVzcG9uZCB3aXRoIGEgbWFya2Rvd24gY29kZSBzbmlwcGV0IG9mIGEganNvbiBibG9iIHdpdGggYSBzaW5nbGUgYWN0aW9uLCBhbmQgTk9USElORyBlbHNlLmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/chat_convo/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/executor.js":
/*!********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/executor.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentExecutor: () => (/* binding */ AgentExecutor),\n/* harmony export */   AgentExecutorIterator: () => (/* binding */ AgentExecutorIterator),\n/* harmony export */   ExceptionTool: () => (/* binding */ ExceptionTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/callbacks/manager */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/callbacks/manager.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _chains_base_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chains/base.js */ \"(rsc)/./node_modules/langchain/dist/chains/base.js\");\n\n\n\n\n\n\n\nclass AgentExecutorIterator extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_4__.Serializable {\n    get finalOutputs() {\n        return this._finalOutputs;\n    }\n    /** Intended to be used as a setter method, needs to be async. */\n    async setFinalOutputs(value) {\n        this._finalOutputs = undefined;\n        if (value) {\n            const preparedOutputs = await this.agentExecutor.prepOutputs(this.inputs, value, true);\n            this._finalOutputs = preparedOutputs;\n        }\n    }\n    get nameToToolMap() {\n        const toolMap = this.agentExecutor.tools.map((tool) => ({\n            [tool.name]: tool,\n        }));\n        return Object.assign({}, ...toolMap);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"executor_iterator\"]\n        });\n        Object.defineProperty(this, \"agentExecutor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"config\" */\n        Object.defineProperty(this, \"runName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_finalOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"intermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"iterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        this.agentExecutor = fields.agentExecutor;\n        this.inputs = fields.inputs;\n        this.callbacks = fields.callbacks;\n        this.tags = fields.tags;\n        this.metadata = fields.metadata;\n        this.runName = fields.runName;\n        this.runManager = fields.runManager;\n        this.config = fields.config;\n    }\n    /**\n     * Reset the iterator to its initial state, clearing intermediate steps,\n     * iterations, and the final output.\n     */\n    reset() {\n        this.intermediateSteps = [];\n        this.iterations = 0;\n        this._finalOutputs = undefined;\n    }\n    updateIterations() {\n        this.iterations += 1;\n    }\n    async *streamIterator() {\n        this.reset();\n        // Loop to handle iteration\n        while (true) {\n            try {\n                if (this.iterations === 0) {\n                    await this.onFirstStep();\n                }\n                const result = await this._callNext();\n                yield result;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                if (\"message\" in e &&\n                    e.message.startsWith(\"Final outputs already reached: \")) {\n                    if (!this.finalOutputs) {\n                        throw e;\n                    }\n                    return this.finalOutputs;\n                }\n                if (this.runManager) {\n                    await this.runManager.handleChainError(e);\n                }\n                throw e;\n            }\n        }\n    }\n    /**\n     * Perform any necessary setup for the first step\n     * of the asynchronous iterator.\n     */\n    async onFirstStep() {\n        if (this.iterations === 0) {\n            const callbackManager = await _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_2__.CallbackManager.configure(this.callbacks, this.agentExecutor.callbacks, this.tags, this.agentExecutor.tags, this.metadata, this.agentExecutor.metadata, {\n                verbose: this.agentExecutor.verbose,\n            });\n            this.runManager = await callbackManager?.handleChainStart(this.agentExecutor.toJSON(), this.inputs, undefined, undefined, this.tags, this.metadata, this.runName);\n        }\n    }\n    /**\n     * Execute the next step in the chain using the\n     * AgentExecutor's _takeNextStep method.\n     */\n    async _executeNextStep(runManager) {\n        return this.agentExecutor._takeNextStep(this.nameToToolMap, this.inputs, this.intermediateSteps, runManager, this.config);\n    }\n    /**\n     * Process the output of the next step,\n     * handling AgentFinish and tool return cases.\n     */\n    async _processNextStepOutput(nextStepOutput, runManager) {\n        if (\"returnValues\" in nextStepOutput) {\n            const output = await this.agentExecutor._return(nextStepOutput, this.intermediateSteps, runManager);\n            if (this.runManager) {\n                await this.runManager.handleChainEnd(output);\n            }\n            await this.setFinalOutputs(output);\n            return output;\n        }\n        this.intermediateSteps = this.intermediateSteps.concat(nextStepOutput);\n        let output = {};\n        if (Array.isArray(nextStepOutput) && nextStepOutput.length === 1) {\n            const nextStep = nextStepOutput[0];\n            const toolReturn = await this.agentExecutor._getToolReturn(nextStep);\n            if (toolReturn) {\n                output = await this.agentExecutor._return(toolReturn, this.intermediateSteps, runManager);\n                if (this.runManager) {\n                    await this.runManager.handleChainEnd(output);\n                }\n                await this.setFinalOutputs(output);\n            }\n        }\n        output = { intermediateSteps: nextStepOutput };\n        return output;\n    }\n    async _stop() {\n        const output = await this.agentExecutor.agent.returnStoppedResponse(this.agentExecutor.earlyStoppingMethod, this.intermediateSteps, this.inputs);\n        const returnedOutput = await this.agentExecutor._return(output, this.intermediateSteps, this.runManager);\n        await this.setFinalOutputs(returnedOutput);\n        return returnedOutput;\n    }\n    async _callNext() {\n        // final output already reached: stopiteration (final output)\n        if (this.finalOutputs) {\n            throw new Error(`Final outputs already reached: ${JSON.stringify(this.finalOutputs, null, 2)}`);\n        }\n        // timeout/max iterations: stopiteration (stopped response)\n        if (!this.agentExecutor.shouldContinueGetter(this.iterations)) {\n            return this._stop();\n        }\n        const nextStepOutput = await this._executeNextStep(this.runManager);\n        const output = await this._processNextStepOutput(nextStepOutput, this.runManager);\n        this.updateIterations();\n        return output;\n    }\n}\n/**\n * Tool that just returns the query.\n * Used for exception tracking.\n */\nclass ExceptionTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"_Exception\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Exception tool\"\n        });\n    }\n    async _call(query) {\n        return query;\n    }\n}\n/**\n * A chain managing an agent using tools.\n * @augments BaseChain\n * @example\n * ```typescript\n *\n * const executor = AgentExecutor.fromAgentAndTools({\n *   agent: async () => loadAgentFromLangchainHub(),\n *   tools: [new SerpAPI(), new Calculator()],\n *   returnIntermediateSteps: true,\n * });\n *\n * const result = await executor.invoke({\n *   input: `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`,\n * });\n *\n * ```\n */\nclass AgentExecutor extends _chains_base_js__WEBPACK_IMPORTED_MODULE_6__.BaseChain {\n    static lc_name() {\n        return \"AgentExecutor\";\n    }\n    get lc_namespace() {\n        return [\"langchain\", \"agents\", \"executor\"];\n    }\n    get inputKeys() {\n        return this.agent.inputKeys;\n    }\n    get outputKeys() {\n        return this.agent.returnValues;\n    }\n    constructor(input) {\n        let agent;\n        let returnOnlyOutputs = true;\n        if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.Runnable.isRunnable(input.agent)) {\n            if (_agent_js__WEBPACK_IMPORTED_MODULE_5__.AgentRunnableSequence.isAgentRunnableSequence(input.agent)) {\n                if (input.agent.singleAction) {\n                    agent = new _agent_js__WEBPACK_IMPORTED_MODULE_5__.RunnableSingleActionAgent({\n                        runnable: input.agent,\n                        streamRunnable: input.agent.streamRunnable,\n                    });\n                }\n                else {\n                    agent = new _agent_js__WEBPACK_IMPORTED_MODULE_5__.RunnableMultiActionAgent({\n                        runnable: input.agent,\n                        streamRunnable: input.agent.streamRunnable,\n                    });\n                }\n            }\n            else {\n                agent = new _agent_js__WEBPACK_IMPORTED_MODULE_5__.RunnableMultiActionAgent({ runnable: input.agent });\n            }\n            // TODO: Update BaseChain implementation on breaking change\n            returnOnlyOutputs = false;\n        }\n        else {\n            if ((0,_agent_js__WEBPACK_IMPORTED_MODULE_5__.isRunnableAgent)(input.agent)) {\n                returnOnlyOutputs = false;\n            }\n            agent = input.agent;\n        }\n        super(input);\n        Object.defineProperty(this, \"agent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 15\n        });\n        Object.defineProperty(this, \"earlyStoppingMethod\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"force\"\n        });\n        // TODO: Update BaseChain implementation on breaking change to include this\n        Object.defineProperty(this, \"returnOnlyOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * How to handle errors raised by the agent's output parser.\n          Defaults to `False`, which raises the error.\n      \n          If `true`, the error will be sent back to the LLM as an observation.\n          If a string, the string itself will be sent to the LLM as an observation.\n          If a callable function, the function will be called with the exception\n          as an argument, and the result of that function will be passed to the agent\n          as an observation.\n         */\n        Object.defineProperty(this, \"handleParsingErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.agent = agent;\n        this.tools = input.tools;\n        this.handleParsingErrors =\n            input.handleParsingErrors ?? this.handleParsingErrors;\n        this.returnOnlyOutputs = returnOnlyOutputs;\n        if (this.agent._agentActionType() === \"multi\") {\n            for (const tool of this.tools) {\n                if (tool.returnDirect) {\n                    throw new Error(`Tool with return direct ${tool.name} not supported for multi-action agent.`);\n                }\n            }\n        }\n        this.returnIntermediateSteps =\n            input.returnIntermediateSteps ?? this.returnIntermediateSteps;\n        this.maxIterations = input.maxIterations ?? this.maxIterations;\n        this.earlyStoppingMethod =\n            input.earlyStoppingMethod ?? this.earlyStoppingMethod;\n    }\n    /** Create from agent and a list of tools. */\n    static fromAgentAndTools(fields) {\n        return new AgentExecutor(fields);\n    }\n    get shouldContinueGetter() {\n        return this.shouldContinue.bind(this);\n    }\n    /**\n     * Method that checks if the agent execution should continue based on the\n     * number of iterations.\n     * @param iterations The current number of iterations.\n     * @returns A boolean indicating whether the agent execution should continue.\n     */\n    shouldContinue(iterations) {\n        return this.maxIterations === undefined || iterations < this.maxIterations;\n    }\n    /** @ignore */\n    async _call(inputs, runManager, config) {\n        const toolsByName = Object.fromEntries(this.tools.map((t) => [t.name.toLowerCase(), t]));\n        const steps = [];\n        let iterations = 0;\n        const getOutput = async (finishStep) => {\n            const { returnValues } = finishStep;\n            const additional = await this.agent.prepareForOutput(returnValues, steps);\n            await runManager?.handleAgentEnd(finishStep);\n            let response;\n            if (this.returnIntermediateSteps) {\n                response = { ...returnValues, intermediateSteps: steps, ...additional };\n            }\n            else {\n                response = { ...returnValues, ...additional };\n            }\n            if (!this.returnOnlyOutputs) {\n                response = { ...inputs, ...response };\n            }\n            return response;\n        };\n        while (this.shouldContinue(iterations)) {\n            let output;\n            try {\n                output = await this.agent.plan(steps, inputs, runManager?.getChild(), config);\n            }\n            catch (e) {\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (e instanceof _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_3__.OutputParserException) {\n                    let observation;\n                    let text = e.message;\n                    if (this.handleParsingErrors === true) {\n                        if (e.sendToLLM) {\n                            observation = e.observation;\n                            text = e.llmOutput ?? \"\";\n                        }\n                        else {\n                            observation = \"Invalid or incomplete response\";\n                        }\n                    }\n                    else if (typeof this.handleParsingErrors === \"string\") {\n                        observation = this.handleParsingErrors;\n                    }\n                    else if (typeof this.handleParsingErrors === \"function\") {\n                        observation = this.handleParsingErrors(e);\n                    }\n                    else {\n                        throw e;\n                    }\n                    output = {\n                        tool: \"_Exception\",\n                        toolInput: observation,\n                        log: text,\n                    };\n                }\n                else {\n                    throw e;\n                }\n            }\n            // Check if the agent has finished\n            if (\"returnValues\" in output) {\n                return getOutput(output);\n            }\n            let actions;\n            if (Array.isArray(output)) {\n                actions = output;\n            }\n            else {\n                actions = [output];\n            }\n            const newSteps = await Promise.all(actions.map(async (action) => {\n                await runManager?.handleAgentAction(action);\n                const tool = action.tool === \"_Exception\"\n                    ? new ExceptionTool()\n                    : toolsByName[action.tool?.toLowerCase()];\n                let observation;\n                try {\n                    observation = tool\n                        ? await tool.invoke(action.toolInput, (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, { callbacks: runManager?.getChild() }))\n                        : `${action.tool} is not a valid tool, try another one.`;\n                }\n                catch (e) {\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (e instanceof _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.ToolInputParsingException) {\n                        if (this.handleParsingErrors === true) {\n                            observation =\n                                \"Invalid or incomplete tool input. Please try again.\";\n                        }\n                        else if (typeof this.handleParsingErrors === \"string\") {\n                            observation = this.handleParsingErrors;\n                        }\n                        else if (typeof this.handleParsingErrors === \"function\") {\n                            observation = this.handleParsingErrors(e);\n                        }\n                        else {\n                            throw e;\n                        }\n                        observation = await new ExceptionTool().call(observation, runManager?.getChild());\n                        return { action, observation: observation ?? \"\" };\n                    }\n                }\n                return { action, observation: observation ?? \"\" };\n            }));\n            steps.push(...newSteps);\n            const lastStep = steps[steps.length - 1];\n            const lastTool = toolsByName[lastStep.action.tool?.toLowerCase()];\n            if (lastTool?.returnDirect) {\n                return getOutput({\n                    returnValues: { [this.agent.returnValues[0]]: lastStep.observation },\n                    log: \"\",\n                });\n            }\n            iterations += 1;\n        }\n        const finish = await this.agent.returnStoppedResponse(this.earlyStoppingMethod, steps, inputs);\n        return getOutput(finish);\n    }\n    async _takeNextStep(nameToolMap, inputs, intermediateSteps, runManager, config) {\n        let output;\n        try {\n            output = await this.agent.plan(intermediateSteps, inputs, runManager?.getChild(), config);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (e instanceof _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_3__.OutputParserException) {\n                let observation;\n                let text = e.message;\n                if (this.handleParsingErrors === true) {\n                    if (e.sendToLLM) {\n                        observation = e.observation;\n                        text = e.llmOutput ?? \"\";\n                    }\n                    else {\n                        observation = \"Invalid or incomplete response\";\n                    }\n                }\n                else if (typeof this.handleParsingErrors === \"string\") {\n                    observation = this.handleParsingErrors;\n                }\n                else if (typeof this.handleParsingErrors === \"function\") {\n                    observation = this.handleParsingErrors(e);\n                }\n                else {\n                    throw e;\n                }\n                output = {\n                    tool: \"_Exception\",\n                    toolInput: observation,\n                    log: text,\n                };\n            }\n            else {\n                throw e;\n            }\n        }\n        if (\"returnValues\" in output) {\n            return output;\n        }\n        let actions;\n        if (Array.isArray(output)) {\n            actions = output;\n        }\n        else {\n            actions = [output];\n        }\n        const result = [];\n        for (const agentAction of actions) {\n            let observation = \"\";\n            if (runManager) {\n                await runManager?.handleAgentAction(agentAction);\n            }\n            if (agentAction.tool in nameToolMap) {\n                const tool = nameToolMap[agentAction.tool];\n                try {\n                    observation = await tool.call(agentAction.toolInput, runManager?.getChild());\n                }\n                catch (e) {\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (e instanceof _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.ToolInputParsingException) {\n                        if (this.handleParsingErrors === true) {\n                            observation =\n                                \"Invalid or incomplete tool input. Please try again.\";\n                        }\n                        else if (typeof this.handleParsingErrors === \"string\") {\n                            observation = this.handleParsingErrors;\n                        }\n                        else if (typeof this.handleParsingErrors === \"function\") {\n                            observation = this.handleParsingErrors(e);\n                        }\n                        else {\n                            throw e;\n                        }\n                        observation = await new ExceptionTool().call(observation, runManager?.getChild());\n                    }\n                }\n            }\n            else {\n                observation = `${agentAction.tool} is not a valid tool, try another available tool: ${Object.keys(nameToolMap).join(\", \")}`;\n            }\n            result.push({\n                action: agentAction,\n                observation,\n            });\n        }\n        return result;\n    }\n    async _return(output, intermediateSteps, runManager) {\n        if (runManager) {\n            await runManager.handleAgentEnd(output);\n        }\n        const finalOutput = output.returnValues;\n        if (this.returnIntermediateSteps) {\n            finalOutput.intermediateSteps = intermediateSteps;\n        }\n        return finalOutput;\n    }\n    async _getToolReturn(nextStepOutput) {\n        const { action, observation } = nextStepOutput;\n        const nameToolMap = Object.fromEntries(this.tools.map((t) => [t.name.toLowerCase(), t]));\n        const [returnValueKey = \"output\"] = this.agent.returnValues;\n        // Invalid tools won't be in the map, so we return False.\n        if (action.tool in nameToolMap) {\n            if (nameToolMap[action.tool].returnDirect) {\n                return {\n                    returnValues: { [returnValueKey]: observation },\n                    log: \"\",\n                };\n            }\n        }\n        return null;\n    }\n    _returnStoppedResponse(earlyStoppingMethod) {\n        if (earlyStoppingMethod === \"force\") {\n            return {\n                returnValues: {\n                    output: \"Agent stopped due to iteration limit or time limit.\",\n                },\n                log: \"\",\n            };\n        }\n        throw new Error(`Got unsupported early_stopping_method: ${earlyStoppingMethod}`);\n    }\n    async *_streamIterator(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    inputs, options) {\n        const agentExecutorIterator = new AgentExecutorIterator({\n            inputs,\n            agentExecutor: this,\n            config: options,\n            // TODO: Deprecate these other parameters\n            metadata: options?.metadata,\n            tags: options?.tags,\n            callbacks: options?.callbacks,\n        });\n        const iterator = agentExecutorIterator.streamIterator();\n        for await (const step of iterator) {\n            if (!step) {\n                continue;\n            }\n            yield step;\n        }\n    }\n    _chainType() {\n        return \"agent_executor\";\n    }\n    serialize() {\n        throw new Error(\"Cannot serialize an AgentExecutor\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/log.js":
/*!*********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/format_scratchpad/log.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatLogToString: () => (/* binding */ formatLogToString)\n/* harmony export */ });\n/**\n * Construct the scratchpad that lets the agent continue its thought process.\n * @param intermediateSteps\n * @param observationPrefix\n * @param llmPrefix\n * @returns a string with the formatted observations and agent logs\n */\nfunction formatLogToString(intermediateSteps, observationPrefix = \"Observation: \", llmPrefix = \"Thought: \") {\n    const formattedSteps = intermediateSteps.reduce((thoughts, { action, observation }) => thoughts +\n        [action.log, `\\n${observationPrefix}${observation}`, llmPrefix].join(\"\\n\"), \"\");\n    return formattedSteps;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlFQUFpRSxxQkFBcUI7QUFDdEYsMEJBQTBCLGtCQUFrQixFQUFFLFlBQVk7QUFDMUQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL2xvZy5qcz85ZDM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29uc3RydWN0IHRoZSBzY3JhdGNocGFkIHRoYXQgbGV0cyB0aGUgYWdlbnQgY29udGludWUgaXRzIHRob3VnaHQgcHJvY2Vzcy5cbiAqIEBwYXJhbSBpbnRlcm1lZGlhdGVTdGVwc1xuICogQHBhcmFtIG9ic2VydmF0aW9uUHJlZml4XG4gKiBAcGFyYW0gbGxtUHJlZml4XG4gKiBAcmV0dXJucyBhIHN0cmluZyB3aXRoIHRoZSBmb3JtYXR0ZWQgb2JzZXJ2YXRpb25zIGFuZCBhZ2VudCBsb2dzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRMb2dUb1N0cmluZyhpbnRlcm1lZGlhdGVTdGVwcywgb2JzZXJ2YXRpb25QcmVmaXggPSBcIk9ic2VydmF0aW9uOiBcIiwgbGxtUHJlZml4ID0gXCJUaG91Z2h0OiBcIikge1xuICAgIGNvbnN0IGZvcm1hdHRlZFN0ZXBzID0gaW50ZXJtZWRpYXRlU3RlcHMucmVkdWNlKCh0aG91Z2h0cywgeyBhY3Rpb24sIG9ic2VydmF0aW9uIH0pID0+IHRob3VnaHRzICtcbiAgICAgICAgW2FjdGlvbi5sb2csIGBcXG4ke29ic2VydmF0aW9uUHJlZml4fSR7b2JzZXJ2YXRpb259YCwgbGxtUHJlZml4XS5qb2luKFwiXFxuXCIpLCBcIlwiKTtcbiAgICByZXR1cm4gZm9ybWF0dGVkU3RlcHM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatForOpenAIFunctions: () => (/* binding */ formatForOpenAIFunctions),\n/* harmony export */   formatToOpenAIFunctionMessages: () => (/* binding */ formatToOpenAIFunctionMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chat_convo_prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chat_convo/prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/prompt.js\");\n\n\n\n/**\n * Format a list of AgentSteps into a list of BaseMessage instances for\n * agents that use OpenAI's API. Helpful for passing in previous agent\n * step context into new iterations.\n *\n * @deprecated Use formatToOpenAIFunctionMessages instead.\n * @param steps A list of AgentSteps to format.\n * @returns A list of BaseMessages.\n */\nfunction formatForOpenAIFunctions(steps) {\n    const thoughts = [];\n    for (const step of steps) {\n        thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.AIMessage(step.action.log));\n        thoughts.push(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.HumanMessage((0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_chat_convo_prompt_js__WEBPACK_IMPORTED_MODULE_2__.TEMPLATE_TOOL_RESPONSE, \"f-string\", {\n            observation: step.observation,\n        })));\n    }\n    return thoughts;\n}\n/**\n * Format a list of AgentSteps into a list of BaseMessage instances for\n * agents that use OpenAI's API. Helpful for passing in previous agent\n * step context into new iterations.\n *\n * @param steps A list of AgentSteps to format.\n * @returns A list of BaseMessages.\n */\nfunction formatToOpenAIFunctionMessages(steps) {\n    return steps.flatMap(({ action, observation }) => {\n        if (\"messageLog\" in action && action.messageLog !== undefined) {\n            const log = action.messageLog;\n            return log.concat(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.FunctionMessage(observation, action.tool));\n        }\n        else {\n            return [new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.AIMessage(action.log)];\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL29wZW5haV9mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUY7QUFDNUI7QUFDUTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQkFBMEIsK0RBQVM7QUFDbkMsMEJBQTBCLGtFQUFZLENBQUMsdUVBQWMsQ0FBQyx5RUFBc0I7QUFDNUU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0Esa0NBQWtDLHFFQUFlO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsK0RBQVM7QUFDakM7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9mb3JtYXRfc2NyYXRjaHBhZC9vcGVuYWlfZnVuY3Rpb25zLmpzPzQyMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQUlNZXNzYWdlLCBIdW1hbk1lc3NhZ2UsIEZ1bmN0aW9uTWVzc2FnZSwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lc3NhZ2VzXCI7XG5pbXBvcnQgeyByZW5kZXJUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuaW1wb3J0IHsgVEVNUExBVEVfVE9PTF9SRVNQT05TRSB9IGZyb20gXCIuLi9jaGF0X2NvbnZvL3Byb21wdC5qc1wiO1xuLyoqXG4gKiBGb3JtYXQgYSBsaXN0IG9mIEFnZW50U3RlcHMgaW50byBhIGxpc3Qgb2YgQmFzZU1lc3NhZ2UgaW5zdGFuY2VzIGZvclxuICogYWdlbnRzIHRoYXQgdXNlIE9wZW5BSSdzIEFQSS4gSGVscGZ1bCBmb3IgcGFzc2luZyBpbiBwcmV2aW91cyBhZ2VudFxuICogc3RlcCBjb250ZXh0IGludG8gbmV3IGl0ZXJhdGlvbnMuXG4gKlxuICogQGRlcHJlY2F0ZWQgVXNlIGZvcm1hdFRvT3BlbkFJRnVuY3Rpb25NZXNzYWdlcyBpbnN0ZWFkLlxuICogQHBhcmFtIHN0ZXBzIEEgbGlzdCBvZiBBZ2VudFN0ZXBzIHRvIGZvcm1hdC5cbiAqIEByZXR1cm5zIEEgbGlzdCBvZiBCYXNlTWVzc2FnZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRGb3JPcGVuQUlGdW5jdGlvbnMoc3RlcHMpIHtcbiAgICBjb25zdCB0aG91Z2h0cyA9IFtdO1xuICAgIGZvciAoY29uc3Qgc3RlcCBvZiBzdGVwcykge1xuICAgICAgICB0aG91Z2h0cy5wdXNoKG5ldyBBSU1lc3NhZ2Uoc3RlcC5hY3Rpb24ubG9nKSk7XG4gICAgICAgIHRob3VnaHRzLnB1c2gobmV3IEh1bWFuTWVzc2FnZShyZW5kZXJUZW1wbGF0ZShURU1QTEFURV9UT09MX1JFU1BPTlNFLCBcImYtc3RyaW5nXCIsIHtcbiAgICAgICAgICAgIG9ic2VydmF0aW9uOiBzdGVwLm9ic2VydmF0aW9uLFxuICAgICAgICB9KSkpO1xuICAgIH1cbiAgICByZXR1cm4gdGhvdWdodHM7XG59XG4vKipcbiAqIEZvcm1hdCBhIGxpc3Qgb2YgQWdlbnRTdGVwcyBpbnRvIGEgbGlzdCBvZiBCYXNlTWVzc2FnZSBpbnN0YW5jZXMgZm9yXG4gKiBhZ2VudHMgdGhhdCB1c2UgT3BlbkFJJ3MgQVBJLiBIZWxwZnVsIGZvciBwYXNzaW5nIGluIHByZXZpb3VzIGFnZW50XG4gKiBzdGVwIGNvbnRleHQgaW50byBuZXcgaXRlcmF0aW9ucy5cbiAqXG4gKiBAcGFyYW0gc3RlcHMgQSBsaXN0IG9mIEFnZW50U3RlcHMgdG8gZm9ybWF0LlxuICogQHJldHVybnMgQSBsaXN0IG9mIEJhc2VNZXNzYWdlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFRvT3BlbkFJRnVuY3Rpb25NZXNzYWdlcyhzdGVwcykge1xuICAgIHJldHVybiBzdGVwcy5mbGF0TWFwKCh7IGFjdGlvbiwgb2JzZXJ2YXRpb24gfSkgPT4ge1xuICAgICAgICBpZiAoXCJtZXNzYWdlTG9nXCIgaW4gYWN0aW9uICYmIGFjdGlvbi5tZXNzYWdlTG9nICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvZyA9IGFjdGlvbi5tZXNzYWdlTG9nO1xuICAgICAgICAgICAgcmV0dXJuIGxvZy5jb25jYXQobmV3IEZ1bmN0aW9uTWVzc2FnZShvYnNlcnZhdGlvbiwgYWN0aW9uLnRvb2wpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbbmV3IEFJTWVzc2FnZShhY3Rpb24ubG9nKV07XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js":
/*!******************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatToOpenAIToolMessages: () => (/* reexport safe */ _tool_calling_js__WEBPACK_IMPORTED_MODULE_0__.formatToToolMessages)\n/* harmony export */ });\n/* harmony import */ var _tool_calling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool_calling.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL29wZW5haV90b29scy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL29wZW5haV90b29scy5qcz8yNzY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcm1hdFRvVG9vbE1lc3NhZ2VzIGFzIGZvcm1hdFRvT3BlbkFJVG9vbE1lc3NhZ2VzIH0gZnJvbSBcIi4vdG9vbF9jYWxsaW5nLmpzXCI7XG5leHBvcnQgeyBmb3JtYXRUb09wZW5BSVRvb2xNZXNzYWdlcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js":
/*!******************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _createToolMessage: () => (/* binding */ _createToolMessage),\n/* harmony export */   formatToToolMessages: () => (/* binding */ formatToToolMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n\n/**\n * Convert agent action and observation into a function message.\n * @param agentAction - The tool invocation request from the agent\n * @param observation - The result of the tool invocation\n * @returns FunctionMessage that corresponds to the original tool invocation\n */\nfunction _createToolMessage(step) {\n    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.ToolMessage({\n        tool_call_id: step.action.toolCallId,\n        content: step.observation,\n        additional_kwargs: { name: step.action.tool },\n    });\n}\nfunction formatToToolMessages(steps) {\n    return steps.flatMap(({ action, observation }) => {\n        if (\"messageLog\" in action && action.messageLog !== undefined) {\n            const log = action.messageLog;\n            return log.concat(_createToolMessage({ action, observation }));\n        }\n        else {\n            return [new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.AIMessage(action.log)];\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL3Rvb2xfY2FsbGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxlQUFlLGlFQUFXO0FBQzFCO0FBQ0E7QUFDQSw2QkFBNkIsd0JBQXdCO0FBQ3JELEtBQUs7QUFDTDtBQUNPO0FBQ1AsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0EsbURBQW1ELHFCQUFxQjtBQUN4RTtBQUNBO0FBQ0Esd0JBQXdCLCtEQUFTO0FBQ2pDO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvZm9ybWF0X3NjcmF0Y2hwYWQvdG9vbF9jYWxsaW5nLmpzP2MzODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQUlNZXNzYWdlLCBUb29sTWVzc2FnZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbi8qKlxuICogQ29udmVydCBhZ2VudCBhY3Rpb24gYW5kIG9ic2VydmF0aW9uIGludG8gYSBmdW5jdGlvbiBtZXNzYWdlLlxuICogQHBhcmFtIGFnZW50QWN0aW9uIC0gVGhlIHRvb2wgaW52b2NhdGlvbiByZXF1ZXN0IGZyb20gdGhlIGFnZW50XG4gKiBAcGFyYW0gb2JzZXJ2YXRpb24gLSBUaGUgcmVzdWx0IG9mIHRoZSB0b29sIGludm9jYXRpb25cbiAqIEByZXR1cm5zIEZ1bmN0aW9uTWVzc2FnZSB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoZSBvcmlnaW5hbCB0b29sIGludm9jYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIF9jcmVhdGVUb29sTWVzc2FnZShzdGVwKSB7XG4gICAgcmV0dXJuIG5ldyBUb29sTWVzc2FnZSh7XG4gICAgICAgIHRvb2xfY2FsbF9pZDogc3RlcC5hY3Rpb24udG9vbENhbGxJZCxcbiAgICAgICAgY29udGVudDogc3RlcC5vYnNlcnZhdGlvbixcbiAgICAgICAgYWRkaXRpb25hbF9rd2FyZ3M6IHsgbmFtZTogc3RlcC5hY3Rpb24udG9vbCB9LFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFRvVG9vbE1lc3NhZ2VzKHN0ZXBzKSB7XG4gICAgcmV0dXJuIHN0ZXBzLmZsYXRNYXAoKHsgYWN0aW9uLCBvYnNlcnZhdGlvbiB9KSA9PiB7XG4gICAgICAgIGlmIChcIm1lc3NhZ2VMb2dcIiBpbiBhY3Rpb24gJiYgYWN0aW9uLm1lc3NhZ2VMb2cgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgbG9nID0gYWN0aW9uLm1lc3NhZ2VMb2c7XG4gICAgICAgICAgICByZXR1cm4gbG9nLmNvbmNhdChfY3JlYXRlVG9vbE1lc3NhZ2UoeyBhY3Rpb24sIG9ic2VydmF0aW9uIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbbmV3IEFJTWVzc2FnZShhY3Rpb24ubG9nKV07XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/xml.js":
/*!*********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/format_scratchpad/xml.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatXml: () => (/* binding */ formatXml)\n/* harmony export */ });\nfunction formatXml(intermediateSteps) {\n    let log = \"\";\n    for (const step of intermediateSteps) {\n        const { action, observation } = step;\n        log += `<tool>${action.tool}</tool><tool_input>${action.toolInput}\\n</tool_input><observation>${observation}</observation>`;\n    }\n    return log;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL3htbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0EsZ0JBQWdCLHNCQUFzQjtBQUN0Qyx3QkFBd0IsWUFBWSxxQkFBcUIsaUJBQWlCLDhCQUE4QixZQUFZO0FBQ3BIO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2Zvcm1hdF9zY3JhdGNocGFkL3htbC5qcz83YTg2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmb3JtYXRYbWwoaW50ZXJtZWRpYXRlU3RlcHMpIHtcbiAgICBsZXQgbG9nID0gXCJcIjtcbiAgICBmb3IgKGNvbnN0IHN0ZXAgb2YgaW50ZXJtZWRpYXRlU3RlcHMpIHtcbiAgICAgICAgY29uc3QgeyBhY3Rpb24sIG9ic2VydmF0aW9uIH0gPSBzdGVwO1xuICAgICAgICBsb2cgKz0gYDx0b29sPiR7YWN0aW9uLnRvb2x9PC90b29sPjx0b29sX2lucHV0PiR7YWN0aW9uLnRvb2xJbnB1dH1cXG48L3Rvb2xfaW5wdXQ+PG9ic2VydmF0aW9uPiR7b2JzZXJ2YXRpb259PC9vYnNlcnZhdGlvbj5gO1xuICAgIH1cbiAgICByZXR1cm4gbG9nO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/xml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/helpers.js":
/*!*******************************************************!*\
  !*** ./node_modules/langchain/dist/agents/helpers.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializeHelper: () => (/* binding */ deserializeHelper)\n/* harmony export */ });\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n\nconst deserializeHelper = async (llm, tools, data, fromLLMAndTools, fromConstructor) => {\n    if (data.load_from_llm_and_tools) {\n        if (!llm) {\n            throw new Error(\"Loading from llm and tools, llm must be provided.\");\n        }\n        if (!tools) {\n            throw new Error(\"Loading from llm and tools, tools must be provided.\");\n        }\n        return fromLLMAndTools(llm, tools, data);\n    }\n    if (!data.llm_chain) {\n        throw new Error(\"Loading from constructor, llm_chain must be provided.\");\n    }\n    const llmChain = await _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain.deserialize(data.llm_chain);\n    return fromConstructor({ ...data, llmChain });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Q7QUFDM0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMERBQVE7QUFDbkMsNkJBQTZCLG1CQUFtQjtBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2hlbHBlcnMuanM/NzQzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi9jaGFpbnMvbGxtX2NoYWluLmpzXCI7XG5leHBvcnQgY29uc3QgZGVzZXJpYWxpemVIZWxwZXIgPSBhc3luYyAobGxtLCB0b29scywgZGF0YSwgZnJvbUxMTUFuZFRvb2xzLCBmcm9tQ29uc3RydWN0b3IpID0+IHtcbiAgICBpZiAoZGF0YS5sb2FkX2Zyb21fbGxtX2FuZF90b29scykge1xuICAgICAgICBpZiAoIWxsbSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9hZGluZyBmcm9tIGxsbSBhbmQgdG9vbHMsIGxsbSBtdXN0IGJlIHByb3ZpZGVkLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRvb2xzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb2FkaW5nIGZyb20gbGxtIGFuZCB0b29scywgdG9vbHMgbXVzdCBiZSBwcm92aWRlZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZyb21MTE1BbmRUb29scyhsbG0sIHRvb2xzLCBkYXRhKTtcbiAgICB9XG4gICAgaWYgKCFkYXRhLmxsbV9jaGFpbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb2FkaW5nIGZyb20gY29uc3RydWN0b3IsIGxsbV9jaGFpbiBtdXN0IGJlIHByb3ZpZGVkLlwiKTtcbiAgICB9XG4gICAgY29uc3QgbGxtQ2hhaW4gPSBhd2FpdCBMTE1DaGFpbi5kZXNlcmlhbGl6ZShkYXRhLmxsbV9jaGFpbik7XG4gICAgcmV0dXJuIGZyb21Db25zdHJ1Y3Rvcih7IC4uLmRhdGEsIGxsbUNoYWluIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/langchain/dist/agents/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.Agent),\n/* harmony export */   AgentActionOutputParser: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_11__.AgentActionOutputParser),\n/* harmony export */   AgentExecutor: () => (/* reexport safe */ _executor_js__WEBPACK_IMPORTED_MODULE_7__.AgentExecutor),\n/* harmony export */   BaseMultiActionAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.BaseMultiActionAgent),\n/* harmony export */   BaseSingleActionAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.BaseSingleActionAgent),\n/* harmony export */   ChatAgent: () => (/* reexport safe */ _chat_index_js__WEBPACK_IMPORTED_MODULE_3__.ChatAgent),\n/* harmony export */   ChatAgentOutputParser: () => (/* reexport safe */ _chat_outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ChatAgentOutputParser),\n/* harmony export */   ChatConversationalAgent: () => (/* reexport safe */ _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_5__.ChatConversationalAgent),\n/* harmony export */   ChatConversationalAgentOutputParser: () => (/* reexport safe */ _chat_convo_outputParser_js__WEBPACK_IMPORTED_MODULE_6__.ChatConversationalAgentOutputParser),\n/* harmony export */   ChatConversationalAgentOutputParserWithRetries: () => (/* reexport safe */ _chat_convo_outputParser_js__WEBPACK_IMPORTED_MODULE_6__.ChatConversationalAgentOutputParserWithRetries),\n/* harmony export */   JsonToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.JsonToolkit),\n/* harmony export */   LLMSingleActionAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.LLMSingleActionAgent),\n/* harmony export */   OpenAIAgent: () => (/* reexport safe */ _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_14__.OpenAIAgent),\n/* harmony export */   OpenApiToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.OpenApiToolkit),\n/* harmony export */   RequestsToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.RequestsToolkit),\n/* harmony export */   RunnableAgent: () => (/* reexport safe */ _agent_js__WEBPACK_IMPORTED_MODULE_0__.RunnableAgent),\n/* harmony export */   StructuredChatAgent: () => (/* reexport safe */ _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_12__.StructuredChatAgent),\n/* harmony export */   StructuredChatOutputParser: () => (/* reexport safe */ _structured_chat_outputParser_js__WEBPACK_IMPORTED_MODULE_13__.StructuredChatOutputParser),\n/* harmony export */   StructuredChatOutputParserWithRetries: () => (/* reexport safe */ _structured_chat_outputParser_js__WEBPACK_IMPORTED_MODULE_13__.StructuredChatOutputParserWithRetries),\n/* harmony export */   Toolkit: () => (/* reexport safe */ _toolkits_base_js__WEBPACK_IMPORTED_MODULE_2__.Toolkit),\n/* harmony export */   VectorStoreRouterToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreRouterToolkit),\n/* harmony export */   VectorStoreToolkit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreToolkit),\n/* harmony export */   XMLAgent: () => (/* reexport safe */ _xml_index_js__WEBPACK_IMPORTED_MODULE_17__.XMLAgent),\n/* harmony export */   ZapierToolKit: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.ZapierToolKit),\n/* harmony export */   ZeroShotAgent: () => (/* reexport safe */ _mrkl_index_js__WEBPACK_IMPORTED_MODULE_9__.ZeroShotAgent),\n/* harmony export */   ZeroShotAgentOutputParser: () => (/* reexport safe */ _mrkl_outputParser_js__WEBPACK_IMPORTED_MODULE_10__.ZeroShotAgentOutputParser),\n/* harmony export */   createJsonAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createJsonAgent),\n/* harmony export */   createOpenAIFunctionsAgent: () => (/* reexport safe */ _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_14__.createOpenAIFunctionsAgent),\n/* harmony export */   createOpenAIToolsAgent: () => (/* reexport safe */ _openai_tools_index_js__WEBPACK_IMPORTED_MODULE_15__.createOpenAIToolsAgent),\n/* harmony export */   createOpenApiAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createOpenApiAgent),\n/* harmony export */   createReactAgent: () => (/* reexport safe */ _react_index_js__WEBPACK_IMPORTED_MODULE_18__.createReactAgent),\n/* harmony export */   createStructuredChatAgent: () => (/* reexport safe */ _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_12__.createStructuredChatAgent),\n/* harmony export */   createToolCallingAgent: () => (/* reexport safe */ _tool_calling_index_js__WEBPACK_IMPORTED_MODULE_16__.createToolCallingAgent),\n/* harmony export */   createVectorStoreAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createVectorStoreAgent),\n/* harmony export */   createVectorStoreRouterAgent: () => (/* reexport safe */ _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__.createVectorStoreRouterAgent),\n/* harmony export */   createXmlAgent: () => (/* reexport safe */ _xml_index_js__WEBPACK_IMPORTED_MODULE_17__.createXmlAgent),\n/* harmony export */   initializeAgentExecutor: () => (/* reexport safe */ _initialize_js__WEBPACK_IMPORTED_MODULE_8__.initializeAgentExecutor),\n/* harmony export */   initializeAgentExecutorWithOptions: () => (/* reexport safe */ _initialize_js__WEBPACK_IMPORTED_MODULE_8__.initializeAgentExecutorWithOptions)\n/* harmony export */ });\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _toolkits_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toolkits/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/index.js\");\n/* harmony import */ var _toolkits_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toolkits/base.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/base.js\");\n/* harmony import */ var _chat_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chat/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat/index.js\");\n/* harmony import */ var _chat_outputParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chat/outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat/outputParser.js\");\n/* harmony import */ var _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chat_convo/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/index.js\");\n/* harmony import */ var _chat_convo_outputParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chat_convo/outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/outputParser.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./executor.js */ \"(rsc)/./node_modules/langchain/dist/agents/executor.js\");\n/* harmony import */ var _initialize_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./initialize.js */ \"(rsc)/./node_modules/langchain/dist/agents/initialize.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mrkl/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _mrkl_outputParser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./mrkl/outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/outputParser.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./structured_chat/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/structured_chat/index.js\");\n/* harmony import */ var _structured_chat_outputParser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./structured_chat/outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/structured_chat/outputParser.js\");\n/* harmony import */ var _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./openai_functions/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_functions/index.js\");\n/* harmony import */ var _openai_tools_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./openai_tools/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_tools/index.js\");\n/* harmony import */ var _tool_calling_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tool_calling/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/tool_calling/index.js\");\n/* harmony import */ var _xml_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./xml/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/xml/index.js\");\n/* harmony import */ var _react_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./react/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/react/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzSDtBQUNzSDtBQUMvTDtBQUNBO0FBQ2tCO0FBQ0U7QUFDbUU7QUFDdEY7QUFDaUQ7QUFDOUM7QUFDa0I7QUFDYjtBQUN1QztBQUMwQjtBQUNoQztBQUNyQjtBQUNBO0FBQ1A7QUFDTiIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL2luZGV4LmpzPzgzMWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQWdlbnQsIEJhc2VTaW5nbGVBY3Rpb25BZ2VudCwgQmFzZU11bHRpQWN0aW9uQWdlbnQsIFJ1bm5hYmxlQWdlbnQsIExMTVNpbmdsZUFjdGlvbkFnZW50LCB9IGZyb20gXCIuL2FnZW50LmpzXCI7XG5leHBvcnQgeyBKc29uVG9vbGtpdCwgT3BlbkFwaVRvb2xraXQsIFJlcXVlc3RzVG9vbGtpdCwgVmVjdG9yU3RvcmVSb3V0ZXJUb29sa2l0LCBWZWN0b3JTdG9yZVRvb2xraXQsIFphcGllclRvb2xLaXQsIGNyZWF0ZUpzb25BZ2VudCwgY3JlYXRlT3BlbkFwaUFnZW50LCBjcmVhdGVWZWN0b3JTdG9yZUFnZW50LCBjcmVhdGVWZWN0b3JTdG9yZVJvdXRlckFnZW50LCB9IGZyb20gXCIuL3Rvb2xraXRzL2luZGV4LmpzXCI7XG5leHBvcnQgeyBUb29sa2l0IH0gZnJvbSBcIi4vdG9vbGtpdHMvYmFzZS5qc1wiO1xuZXhwb3J0IHsgQ2hhdEFnZW50LCB9IGZyb20gXCIuL2NoYXQvaW5kZXguanNcIjtcbmV4cG9ydCB7IENoYXRBZ2VudE91dHB1dFBhcnNlciB9IGZyb20gXCIuL2NoYXQvb3V0cHV0UGFyc2VyLmpzXCI7XG5leHBvcnQgeyBDaGF0Q29udmVyc2F0aW9uYWxBZ2VudCwgfSBmcm9tIFwiLi9jaGF0X2NvbnZvL2luZGV4LmpzXCI7XG5leHBvcnQgeyBDaGF0Q29udmVyc2F0aW9uYWxBZ2VudE91dHB1dFBhcnNlciwgQ2hhdENvbnZlcnNhdGlvbmFsQWdlbnRPdXRwdXRQYXJzZXJXaXRoUmV0cmllcywgfSBmcm9tIFwiLi9jaGF0X2NvbnZvL291dHB1dFBhcnNlci5qc1wiO1xuZXhwb3J0IHsgQWdlbnRFeGVjdXRvciB9IGZyb20gXCIuL2V4ZWN1dG9yLmpzXCI7XG5leHBvcnQgeyBpbml0aWFsaXplQWdlbnRFeGVjdXRvciwgaW5pdGlhbGl6ZUFnZW50RXhlY3V0b3JXaXRoT3B0aW9ucywgfSBmcm9tIFwiLi9pbml0aWFsaXplLmpzXCI7XG5leHBvcnQgeyBaZXJvU2hvdEFnZW50LCB9IGZyb20gXCIuL21ya2wvaW5kZXguanNcIjtcbmV4cG9ydCB7IFplcm9TaG90QWdlbnRPdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi9tcmtsL291dHB1dFBhcnNlci5qc1wiO1xuZXhwb3J0IHsgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIsIH0gZnJvbSBcIi4vdHlwZXMuanNcIjtcbmV4cG9ydCB7IFN0cnVjdHVyZWRDaGF0QWdlbnQsIGNyZWF0ZVN0cnVjdHVyZWRDaGF0QWdlbnQsIH0gZnJvbSBcIi4vc3RydWN0dXJlZF9jaGF0L2luZGV4LmpzXCI7XG5leHBvcnQgeyBTdHJ1Y3R1cmVkQ2hhdE91dHB1dFBhcnNlciwgU3RydWN0dXJlZENoYXRPdXRwdXRQYXJzZXJXaXRoUmV0cmllcywgfSBmcm9tIFwiLi9zdHJ1Y3R1cmVkX2NoYXQvb3V0cHV0UGFyc2VyLmpzXCI7XG5leHBvcnQgeyBPcGVuQUlBZ2VudCwgY3JlYXRlT3BlbkFJRnVuY3Rpb25zQWdlbnQsIH0gZnJvbSBcIi4vb3BlbmFpX2Z1bmN0aW9ucy9pbmRleC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlT3BlbkFJVG9vbHNBZ2VudCwgfSBmcm9tIFwiLi9vcGVuYWlfdG9vbHMvaW5kZXguanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVRvb2xDYWxsaW5nQWdlbnQsIH0gZnJvbSBcIi4vdG9vbF9jYWxsaW5nL2luZGV4LmpzXCI7XG5leHBvcnQgeyBYTUxBZ2VudCwgY3JlYXRlWG1sQWdlbnQsIH0gZnJvbSBcIi4veG1sL2luZGV4LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVSZWFjdEFnZW50LCB9IGZyb20gXCIuL3JlYWN0L2luZGV4LmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/initialize.js":
/*!**********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/initialize.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAgentExecutor: () => (/* binding */ initializeAgentExecutor),\n/* harmony export */   initializeAgentExecutorWithOptions: () => (/* binding */ initializeAgentExecutorWithOptions)\n/* harmony export */ });\n/* harmony import */ var _memory_buffer_memory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../memory/buffer_memory.js */ \"(rsc)/./node_modules/langchain/dist/memory/buffer_memory.js\");\n/* harmony import */ var _chat_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat/index.js\");\n/* harmony import */ var _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat_convo/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/chat_convo/index.js\");\n/* harmony import */ var _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./structured_chat/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/structured_chat/index.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./executor.js */ \"(rsc)/./node_modules/langchain/dist/agents/executor.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mrkl/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./openai_functions/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_functions/index.js\");\n/* harmony import */ var _xml_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./xml/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/xml/index.js\");\n\n\n\n\n\n\n\n\n/**\n * @deprecated See {@link https://js.langchain.com/docs/modules/agents/agent_types/ | new agent creation docs}.\n */\nconst initializeAgentExecutor = async (tools, llm, _agentType, _verbose, _callbackManager) => {\n    const agentType = _agentType ?? \"zero-shot-react-description\";\n    const verbose = _verbose;\n    const callbackManager = _callbackManager;\n    switch (agentType) {\n        case \"zero-shot-react-description\":\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                agent: _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__.ZeroShotAgent.fromLLMAndTools(llm, tools),\n                tools,\n                returnIntermediateSteps: true,\n                verbose,\n                callbackManager,\n            });\n        case \"chat-zero-shot-react-description\":\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                agent: _chat_index_js__WEBPACK_IMPORTED_MODULE_1__.ChatAgent.fromLLMAndTools(llm, tools),\n                tools,\n                returnIntermediateSteps: true,\n                verbose,\n                callbackManager,\n            });\n        case \"chat-conversational-react-description\":\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                agent: _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_2__.ChatConversationalAgent.fromLLMAndTools(llm, tools),\n                tools,\n                verbose,\n                callbackManager,\n            });\n        default:\n            throw new Error(\"Unknown agent type\");\n    }\n};\n/** @deprecated See {@link https://js.langchain.com/docs/modules/agents/agent_types/ | new agent creation docs}. */\nasync function initializeAgentExecutorWithOptions(tools, llm, options = {\n    agentType: llm._modelType() === \"base_chat_model\"\n        ? \"chat-zero-shot-react-description\"\n        : \"zero-shot-react-description\",\n}) {\n    // Note this tools cast is safe as the overload signatures prevent\n    // the function from being called with a StructuredTool[] when\n    // the agentType is not in InitializeAgentExecutorOptionsStructured\n    switch (options.agentType) {\n        case \"zero-shot-react-description\": {\n            const { agentArgs, tags, ...rest } = options;\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"zero-shot-react-description\"],\n                agent: _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__.ZeroShotAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n        }\n        case \"chat-zero-shot-react-description\": {\n            const { agentArgs, tags, ...rest } = options;\n            return _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"chat-zero-shot-react-description\"],\n                agent: _chat_index_js__WEBPACK_IMPORTED_MODULE_1__.ChatAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n        }\n        case \"chat-conversational-react-description\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"chat-conversational-react-description\"],\n                agent: _chat_convo_index_js__WEBPACK_IMPORTED_MODULE_2__.ChatConversationalAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory: memory ??\n                    new _memory_buffer_memory_js__WEBPACK_IMPORTED_MODULE_0__.BufferMemory({\n                        returnMessages: true,\n                        memoryKey: \"chat_history\",\n                        inputKey: \"input\",\n                        outputKey: \"output\",\n                    }),\n                ...rest,\n            });\n            return executor;\n        }\n        case \"xml\": {\n            const { agentArgs, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"xml\"],\n                agent: _xml_index_js__WEBPACK_IMPORTED_MODULE_7__.XMLAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n            return executor;\n        }\n        case \"structured-chat-zero-shot-react-description\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"structured-chat-zero-shot-react-description\"],\n                agent: _structured_chat_index_js__WEBPACK_IMPORTED_MODULE_3__.StructuredChatAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory,\n                ...rest,\n            });\n            return executor;\n        }\n        case \"openai-functions\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = _executor_js__WEBPACK_IMPORTED_MODULE_4__.AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"openai-functions\"],\n                agent: _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_6__.OpenAIAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory: memory ??\n                    new _memory_buffer_memory_js__WEBPACK_IMPORTED_MODULE_0__.BufferMemory({\n                        returnMessages: true,\n                        memoryKey: \"chat_history\",\n                        inputKey: \"input\",\n                        outputKey: \"output\",\n                    }),\n                ...rest,\n            });\n            return executor;\n        }\n        default: {\n            throw new Error(\"Unknown agent type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/initialize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/mrkl/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZeroShotAgent: () => (/* binding */ ZeroShotAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers.js */ \"(rsc)/./node_modules/langchain/dist/agents/helpers.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/prompt.js\");\n\n\n\n\n\n\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n * @example\n * ```typescript\n *\n * const agent = new ZeroShotAgent({\n *   llmChain: new LLMChain({\n *     llm: new ChatOpenAI({ temperature: 0 }),\n *     prompt: ZeroShotAgent.createPrompt([new SerpAPI(), new Calculator()], {\n *       prefix: `Answer the following questions as best you can, but speaking as a pirate might speak. You have access to the following tools:`,\n *       suffix: `Begin! Remember to speak as a pirate when giving your final answer. Use lots of \"Args\"\n * Question: {input}\n * {agent_scratchpad}`,\n *       inputVariables: [\"input\", \"agent_scratchpad\"],\n *     }),\n *   }),\n *   allowedTools: [\"search\", \"calculator\"],\n * });\n *\n * const result = await agent.invoke({\n *   input: `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`,\n * });\n * ```\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain_agents.createReactAgent.html | createReactAgent method instead}.\n */\nclass ZeroShotAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_2__.Agent {\n    static lc_name() {\n        return \"ZeroShotAgent\";\n    }\n    constructor(input) {\n        const outputParser = input?.outputParser ?? ZeroShotAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"mrkl\"]\n        });\n    }\n    _agentType() {\n        return \"zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    /**\n     * Returns the default output parser for the ZeroShotAgent.\n     * @param fields Optional arguments for the output parser.\n     * @returns An instance of ZeroShotAgentOutputParser.\n     */\n    static getDefaultOutputParser(fields) {\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgentOutputParser(fields);\n    }\n    /**\n     * Validates the tools for the ZeroShotAgent. Throws an error if any tool\n     * does not have a description.\n     * @param tools List of tools to validate.\n     */\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Create prompt in the style of the zero shot agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.inputVariables - List of input variables the final prompt will expect.\n     */\n    static createPrompt(tools, args) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const toolNames = tools.map((tool) => tool.name);\n        const formatInstructions = (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: toolNames,\n        });\n        const template = [prefix, toolStrings, formatInstructions, suffix].join(\"\\n\\n\");\n        return new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n            template,\n            inputVariables,\n        });\n    }\n    /**\n     * Creates a ZeroShotAgent from a Large Language Model and a set of tools.\n     * @param llm The Large Language Model to use.\n     * @param tools The tools for the agent to use.\n     * @param args Optional arguments for creating the agent.\n     * @returns A new instance of ZeroShotAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        ZeroShotAgent.validateTools(tools);\n        const prompt = ZeroShotAgent.createPrompt(tools, args);\n        const outputParser = args?.outputParser ?? ZeroShotAgent.getDefaultOutputParser();\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        return new ZeroShotAgent({\n            llmChain: chain,\n            allowedTools: tools.map((t) => t.name),\n            outputParser,\n        });\n    }\n    static async deserialize(data) {\n        const { llm, tools, ...rest } = data;\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.deserializeHelper)(llm, tools, rest, (llm, tools, args) => ZeroShotAgent.fromLLMAndTools(llm, tools, {\n            prefix: args.prefix,\n            suffix: args.suffix,\n            inputVariables: args.input_variables,\n        }), (args) => new ZeroShotAgent(args));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/mrkl/outputParser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/mrkl/outputParser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FINAL_ANSWER_ACTION: () => (/* binding */ FINAL_ANSWER_ACTION),\n/* harmony export */   ZeroShotAgentOutputParser: () => (/* binding */ ZeroShotAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/prompt.js\");\n\n\n\nconst FINAL_ANSWER_ACTION = \"Final Answer:\";\n/**\n * A class that extends `AgentActionOutputParser` to provide a custom\n * implementation for parsing the output of a ZeroShotAgent action.\n */\nclass ZeroShotAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"mrkl\"]\n        });\n        Object.defineProperty(this, \"finishToolName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.finishToolName = fields?.finishToolName || FINAL_ANSWER_ACTION;\n    }\n    /**\n     * Parses the text output of an agent action, extracting the tool, tool\n     * input, and output.\n     * @param text The text output of an agent action.\n     * @returns An object containing the tool, tool input, and output extracted from the text, along with the original text as a log.\n     */\n    async parse(text) {\n        if (text.includes(this.finishToolName)) {\n            const parts = text.split(this.finishToolName);\n            const output = parts[parts.length - 1].trim();\n            return {\n                returnValues: { output },\n                log: text,\n            };\n        }\n        const match = /Action:([\\s\\S]*?)(?:\\nAction Input:([\\s\\S]*?))?$/.exec(text);\n        if (!match) {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse LLM output: ${text}`);\n        }\n        return {\n            tool: match[1].trim(),\n            toolInput: match[2]\n                ? match[2].trim().replace(/^(\"+)(.*?)(\\1)$/, \"$2\")\n                : \"\",\n            log: text,\n        };\n    }\n    /**\n     * Returns the format instructions for parsing the output of an agent\n     * action in the style of the ZeroShotAgent.\n     * @returns The format instructions for parsing the output.\n     */\n    getFormatInstructions() {\n        return _prompt_js__WEBPACK_IMPORTED_MODULE_2__.FORMAT_INSTRUCTIONS;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL21ya2wvb3V0cHV0UGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBQ2pCO0FBQ0o7QUFDM0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdDQUF3Qyw4REFBdUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUZBQXFCLGdDQUFnQyxLQUFLO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkRBQW1CO0FBQ2xDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9tcmtsL291dHB1dFBhcnNlci5qcz9kZjc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE91dHB1dFBhcnNlckV4Y2VwdGlvbiB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvb3V0cHV0X3BhcnNlcnNcIjtcbmltcG9ydCB7IEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4uL3R5cGVzLmpzXCI7XG5pbXBvcnQgeyBGT1JNQVRfSU5TVFJVQ1RJT05TIH0gZnJvbSBcIi4vcHJvbXB0LmpzXCI7XG5leHBvcnQgY29uc3QgRklOQUxfQU5TV0VSX0FDVElPTiA9IFwiRmluYWwgQW5zd2VyOlwiO1xuLyoqXG4gKiBBIGNsYXNzIHRoYXQgZXh0ZW5kcyBgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXJgIHRvIHByb3ZpZGUgYSBjdXN0b21cbiAqIGltcGxlbWVudGF0aW9uIGZvciBwYXJzaW5nIHRoZSBvdXRwdXQgb2YgYSBaZXJvU2hvdEFnZW50IGFjdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIFplcm9TaG90QWdlbnRPdXRwdXRQYXJzZXIgZXh0ZW5kcyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwiYWdlbnRzXCIsIFwibXJrbFwiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZmluaXNoVG9vbE5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5maW5pc2hUb29sTmFtZSA9IGZpZWxkcz8uZmluaXNoVG9vbE5hbWUgfHwgRklOQUxfQU5TV0VSX0FDVElPTjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IG91dHB1dCBvZiBhbiBhZ2VudCBhY3Rpb24sIGV4dHJhY3RpbmcgdGhlIHRvb2wsIHRvb2xcbiAgICAgKiBpbnB1dCwgYW5kIG91dHB1dC5cbiAgICAgKiBAcGFyYW0gdGV4dCBUaGUgdGV4dCBvdXRwdXQgb2YgYW4gYWdlbnQgYWN0aW9uLlxuICAgICAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSB0b29sLCB0b29sIGlucHV0LCBhbmQgb3V0cHV0IGV4dHJhY3RlZCBmcm9tIHRoZSB0ZXh0LCBhbG9uZyB3aXRoIHRoZSBvcmlnaW5hbCB0ZXh0IGFzIGEgbG9nLlxuICAgICAqL1xuICAgIGFzeW5jIHBhcnNlKHRleHQpIHtcbiAgICAgICAgaWYgKHRleHQuaW5jbHVkZXModGhpcy5maW5pc2hUb29sTmFtZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnRzID0gdGV4dC5zcGxpdCh0aGlzLmZpbmlzaFRvb2xOYW1lKTtcbiAgICAgICAgICAgIGNvbnN0IG91dHB1dCA9IHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdLnRyaW0oKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuVmFsdWVzOiB7IG91dHB1dCB9LFxuICAgICAgICAgICAgICAgIGxvZzogdGV4dCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWF0Y2ggPSAvQWN0aW9uOihbXFxzXFxTXSo/KSg/OlxcbkFjdGlvbiBJbnB1dDooW1xcc1xcU10qPykpPyQvLmV4ZWModGV4dCk7XG4gICAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBPdXRwdXRQYXJzZXJFeGNlcHRpb24oYENvdWxkIG5vdCBwYXJzZSBMTE0gb3V0cHV0OiAke3RleHR9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvb2w6IG1hdGNoWzFdLnRyaW0oKSxcbiAgICAgICAgICAgIHRvb2xJbnB1dDogbWF0Y2hbMl1cbiAgICAgICAgICAgICAgICA/IG1hdGNoWzJdLnRyaW0oKS5yZXBsYWNlKC9eKFwiKykoLio/KShcXDEpJC8sIFwiJDJcIilcbiAgICAgICAgICAgICAgICA6IFwiXCIsXG4gICAgICAgICAgICBsb2c6IHRleHQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGZvcm1hdCBpbnN0cnVjdGlvbnMgZm9yIHBhcnNpbmcgdGhlIG91dHB1dCBvZiBhbiBhZ2VudFxuICAgICAqIGFjdGlvbiBpbiB0aGUgc3R5bGUgb2YgdGhlIFplcm9TaG90QWdlbnQuXG4gICAgICogQHJldHVybnMgVGhlIGZvcm1hdCBpbnN0cnVjdGlvbnMgZm9yIHBhcnNpbmcgdGhlIG91dHB1dC5cbiAgICAgKi9cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiBGT1JNQVRfSU5TVFJVQ1RJT05TO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/mrkl/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/mrkl/prompt.js":
/*!***********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/mrkl/prompt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `Answer the following questions as best you can. You have access to the following tools:`;\nconst FORMAT_INSTRUCTIONS = `Use the following format in your response:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\nconst SUFFIX = `Begin!\n\nQuestion: {input}\nThought:{agent_scratchpad}`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL21ya2wvcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ0E7O0FBRVA7QUFDQTtBQUNBLCtDQUErQyxXQUFXO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUCxXQUFXO0FBQ1gsU0FBUyxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9tcmtsL3Byb21wdC5qcz80OGM4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQUkVGSVggPSBgQW5zd2VyIHRoZSBmb2xsb3dpbmcgcXVlc3Rpb25zIGFzIGJlc3QgeW91IGNhbi4gWW91IGhhdmUgYWNjZXNzIHRvIHRoZSBmb2xsb3dpbmcgdG9vbHM6YDtcbmV4cG9ydCBjb25zdCBGT1JNQVRfSU5TVFJVQ1RJT05TID0gYFVzZSB0aGUgZm9sbG93aW5nIGZvcm1hdCBpbiB5b3VyIHJlc3BvbnNlOlxuXG5RdWVzdGlvbjogdGhlIGlucHV0IHF1ZXN0aW9uIHlvdSBtdXN0IGFuc3dlclxuVGhvdWdodDogeW91IHNob3VsZCBhbHdheXMgdGhpbmsgYWJvdXQgd2hhdCB0byBkb1xuQWN0aW9uOiB0aGUgYWN0aW9uIHRvIHRha2UsIHNob3VsZCBiZSBvbmUgb2YgW3t0b29sX25hbWVzfV1cbkFjdGlvbiBJbnB1dDogdGhlIGlucHV0IHRvIHRoZSBhY3Rpb25cbk9ic2VydmF0aW9uOiB0aGUgcmVzdWx0IG9mIHRoZSBhY3Rpb25cbi4uLiAodGhpcyBUaG91Z2h0L0FjdGlvbi9BY3Rpb24gSW5wdXQvT2JzZXJ2YXRpb24gY2FuIHJlcGVhdCBOIHRpbWVzKVxuVGhvdWdodDogSSBub3cga25vdyB0aGUgZmluYWwgYW5zd2VyXG5GaW5hbCBBbnN3ZXI6IHRoZSBmaW5hbCBhbnN3ZXIgdG8gdGhlIG9yaWdpbmFsIGlucHV0IHF1ZXN0aW9uYDtcbmV4cG9ydCBjb25zdCBTVUZGSVggPSBgQmVnaW4hXG5cblF1ZXN0aW9uOiB7aW5wdXR9XG5UaG91Z2h0OnthZ2VudF9zY3JhdGNocGFkfWA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/mrkl/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/openai/output_parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/openai/output_parser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIFunctionsAgentOutputParser: () => (/* reexport safe */ _openai_functions_output_parser_js__WEBPACK_IMPORTED_MODULE_0__.OpenAIFunctionsAgentOutputParser),\n/* harmony export */   OpenAIToolsAgentOutputParser: () => (/* reexport safe */ _openai_tools_output_parser_js__WEBPACK_IMPORTED_MODULE_1__.OpenAIToolsAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _openai_functions_output_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../openai_functions/output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_functions/output_parser.js\");\n/* harmony import */ var _openai_tools_output_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../openai_tools/output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_tools/output_parser.js\");\n// console.warn([\n//   `[WARNING]: The root \"langchain/agents/openai/output_parser\" entrypoint is deprecated.`,\n//   `Please use either \"langchain/agents/openai/output_parser\" specific entrypoint instead.`\n// ].join(\"\\n\"));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haS9vdXRwdXRfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNxRDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpL291dHB1dF9wYXJzZXIuanM/NDJmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zb2xlLndhcm4oW1xuLy8gICBgW1dBUk5JTkddOiBUaGUgcm9vdCBcImxhbmdjaGFpbi9hZ2VudHMvb3BlbmFpL291dHB1dF9wYXJzZXJcIiBlbnRyeXBvaW50IGlzIGRlcHJlY2F0ZWQuYCxcbi8vICAgYFBsZWFzZSB1c2UgZWl0aGVyIFwibGFuZ2NoYWluL2FnZW50cy9vcGVuYWkvb3V0cHV0X3BhcnNlclwiIHNwZWNpZmljIGVudHJ5cG9pbnQgaW5zdGVhZC5gXG4vLyBdLmpvaW4oXCJcXG5cIikpO1xuZXhwb3J0ICogZnJvbSBcIi4uL29wZW5haV9mdW5jdGlvbnMvb3V0cHV0X3BhcnNlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4uL29wZW5haV90b29scy9vdXRwdXRfcGFyc2VyLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/openai/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/openai_functions/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/openai_functions/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIAgent: () => (/* binding */ OpenAIAgent),\n/* harmony export */   _formatIntermediateSteps: () => (/* binding */ _formatIntermediateSteps),\n/* harmony export */   createOpenAIFunctionsAgent: () => (/* binding */ createOpenAIFunctionsAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/function_calling.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_functions/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _openai_output_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../openai/output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai/output_parser.js\");\n/* harmony import */ var _format_scratchpad_openai_functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../format_scratchpad/openai_functions.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/openai_functions.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Checks if the given action is a FunctionsAgentAction.\n * @param action The action to check.\n * @returns True if the action is a FunctionsAgentAction, false otherwise.\n */\nfunction isFunctionsAgentAction(action) {\n    return action.messageLog !== undefined;\n}\nfunction _convertAgentStepToMessages(action, observation) {\n    if (isFunctionsAgentAction(action) && action.messageLog !== undefined) {\n        return action.messageLog?.concat(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__.FunctionMessage(observation, action.tool));\n    }\n    else {\n        return [new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_2__.AIMessage(action.log)];\n    }\n}\nfunction _formatIntermediateSteps(intermediateSteps) {\n    return intermediateSteps.flatMap(({ action, observation }) => _convertAgentStepToMessages(action, observation));\n}\n/**\n * Class representing an agent for the OpenAI chat model in LangChain. It\n * extends the Agent class and provides additional functionality specific\n * to the OpenAIAgent type.\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain_agents.createOpenAIFunctionsAgent.html | createOpenAIFunctionsAgent method instead}.\n */\nclass OpenAIAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_4__.Agent {\n    static lc_name() {\n        return \"OpenAIAgent\";\n    }\n    _agentType() {\n        return \"openai-functions\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    constructor(input) {\n        super({ ...input, outputParser: undefined });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new _openai_output_parser_js__WEBPACK_IMPORTED_MODULE_7__.OpenAIFunctionsAgentOutputParser()\n        });\n        this.tools = input.tools;\n    }\n    /**\n     * Creates a prompt for the OpenAIAgent using the provided tools and\n     * fields.\n     * @param _tools The tools to be used in the prompt.\n     * @param fields Optional fields for creating the prompt.\n     * @returns A BasePromptTemplate object representing the created prompt.\n     */\n    static createPrompt(_tools, fields) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PREFIX } = fields || {};\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.ChatPromptTemplate.fromMessages([\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.SystemMessagePromptTemplate.fromTemplate(prefix),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.MessagesPlaceholder(\"chat_history\"),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_3__.MessagesPlaceholder(\"agent_scratchpad\"),\n        ]);\n    }\n    /**\n     * Creates an OpenAIAgent from a BaseLanguageModel and a list of tools.\n     * @param llm The BaseLanguageModel to use.\n     * @param tools The tools to be used by the agent.\n     * @param args Optional arguments for creating the agent.\n     * @returns An instance of OpenAIAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        OpenAIAgent.validateTools(tools);\n        if (llm._modelType() !== \"base_chat_model\" || llm._llmType() !== \"openai\") {\n            throw new Error(\"OpenAIAgent requires an OpenAI chat model\");\n        }\n        const prompt = OpenAIAgent.createPrompt(tools, args);\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_6__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new OpenAIAgent({\n            llmChain: chain,\n            allowedTools: tools.map((t) => t.name),\n            tools,\n        });\n    }\n    /**\n     * Constructs a scratch pad from a list of agent steps.\n     * @param steps The steps to include in the scratch pad.\n     * @returns A string or a list of BaseMessages representing the constructed scratch pad.\n     */\n    async constructScratchPad(steps) {\n        return _formatIntermediateSteps(steps);\n    }\n    /**\n     * Plans the next action or finish state of the agent based on the\n     * provided steps, inputs, and optional callback manager.\n     * @param steps The steps to consider in planning.\n     * @param inputs The inputs to consider in planning.\n     * @param callbackManager Optional CallbackManager to use in planning.\n     * @returns A Promise that resolves to an AgentAction or AgentFinish object representing the planned action or finish state.\n     */\n    async plan(steps, inputs, callbackManager) {\n        // Add scratchpad and stop to inputs\n        const thoughts = await this.constructScratchPad(steps);\n        const newInputs = {\n            ...inputs,\n            agent_scratchpad: thoughts,\n        };\n        if (this._stop().length !== 0) {\n            newInputs.stop = this._stop();\n        }\n        // Split inputs between prompt and llm\n        const llm = this.llmChain.llm;\n        const valuesForPrompt = { ...newInputs };\n        const valuesForLLM = {\n            functions: this.tools.map(_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAIFunction),\n        };\n        const callKeys = \"callKeys\" in this.llmChain.llm ? this.llmChain.llm.callKeys : [];\n        for (const key of callKeys) {\n            if (key in inputs) {\n                valuesForLLM[key] =\n                    inputs[key];\n                delete valuesForPrompt[key];\n            }\n        }\n        const promptValue = await this.llmChain.prompt.formatPromptValue(valuesForPrompt);\n        const message = await llm.invoke(promptValue.toChatMessages(), {\n            ...valuesForLLM,\n            callbacks: callbackManager,\n        });\n        return this.outputParser.parseAIMessage(message);\n    }\n}\n/**\n * Create an agent that uses OpenAI-style function calling.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createOpenAIFunctionsAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/openai-functions-agent\n * const prompt = await pull<ChatPromptTemplate>(\n *   \"hwchase17/openai-functions-agent\"\n * );\n *\n * const llm = new ChatOpenAI({\n *   temperature: 0,\n * });\n *\n * const agent = await createOpenAIFunctionsAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   chat_history: [\n *     new HumanMessage(\"hi! my name is cob\"),\n *     new AIMessage(\"Hello Cob! How can I assist you today?\"),\n *   ],\n * });\n * ```\n */\nasync function createOpenAIFunctionsAgent({ llm, tools, prompt, streamRunnable, }) {\n    if (!prompt.inputVariables.includes(\"agent_scratchpad\")) {\n        throw new Error([\n            `Prompt must have an input variable named \"agent_scratchpad\".`,\n            `Found ${JSON.stringify(prompt.inputVariables)} instead.`,\n        ].join(\"\\n\"));\n    }\n    const llmWithTools = llm.bind({\n        functions: tools.map(_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAIFunction),\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_openai_functions_js__WEBPACK_IMPORTED_MODULE_8__.formatToOpenAIFunctionMessages)(input.steps),\n        }),\n        prompt,\n        llmWithTools,\n        new _openai_output_parser_js__WEBPACK_IMPORTED_MODULE_7__.OpenAIFunctionsAgentOutputParser(),\n    ], {\n        name: \"OpenAIFunctionsAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/openai_functions/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/openai_functions/output_parser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/openai_functions/output_parser.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIFunctionsAgentOutputParser: () => (/* binding */ OpenAIFunctionsAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n\n\n\n/**\n * @example\n * ```typescript\n *\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\"ai\", \"You are a helpful assistant\"],\n *   [\"human\", \"{input}\"],\n *   new MessagesPlaceholder(\"agent_scratchpad\"),\n * ]);\n *\n * const modelWithFunctions = new ChatOpenAI({\n *   modelName: \"gpt-4\",\n *   temperature: 0,\n * }).bind({\n *   functions: tools.map((tool) => convertToOpenAIFunction(tool)),\n * });\n *\n * const runnableAgent = RunnableSequence.from([\n *   {\n *     input: (i) => i.input,\n *     agent_scratchpad: (i) => formatAgentSteps(i.steps),\n *   },\n *   prompt,\n *   modelWithFunctions,\n *   new OpenAIFunctionsAgentOutputParser(),\n * ]);\n *\n * const result = await runnableAgent.invoke({\n *   input: \"What is the weather in New York?\",\n *   steps: agentSteps,\n * });\n *\n * ```\n */\nclass OpenAIFunctionsAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n    }\n    static lc_name() {\n        return \"OpenAIFunctionsAgentOutputParser\";\n    }\n    async parse(text) {\n        throw new Error(`OpenAIFunctionsAgentOutputParser can only parse messages.\\nPassed input: ${text}`);\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0] && (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(generations[0].message)) {\n            return this.parseAIMessage(generations[0].message);\n        }\n        throw new Error(\"parseResult on OpenAIFunctionsAgentOutputParser only works on ChatGeneration output\");\n    }\n    /**\n     * Parses the output message into a FunctionsAgentAction or AgentFinish\n     * object.\n     * @param message The BaseMessage to parse.\n     * @returns A FunctionsAgentAction or AgentFinish object.\n     */\n    parseAIMessage(message) {\n        if (message.content && typeof message.content !== \"string\") {\n            throw new Error(\"This agent cannot parse non-string model responses.\");\n        }\n        if (message.additional_kwargs.function_call) {\n            // eslint-disable-next-line prefer-destructuring\n            const function_call = message.additional_kwargs.function_call;\n            try {\n                const toolInput = function_call.arguments\n                    ? JSON.parse(function_call.arguments)\n                    : {};\n                return {\n                    tool: function_call.name,\n                    toolInput,\n                    log: `Invoking \"${function_call.name}\" with ${function_call.arguments ?? \"{}\"}\\n${message.content}`,\n                    messageLog: [message],\n                };\n            }\n            catch (error) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse function arguments from chat model response. Text: \"${function_call.arguments}\". ${error}`);\n            }\n        }\n        else {\n            return {\n                returnValues: { output: message.content },\n                log: message.content,\n            };\n        }\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside OpenAIFunctionsAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV9mdW5jdGlvbnMvb3V0cHV0X3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ2M7QUFDakI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDTywrQ0FBK0MsOERBQXVCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvR0FBb0csS0FBSztBQUN6RztBQUNBO0FBQ0EsMkNBQTJDLHVFQUFhO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBbUIsU0FBUyw4QkFBOEIsRUFBRSxJQUFJLGdCQUFnQjtBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpRkFBcUIsd0VBQXdFLHdCQUF3QixLQUFLLE1BQU07QUFDMUo7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MseUJBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9vcGVuYWlfZnVuY3Rpb25zL291dHB1dF9wYXJzZXIuanM/NGMyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Jhc2VNZXNzYWdlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgT3V0cHV0UGFyc2VyRXhjZXB0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuaW1wb3J0IHsgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi4vdHlwZXMuanNcIjtcbi8qKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqXG4gKiBjb25zdCBwcm9tcHQgPSBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKFtcbiAqICAgW1wiYWlcIiwgXCJZb3UgYXJlIGEgaGVscGZ1bCBhc3Npc3RhbnRcIl0sXG4gKiAgIFtcImh1bWFuXCIsIFwie2lucHV0fVwiXSxcbiAqICAgbmV3IE1lc3NhZ2VzUGxhY2Vob2xkZXIoXCJhZ2VudF9zY3JhdGNocGFkXCIpLFxuICogXSk7XG4gKlxuICogY29uc3QgbW9kZWxXaXRoRnVuY3Rpb25zID0gbmV3IENoYXRPcGVuQUkoe1xuICogICBtb2RlbE5hbWU6IFwiZ3B0LTRcIixcbiAqICAgdGVtcGVyYXR1cmU6IDAsXG4gKiB9KS5iaW5kKHtcbiAqICAgZnVuY3Rpb25zOiB0b29scy5tYXAoKHRvb2wpID0+IGNvbnZlcnRUb09wZW5BSUZ1bmN0aW9uKHRvb2wpKSxcbiAqIH0pO1xuICpcbiAqIGNvbnN0IHJ1bm5hYmxlQWdlbnQgPSBSdW5uYWJsZVNlcXVlbmNlLmZyb20oW1xuICogICB7XG4gKiAgICAgaW5wdXQ6IChpKSA9PiBpLmlucHV0LFxuICogICAgIGFnZW50X3NjcmF0Y2hwYWQ6IChpKSA9PiBmb3JtYXRBZ2VudFN0ZXBzKGkuc3RlcHMpLFxuICogICB9LFxuICogICBwcm9tcHQsXG4gKiAgIG1vZGVsV2l0aEZ1bmN0aW9ucyxcbiAqICAgbmV3IE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyKCksXG4gKiBdKTtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBydW5uYWJsZUFnZW50Lmludm9rZSh7XG4gKiAgIGlucHV0OiBcIldoYXQgaXMgdGhlIHdlYXRoZXIgaW4gTmV3IFlvcms/XCIsXG4gKiAgIHN0ZXBzOiBhZ2VudFN0ZXBzLFxuICogfSk7XG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlciBleHRlbmRzIEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5cIiwgXCJhZ2VudHNcIiwgXCJvcGVuYWlcIl1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlclwiO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXIgY2FuIG9ubHkgcGFyc2UgbWVzc2FnZXMuXFxuUGFzc2VkIGlucHV0OiAke3RleHR9YCk7XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlUmVzdWx0KGdlbmVyYXRpb25zKSB7XG4gICAgICAgIGlmIChcIm1lc3NhZ2VcIiBpbiBnZW5lcmF0aW9uc1swXSAmJiBpc0Jhc2VNZXNzYWdlKGdlbmVyYXRpb25zWzBdLm1lc3NhZ2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJzZUFJTWVzc2FnZShnZW5lcmF0aW9uc1swXS5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwYXJzZVJlc3VsdCBvbiBPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlciBvbmx5IHdvcmtzIG9uIENoYXRHZW5lcmF0aW9uIG91dHB1dFwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHRoZSBvdXRwdXQgbWVzc2FnZSBpbnRvIGEgRnVuY3Rpb25zQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2hcbiAgICAgKiBvYmplY3QuXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIEJhc2VNZXNzYWdlIHRvIHBhcnNlLlxuICAgICAqIEByZXR1cm5zIEEgRnVuY3Rpb25zQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2ggb2JqZWN0LlxuICAgICAqL1xuICAgIHBhcnNlQUlNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UuY29udGVudCAmJiB0eXBlb2YgbWVzc2FnZS5jb250ZW50ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIGFnZW50IGNhbm5vdCBwYXJzZSBub24tc3RyaW5nIG1vZGVsIHJlc3BvbnNlcy5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1lc3NhZ2UuYWRkaXRpb25hbF9rd2FyZ3MuZnVuY3Rpb25fY2FsbCkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICBjb25zdCBmdW5jdGlvbl9jYWxsID0gbWVzc2FnZS5hZGRpdGlvbmFsX2t3YXJncy5mdW5jdGlvbl9jYWxsO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0b29sSW5wdXQgPSBmdW5jdGlvbl9jYWxsLmFyZ3VtZW50c1xuICAgICAgICAgICAgICAgICAgICA/IEpTT04ucGFyc2UoZnVuY3Rpb25fY2FsbC5hcmd1bWVudHMpXG4gICAgICAgICAgICAgICAgICAgIDoge307XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdG9vbDogZnVuY3Rpb25fY2FsbC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICB0b29sSW5wdXQsXG4gICAgICAgICAgICAgICAgICAgIGxvZzogYEludm9raW5nIFwiJHtmdW5jdGlvbl9jYWxsLm5hbWV9XCIgd2l0aCAke2Z1bmN0aW9uX2NhbGwuYXJndW1lbnRzID8/IFwie31cIn1cXG4ke21lc3NhZ2UuY29udGVudH1gLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlTG9nOiBbbWVzc2FnZV0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBPdXRwdXRQYXJzZXJFeGNlcHRpb24oYEZhaWxlZCB0byBwYXJzZSBmdW5jdGlvbiBhcmd1bWVudHMgZnJvbSBjaGF0IG1vZGVsIHJlc3BvbnNlLiBUZXh0OiBcIiR7ZnVuY3Rpb25fY2FsbC5hcmd1bWVudHN9XCIuICR7ZXJyb3J9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHVyblZhbHVlczogeyBvdXRwdXQ6IG1lc3NhZ2UuY29udGVudCB9LFxuICAgICAgICAgICAgICAgIGxvZzogbWVzc2FnZS5jb250ZW50LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImdldEZvcm1hdEluc3RydWN0aW9ucyBub3QgaW1wbGVtZW50ZWQgaW5zaWRlIE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyLlwiKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/openai_functions/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/openai_functions/prompt.js":
/*!***********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/openai_functions/prompt.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `You are a helpful AI assistant.`;\nconst SUFFIX = ``;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV9mdW5jdGlvbnMvcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV9mdW5jdGlvbnMvcHJvbXB0LmpzP2M2YzIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBSRUZJWCA9IGBZb3UgYXJlIGEgaGVscGZ1bCBBSSBhc3Npc3RhbnQuYDtcbmV4cG9ydCBjb25zdCBTVUZGSVggPSBgYDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/openai_functions/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/openai_tools/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/openai_tools/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIToolsAgentOutputParser: () => (/* reexport safe */ _output_parser_js__WEBPACK_IMPORTED_MODULE_3__.OpenAIToolsAgentOutputParser),\n/* harmony export */   createOpenAIToolsAgent: () => (/* binding */ createOpenAIToolsAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/function_calling.js\");\n/* harmony import */ var _format_scratchpad_openai_tools_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format_scratchpad/openai_tools.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/openai_tools.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_tools/output_parser.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n\n\n\n\n\n\n/**\n * Create an agent that uses OpenAI-style tool calling.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createOpenAIToolsAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/openai-tools-agent\n * const prompt = await pull<ChatPromptTemplate>(\n *   \"hwchase17/openai-tools-agent\"\n * );\n *\n * const llm = new ChatOpenAI({\n *   temperature: 0,\n *   modelName: \"gpt-3.5-turbo-1106\",\n * });\n *\n * const agent = await createOpenAIToolsAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   chat_history: [\n *     new HumanMessage(\"hi! my name is cob\"),\n *     new AIMessage(\"Hello Cob! How can I assist you today?\"),\n *   ],\n * });\n * ```\n */\nasync function createOpenAIToolsAgent({ llm, tools, prompt, streamRunnable, }) {\n    if (!prompt.inputVariables.includes(\"agent_scratchpad\")) {\n        throw new Error([\n            `Prompt must have an input variable named \"agent_scratchpad\".`,\n            `Found ${JSON.stringify(prompt.inputVariables)} instead.`,\n        ].join(\"\\n\"));\n    }\n    const modelWithTools = llm.bind({ tools: tools.map(_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAITool) });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_openai_tools_js__WEBPACK_IMPORTED_MODULE_2__.formatToOpenAIToolMessages)(input.steps),\n        }),\n        prompt,\n        modelWithTools,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_3__.OpenAIToolsAgentOutputParser(),\n    ], {\n        name: \"OpenAIToolsAgent\",\n        streamRunnable,\n        singleAction: false,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV90b29scy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWdFO0FBQ2E7QUFDSztBQUNmO0FBQ2Y7QUFDWjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdDQUF3QztBQUNwRCxZQUFZLE9BQU87QUFDbkIsaUJBQWlCLHFCQUFxQjtBQUN0QyxZQUFZLDBCQUEwQjtBQUN0QztBQUNBLFlBQVksYUFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPLHdDQUF3QyxxQ0FBcUM7QUFDcEY7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVDQUF1QztBQUM1RDtBQUNBO0FBQ0Esc0NBQXNDLGlCQUFpQix1RkFBbUIsR0FBRztBQUM3RSxrQkFBa0IsNERBQXFCO0FBQ3ZDLFFBQVEsMEVBQW1CO0FBQzNCLHlDQUF5Qyw4RkFBMEI7QUFDbkUsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZLDJFQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvb3BlbmFpX3Rvb2xzL2luZGV4LmpzPzkyYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUnVubmFibGVQYXNzdGhyb3VnaCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcnVubmFibGVzXCI7XG5pbXBvcnQgeyBjb252ZXJ0VG9PcGVuQUlUb29sIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS91dGlscy9mdW5jdGlvbl9jYWxsaW5nXCI7XG5pbXBvcnQgeyBmb3JtYXRUb09wZW5BSVRvb2xNZXNzYWdlcyB9IGZyb20gXCIuLi9mb3JtYXRfc2NyYXRjaHBhZC9vcGVuYWlfdG9vbHMuanNcIjtcbmltcG9ydCB7IE9wZW5BSVRvb2xzQWdlbnRPdXRwdXRQYXJzZXIsIH0gZnJvbSBcIi4vb3V0cHV0X3BhcnNlci5qc1wiO1xuaW1wb3J0IHsgQWdlbnRSdW5uYWJsZVNlcXVlbmNlIH0gZnJvbSBcIi4uL2FnZW50LmpzXCI7XG5leHBvcnQgeyBPcGVuQUlUb29sc0FnZW50T3V0cHV0UGFyc2VyIH07XG4vKipcbiAqIENyZWF0ZSBhbiBhZ2VudCB0aGF0IHVzZXMgT3BlbkFJLXN0eWxlIHRvb2wgY2FsbGluZy5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1zIHJlcXVpcmVkIHRvIGNyZWF0ZSB0aGUgYWdlbnQuIEluY2x1ZGVzIGFuIExMTSwgdG9vbHMsIGFuZCBwcm9tcHQuXG4gKiBAcmV0dXJucyBBIHJ1bm5hYmxlIHNlcXVlbmNlIHJlcHJlc2VudGluZyBhbiBhZ2VudC4gSXQgdGFrZXMgYXMgaW5wdXQgYWxsIHRoZSBzYW1lIGlucHV0XG4gKiAgICAgdmFyaWFibGVzIGFzIHRoZSBwcm9tcHQgcGFzc2VkIGluIGRvZXMuIEl0IHJldHVybnMgYXMgb3V0cHV0IGVpdGhlciBhblxuICogICAgIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBZ2VudEV4ZWN1dG9yLCBjcmVhdGVPcGVuQUlUb29sc0FnZW50IH0gZnJvbSBcImxhbmdjaGFpbi9hZ2VudHNcIjtcbiAqIGltcG9ydCB7IHB1bGwgfSBmcm9tIFwibGFuZ2NoYWluL2h1YlwiO1xuICogaW1wb3J0IHR5cGUgeyBDaGF0UHJvbXB0VGVtcGxhdGUgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Byb21wdHNcIjtcbiAqIGltcG9ydCB7IEFJTWVzc2FnZSwgSHVtYW5NZXNzYWdlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuICpcbiAqIGltcG9ydCB7IENoYXRPcGVuQUkgfSBmcm9tIFwiQGxhbmdjaGFpbi9vcGVuYWlcIjtcbiAqXG4gKiAvLyBEZWZpbmUgdGhlIHRvb2xzIHRoZSBhZ2VudCB3aWxsIGhhdmUgYWNjZXNzIHRvLlxuICogY29uc3QgdG9vbHMgPSBbLi4uXTtcbiAqXG4gKiAvLyBHZXQgdGhlIHByb21wdCB0byB1c2UgLSB5b3UgY2FuIG1vZGlmeSB0aGlzIVxuICogLy8gSWYgeW91IHdhbnQgdG8gc2VlIHRoZSBwcm9tcHQgaW4gZnVsbCwgeW91IGNhbiBhdDpcbiAqIC8vIGh0dHBzOi8vc21pdGgubGFuZ2NoYWluLmNvbS9odWIvaHdjaGFzZTE3L29wZW5haS10b29scy1hZ2VudFxuICogY29uc3QgcHJvbXB0ID0gYXdhaXQgcHVsbDxDaGF0UHJvbXB0VGVtcGxhdGU+KFxuICogICBcImh3Y2hhc2UxNy9vcGVuYWktdG9vbHMtYWdlbnRcIlxuICogKTtcbiAqXG4gKiBjb25zdCBsbG0gPSBuZXcgQ2hhdE9wZW5BSSh7XG4gKiAgIHRlbXBlcmF0dXJlOiAwLFxuICogICBtb2RlbE5hbWU6IFwiZ3B0LTMuNS10dXJiby0xMTA2XCIsXG4gKiB9KTtcbiAqXG4gKiBjb25zdCBhZ2VudCA9IGF3YWl0IGNyZWF0ZU9wZW5BSVRvb2xzQWdlbnQoe1xuICogICBsbG0sXG4gKiAgIHRvb2xzLFxuICogICBwcm9tcHQsXG4gKiB9KTtcbiAqXG4gKiBjb25zdCBhZ2VudEV4ZWN1dG9yID0gbmV3IEFnZW50RXhlY3V0b3Ioe1xuICogICBhZ2VudCxcbiAqICAgdG9vbHMsXG4gKiB9KTtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBhZ2VudEV4ZWN1dG9yLmludm9rZSh7XG4gKiAgIGlucHV0OiBcIndoYXQgaXMgTGFuZ0NoYWluP1wiLFxuICogfSk7XG4gKlxuICogLy8gV2l0aCBjaGF0IGhpc3RvcnlcbiAqIGNvbnN0IHJlc3VsdDIgPSBhd2FpdCBhZ2VudEV4ZWN1dG9yLmludm9rZSh7XG4gKiAgIGlucHV0OiBcIndoYXQncyBteSBuYW1lP1wiLFxuICogICBjaGF0X2hpc3Rvcnk6IFtcbiAqICAgICBuZXcgSHVtYW5NZXNzYWdlKFwiaGkhIG15IG5hbWUgaXMgY29iXCIpLFxuICogICAgIG5ldyBBSU1lc3NhZ2UoXCJIZWxsbyBDb2IhIEhvdyBjYW4gSSBhc3Npc3QgeW91IHRvZGF5P1wiKSxcbiAqICAgXSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVPcGVuQUlUb29sc0FnZW50KHsgbGxtLCB0b29scywgcHJvbXB0LCBzdHJlYW1SdW5uYWJsZSwgfSkge1xuICAgIGlmICghcHJvbXB0LmlucHV0VmFyaWFibGVzLmluY2x1ZGVzKFwiYWdlbnRfc2NyYXRjaHBhZFwiKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoW1xuICAgICAgICAgICAgYFByb21wdCBtdXN0IGhhdmUgYW4gaW5wdXQgdmFyaWFibGUgbmFtZWQgXCJhZ2VudF9zY3JhdGNocGFkXCIuYCxcbiAgICAgICAgICAgIGBGb3VuZCAke0pTT04uc3RyaW5naWZ5KHByb21wdC5pbnB1dFZhcmlhYmxlcyl9IGluc3RlYWQuYCxcbiAgICAgICAgXS5qb2luKFwiXFxuXCIpKTtcbiAgICB9XG4gICAgY29uc3QgbW9kZWxXaXRoVG9vbHMgPSBsbG0uYmluZCh7IHRvb2xzOiB0b29scy5tYXAoY29udmVydFRvT3BlbkFJVG9vbCkgfSk7XG4gICAgY29uc3QgYWdlbnQgPSBBZ2VudFJ1bm5hYmxlU2VxdWVuY2UuZnJvbVJ1bm5hYmxlcyhbXG4gICAgICAgIFJ1bm5hYmxlUGFzc3Rocm91Z2guYXNzaWduKHtcbiAgICAgICAgICAgIGFnZW50X3NjcmF0Y2hwYWQ6IChpbnB1dCkgPT4gZm9ybWF0VG9PcGVuQUlUb29sTWVzc2FnZXMoaW5wdXQuc3RlcHMpLFxuICAgICAgICB9KSxcbiAgICAgICAgcHJvbXB0LFxuICAgICAgICBtb2RlbFdpdGhUb29scyxcbiAgICAgICAgbmV3IE9wZW5BSVRvb2xzQWdlbnRPdXRwdXRQYXJzZXIoKSxcbiAgICBdLCB7XG4gICAgICAgIG5hbWU6IFwiT3BlbkFJVG9vbHNBZ2VudFwiLFxuICAgICAgICBzdHJlYW1SdW5uYWJsZSxcbiAgICAgICAgc2luZ2xlQWN0aW9uOiBmYWxzZSxcbiAgICB9KTtcbiAgICByZXR1cm4gYWdlbnQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/openai_tools/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/openai_tools/output_parser.js":
/*!**************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/openai_tools/output_parser.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIToolsAgentOutputParser: () => (/* binding */ OpenAIToolsAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n\n\n\n/**\n * @example\n * ```typescript\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\"ai\", \"You are a helpful assistant\"],\n *   [\"human\", \"{input}\"],\n *   new MessagesPlaceholder(\"agent_scratchpad\"),\n * ]);\n *\n * const runnableAgent = RunnableSequence.from([\n *   {\n *     input: (i: { input: string; steps: ToolsAgentStep[] }) => i.input,\n *     agent_scratchpad: (i: { input: string; steps: ToolsAgentStep[] }) =>\n *       formatToOpenAIToolMessages(i.steps),\n *   },\n *   prompt,\n *   new ChatOpenAI({\n *     modelName: \"gpt-3.5-turbo-1106\",\n *     temperature: 0,\n *   }).bind({ tools: tools.map(convertToOpenAITool) }),\n *   new OpenAIToolsAgentOutputParser(),\n * ]).withConfig({ runName: \"OpenAIToolsAgent\" });\n *\n * const result = await runnableAgent.invoke({\n *   input:\n *     \"What is the sum of the current temperature in San Francisco, New York, and Tokyo?\",\n * });\n * ```\n */\nclass OpenAIToolsAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentMultiActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n    }\n    static lc_name() {\n        return \"OpenAIToolsAgentOutputParser\";\n    }\n    async parse(text) {\n        throw new Error(`OpenAIFunctionsAgentOutputParser can only parse messages.\\nPassed input: ${text}`);\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0] && (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(generations[0].message)) {\n            return this.parseAIMessage(generations[0].message);\n        }\n        throw new Error(\"parseResult on OpenAIFunctionsAgentOutputParser only works on ChatGeneration output\");\n    }\n    /**\n     * Parses the output message into a ToolsAgentAction[] or AgentFinish\n     * object.\n     * @param message The BaseMessage to parse.\n     * @returns A ToolsAgentAction[] or AgentFinish object.\n     */\n    parseAIMessage(message) {\n        if (message.content && typeof message.content !== \"string\") {\n            throw new Error(\"This agent cannot parse non-string model responses.\");\n        }\n        if (message.additional_kwargs.tool_calls) {\n            const toolCalls = message.additional_kwargs.tool_calls;\n            try {\n                return toolCalls.map((toolCall, i) => {\n                    const toolInput = toolCall.function.arguments\n                        ? JSON.parse(toolCall.function.arguments)\n                        : {};\n                    const messageLog = i === 0 ? [message] : [];\n                    return {\n                        tool: toolCall.function.name,\n                        toolInput,\n                        toolCallId: toolCall.id,\n                        log: `Invoking \"${toolCall.function.name}\" with ${toolCall.function.arguments ?? \"{}\"}\\n${message.content}`,\n                        messageLog,\n                    };\n                });\n            }\n            catch (error) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse tool arguments from chat model response. Text: \"${JSON.stringify(toolCalls)}\". ${error}`);\n            }\n        }\n        else {\n            return {\n                returnValues: { output: message.content },\n                log: message.content,\n            };\n        }\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside OpenAIToolsAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV90b29scy9vdXRwdXRfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFDYztBQUNaO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGVBQWUseUJBQXlCO0FBQzVELCtCQUErQixlQUFlLHlCQUF5QjtBQUN2RTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sU0FBUyx1Q0FBdUM7QUFDdEQ7QUFDQSxtQkFBbUIsNkJBQTZCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTywyQ0FBMkMsbUVBQTRCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvR0FBb0csS0FBSztBQUN6RztBQUNBO0FBQ0EsMkNBQTJDLHVFQUFhO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsdUJBQXVCLFNBQVMsa0NBQWtDLEVBQUUsSUFBSSxnQkFBZ0I7QUFDbEk7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsMEJBQTBCLGlGQUFxQixvRUFBb0UsMEJBQTBCLEtBQUssTUFBTTtBQUN4SjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx5QkFBeUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL29wZW5haV90b29scy9vdXRwdXRfcGFyc2VyLmpzPzQ3N2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCYXNlTWVzc2FnZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbmltcG9ydCB7IE91dHB1dFBhcnNlckV4Y2VwdGlvbiB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvb3V0cHV0X3BhcnNlcnNcIjtcbmltcG9ydCB7IEFnZW50TXVsdGlBY3Rpb25PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi4vdHlwZXMuanNcIjtcbi8qKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IHByb21wdCA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tTWVzc2FnZXMoW1xuICogICBbXCJhaVwiLCBcIllvdSBhcmUgYSBoZWxwZnVsIGFzc2lzdGFudFwiXSxcbiAqICAgW1wiaHVtYW5cIiwgXCJ7aW5wdXR9XCJdLFxuICogICBuZXcgTWVzc2FnZXNQbGFjZWhvbGRlcihcImFnZW50X3NjcmF0Y2hwYWRcIiksXG4gKiBdKTtcbiAqXG4gKiBjb25zdCBydW5uYWJsZUFnZW50ID0gUnVubmFibGVTZXF1ZW5jZS5mcm9tKFtcbiAqICAge1xuICogICAgIGlucHV0OiAoaTogeyBpbnB1dDogc3RyaW5nOyBzdGVwczogVG9vbHNBZ2VudFN0ZXBbXSB9KSA9PiBpLmlucHV0LFxuICogICAgIGFnZW50X3NjcmF0Y2hwYWQ6IChpOiB7IGlucHV0OiBzdHJpbmc7IHN0ZXBzOiBUb29sc0FnZW50U3RlcFtdIH0pID0+XG4gKiAgICAgICBmb3JtYXRUb09wZW5BSVRvb2xNZXNzYWdlcyhpLnN0ZXBzKSxcbiAqICAgfSxcbiAqICAgcHJvbXB0LFxuICogICBuZXcgQ2hhdE9wZW5BSSh7XG4gKiAgICAgbW9kZWxOYW1lOiBcImdwdC0zLjUtdHVyYm8tMTEwNlwiLFxuICogICAgIHRlbXBlcmF0dXJlOiAwLFxuICogICB9KS5iaW5kKHsgdG9vbHM6IHRvb2xzLm1hcChjb252ZXJ0VG9PcGVuQUlUb29sKSB9KSxcbiAqICAgbmV3IE9wZW5BSVRvb2xzQWdlbnRPdXRwdXRQYXJzZXIoKSxcbiAqIF0pLndpdGhDb25maWcoeyBydW5OYW1lOiBcIk9wZW5BSVRvb2xzQWdlbnRcIiB9KTtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBydW5uYWJsZUFnZW50Lmludm9rZSh7XG4gKiAgIGlucHV0OlxuICogICAgIFwiV2hhdCBpcyB0aGUgc3VtIG9mIHRoZSBjdXJyZW50IHRlbXBlcmF0dXJlIGluIFNhbiBGcmFuY2lzY28sIE5ldyBZb3JrLCBhbmQgVG9reW8/XCIsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgT3BlbkFJVG9vbHNBZ2VudE91dHB1dFBhcnNlciBleHRlbmRzIEFnZW50TXVsdGlBY3Rpb25PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcImFnZW50c1wiLCBcIm9wZW5haVwiXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIk9wZW5BSVRvb2xzQWdlbnRPdXRwdXRQYXJzZXJcIjtcbiAgICB9XG4gICAgYXN5bmMgcGFyc2UodGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE9wZW5BSUZ1bmN0aW9uc0FnZW50T3V0cHV0UGFyc2VyIGNhbiBvbmx5IHBhcnNlIG1lc3NhZ2VzLlxcblBhc3NlZCBpbnB1dDogJHt0ZXh0fWApO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZVJlc3VsdChnZW5lcmF0aW9ucykge1xuICAgICAgICBpZiAoXCJtZXNzYWdlXCIgaW4gZ2VuZXJhdGlvbnNbMF0gJiYgaXNCYXNlTWVzc2FnZShnZW5lcmF0aW9uc1swXS5tZXNzYWdlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VBSU1lc3NhZ2UoZ2VuZXJhdGlvbnNbMF0ubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicGFyc2VSZXN1bHQgb24gT3BlbkFJRnVuY3Rpb25zQWdlbnRPdXRwdXRQYXJzZXIgb25seSB3b3JrcyBvbiBDaGF0R2VuZXJhdGlvbiBvdXRwdXRcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgb3V0cHV0IG1lc3NhZ2UgaW50byBhIFRvb2xzQWdlbnRBY3Rpb25bXSBvciBBZ2VudEZpbmlzaFxuICAgICAqIG9iamVjdC5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgQmFzZU1lc3NhZ2UgdG8gcGFyc2UuXG4gICAgICogQHJldHVybnMgQSBUb29sc0FnZW50QWN0aW9uW10gb3IgQWdlbnRGaW5pc2ggb2JqZWN0LlxuICAgICAqL1xuICAgIHBhcnNlQUlNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UuY29udGVudCAmJiB0eXBlb2YgbWVzc2FnZS5jb250ZW50ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIGFnZW50IGNhbm5vdCBwYXJzZSBub24tc3RyaW5nIG1vZGVsIHJlc3BvbnNlcy5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1lc3NhZ2UuYWRkaXRpb25hbF9rd2FyZ3MudG9vbF9jYWxscykge1xuICAgICAgICAgICAgY29uc3QgdG9vbENhbGxzID0gbWVzc2FnZS5hZGRpdGlvbmFsX2t3YXJncy50b29sX2NhbGxzO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9vbENhbGxzLm1hcCgodG9vbENhbGwsIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9vbElucHV0ID0gdG9vbENhbGwuZnVuY3Rpb24uYXJndW1lbnRzXG4gICAgICAgICAgICAgICAgICAgICAgICA/IEpTT04ucGFyc2UodG9vbENhbGwuZnVuY3Rpb24uYXJndW1lbnRzKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB7fTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUxvZyA9IGkgPT09IDAgPyBbbWVzc2FnZV0gOiBbXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2w6IHRvb2xDYWxsLmZ1bmN0aW9uLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sSW5wdXQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sQ2FsbElkOiB0b29sQ2FsbC5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvZzogYEludm9raW5nIFwiJHt0b29sQ2FsbC5mdW5jdGlvbi5uYW1lfVwiIHdpdGggJHt0b29sQ2FsbC5mdW5jdGlvbi5hcmd1bWVudHMgPz8gXCJ7fVwifVxcbiR7bWVzc2FnZS5jb250ZW50fWAsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlTG9nLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE91dHB1dFBhcnNlckV4Y2VwdGlvbihgRmFpbGVkIHRvIHBhcnNlIHRvb2wgYXJndW1lbnRzIGZyb20gY2hhdCBtb2RlbCByZXNwb25zZS4gVGV4dDogXCIke0pTT04uc3RyaW5naWZ5KHRvb2xDYWxscyl9XCIuICR7ZXJyb3J9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHVyblZhbHVlczogeyBvdXRwdXQ6IG1lc3NhZ2UuY29udGVudCB9LFxuICAgICAgICAgICAgICAgIGxvZzogbWVzc2FnZS5jb250ZW50LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImdldEZvcm1hdEluc3RydWN0aW9ucyBub3QgaW1wbGVtZW50ZWQgaW5zaWRlIE9wZW5BSVRvb2xzQWdlbnRPdXRwdXRQYXJzZXIuXCIpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/openai_tools/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/react/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/react/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReactAgent: () => (/* binding */ createReactAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _tools_render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tools/render.js */ \"(rsc)/./node_modules/langchain/dist/tools/render.js\");\n/* harmony import */ var _format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format_scratchpad/log.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/log.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/react/output_parser.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n\n\n\n\n\n/**\n * Create an agent that uses ReAct prompting.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createReactAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { PromptTemplate } from \"@langchain/core/prompts\";\n *\n * import { OpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/react\n * const prompt = await pull<PromptTemplate>(\"hwchase17/react\");\n *\n * const llm = new OpenAI({\n *   temperature: 0,\n * });\n *\n * const agent = await createReactAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n * ```\n */\nasync function createReactAgent({ llm, tools, prompt, streamRunnable, }) {\n    const missingVariables = [\"tools\", \"tool_names\", \"agent_scratchpad\"].filter((v) => !prompt.inputVariables.includes(v));\n    if (missingVariables.length > 0) {\n        throw new Error(`Provided prompt is missing required input variables: ${JSON.stringify(missingVariables)}`);\n    }\n    const toolNames = tools.map((tool) => tool.name);\n    const partialedPrompt = await prompt.partial({\n        tools: (0,_tools_render_js__WEBPACK_IMPORTED_MODULE_1__.renderTextDescription)(tools),\n        tool_names: toolNames.join(\", \"),\n    });\n    // TODO: Add .bind to core runnable interface.\n    const llmWithStop = llm.bind({\n        stop: [\"\\nObservation:\"],\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_2__.formatLogToString)(input.steps),\n        }),\n        partialedPrompt,\n        llmWithStop,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_3__.ReActSingleInputOutputParser({\n            toolNames,\n        }),\n    ], {\n        name: \"ReactAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFnRTtBQUNGO0FBQ0U7QUFDRTtBQUNkO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDLFlBQVksT0FBTztBQUNuQixpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPLGtDQUFrQyxxQ0FBcUM7QUFDOUU7QUFDQTtBQUNBLGdGQUFnRixpQ0FBaUM7QUFDakg7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1RUFBcUI7QUFDcEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGtCQUFrQiw0REFBcUI7QUFDdkMsUUFBUSwwRUFBbUI7QUFDM0IseUNBQXlDLDRFQUFpQjtBQUMxRCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVksMkVBQTRCO0FBQ3hDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9yZWFjdC9pbmRleC5qcz82NGUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJ1bm5hYmxlUGFzc3Rocm91Z2ggfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3J1bm5hYmxlc1wiO1xuaW1wb3J0IHsgcmVuZGVyVGV4dERlc2NyaXB0aW9uIH0gZnJvbSBcIi4uLy4uL3Rvb2xzL3JlbmRlci5qc1wiO1xuaW1wb3J0IHsgZm9ybWF0TG9nVG9TdHJpbmcgfSBmcm9tIFwiLi4vZm9ybWF0X3NjcmF0Y2hwYWQvbG9nLmpzXCI7XG5pbXBvcnQgeyBSZUFjdFNpbmdsZUlucHV0T3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4vb3V0cHV0X3BhcnNlci5qc1wiO1xuaW1wb3J0IHsgQWdlbnRSdW5uYWJsZVNlcXVlbmNlIH0gZnJvbSBcIi4uL2FnZW50LmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhbiBhZ2VudCB0aGF0IHVzZXMgUmVBY3QgcHJvbXB0aW5nLlxuICogQHBhcmFtIHBhcmFtcyBQYXJhbXMgcmVxdWlyZWQgdG8gY3JlYXRlIHRoZSBhZ2VudC4gSW5jbHVkZXMgYW4gTExNLCB0b29scywgYW5kIHByb21wdC5cbiAqIEByZXR1cm5zIEEgcnVubmFibGUgc2VxdWVuY2UgcmVwcmVzZW50aW5nIGFuIGFnZW50LiBJdCB0YWtlcyBhcyBpbnB1dCBhbGwgdGhlIHNhbWUgaW5wdXRcbiAqICAgICB2YXJpYWJsZXMgYXMgdGhlIHByb21wdCBwYXNzZWQgaW4gZG9lcy4gSXQgcmV0dXJucyBhcyBvdXRwdXQgZWl0aGVyIGFuXG4gKiAgICAgQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2guXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFnZW50RXhlY3V0b3IsIGNyZWF0ZVJlYWN0QWdlbnQgfSBmcm9tIFwibGFuZ2NoYWluL2FnZW50c1wiO1xuICogaW1wb3J0IHsgcHVsbCB9IGZyb20gXCJsYW5nY2hhaW4vaHViXCI7XG4gKiBpbXBvcnQgdHlwZSB7IFByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG4gKlxuICogaW1wb3J0IHsgT3BlbkFJIH0gZnJvbSBcIkBsYW5nY2hhaW4vb3BlbmFpXCI7XG4gKlxuICogLy8gRGVmaW5lIHRoZSB0b29scyB0aGUgYWdlbnQgd2lsbCBoYXZlIGFjY2VzcyB0by5cbiAqIGNvbnN0IHRvb2xzID0gWy4uLl07XG4gKlxuICogLy8gR2V0IHRoZSBwcm9tcHQgdG8gdXNlIC0geW91IGNhbiBtb2RpZnkgdGhpcyFcbiAqIC8vIElmIHlvdSB3YW50IHRvIHNlZSB0aGUgcHJvbXB0IGluIGZ1bGwsIHlvdSBjYW4gYXQ6XG4gKiAvLyBodHRwczovL3NtaXRoLmxhbmdjaGFpbi5jb20vaHViL2h3Y2hhc2UxNy9yZWFjdFxuICogY29uc3QgcHJvbXB0ID0gYXdhaXQgcHVsbDxQcm9tcHRUZW1wbGF0ZT4oXCJod2NoYXNlMTcvcmVhY3RcIik7XG4gKlxuICogY29uc3QgbGxtID0gbmV3IE9wZW5BSSh7XG4gKiAgIHRlbXBlcmF0dXJlOiAwLFxuICogfSk7XG4gKlxuICogY29uc3QgYWdlbnQgPSBhd2FpdCBjcmVhdGVSZWFjdEFnZW50KHtcbiAqICAgbGxtLFxuICogICB0b29scyxcbiAqICAgcHJvbXB0LFxuICogfSk7XG4gKlxuICogY29uc3QgYWdlbnRFeGVjdXRvciA9IG5ldyBBZ2VudEV4ZWN1dG9yKHtcbiAqICAgYWdlbnQsXG4gKiAgIHRvb2xzLFxuICogfSk7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgYWdlbnRFeGVjdXRvci5pbnZva2Uoe1xuICogICBpbnB1dDogXCJ3aGF0IGlzIExhbmdDaGFpbj9cIixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVSZWFjdEFnZW50KHsgbGxtLCB0b29scywgcHJvbXB0LCBzdHJlYW1SdW5uYWJsZSwgfSkge1xuICAgIGNvbnN0IG1pc3NpbmdWYXJpYWJsZXMgPSBbXCJ0b29sc1wiLCBcInRvb2xfbmFtZXNcIiwgXCJhZ2VudF9zY3JhdGNocGFkXCJdLmZpbHRlcigodikgPT4gIXByb21wdC5pbnB1dFZhcmlhYmxlcy5pbmNsdWRlcyh2KSk7XG4gICAgaWYgKG1pc3NpbmdWYXJpYWJsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFByb3ZpZGVkIHByb21wdCBpcyBtaXNzaW5nIHJlcXVpcmVkIGlucHV0IHZhcmlhYmxlczogJHtKU09OLnN0cmluZ2lmeShtaXNzaW5nVmFyaWFibGVzKX1gKTtcbiAgICB9XG4gICAgY29uc3QgdG9vbE5hbWVzID0gdG9vbHMubWFwKCh0b29sKSA9PiB0b29sLm5hbWUpO1xuICAgIGNvbnN0IHBhcnRpYWxlZFByb21wdCA9IGF3YWl0IHByb21wdC5wYXJ0aWFsKHtcbiAgICAgICAgdG9vbHM6IHJlbmRlclRleHREZXNjcmlwdGlvbih0b29scyksXG4gICAgICAgIHRvb2xfbmFtZXM6IHRvb2xOYW1lcy5qb2luKFwiLCBcIiksXG4gICAgfSk7XG4gICAgLy8gVE9ETzogQWRkIC5iaW5kIHRvIGNvcmUgcnVubmFibGUgaW50ZXJmYWNlLlxuICAgIGNvbnN0IGxsbVdpdGhTdG9wID0gbGxtLmJpbmQoe1xuICAgICAgICBzdG9wOiBbXCJcXG5PYnNlcnZhdGlvbjpcIl0sXG4gICAgfSk7XG4gICAgY29uc3QgYWdlbnQgPSBBZ2VudFJ1bm5hYmxlU2VxdWVuY2UuZnJvbVJ1bm5hYmxlcyhbXG4gICAgICAgIFJ1bm5hYmxlUGFzc3Rocm91Z2guYXNzaWduKHtcbiAgICAgICAgICAgIGFnZW50X3NjcmF0Y2hwYWQ6IChpbnB1dCkgPT4gZm9ybWF0TG9nVG9TdHJpbmcoaW5wdXQuc3RlcHMpLFxuICAgICAgICB9KSxcbiAgICAgICAgcGFydGlhbGVkUHJvbXB0LFxuICAgICAgICBsbG1XaXRoU3RvcCxcbiAgICAgICAgbmV3IFJlQWN0U2luZ2xlSW5wdXRPdXRwdXRQYXJzZXIoe1xuICAgICAgICAgICAgdG9vbE5hbWVzLFxuICAgICAgICB9KSxcbiAgICBdLCB7XG4gICAgICAgIG5hbWU6IFwiUmVhY3RBZ2VudFwiLFxuICAgICAgICBzdHJlYW1SdW5uYWJsZSxcbiAgICAgICAgc2luZ2xlQWN0aW9uOiB0cnVlLFxuICAgIH0pO1xuICAgIHJldHVybiBhZ2VudDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/react/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/react/output_parser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/react/output_parser.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReActSingleInputOutputParser: () => (/* binding */ ReActSingleInputOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/react/prompt.js\");\n\n\n\nconst FINAL_ANSWER_ACTION = \"Final Answer:\";\nconst FINAL_ANSWER_AND_PARSABLE_ACTION_ERROR_MESSAGE = \"Parsing LLM output produced both a final answer and a parse-able action:\";\n/**\n * Parses ReAct-style LLM calls that have a single tool input.\n *\n * Expects output to be in one of two formats.\n *\n * If the output signals that an action should be taken,\n * should be in the below format. This will result in an AgentAction\n * being returned.\n *\n * ```\n * Thought: agent thought here\n * Action: search\n * Action Input: what is the temperature in SF?\n * ```\n *\n * If the output signals that a final answer should be given,\n * should be in the below format. This will result in an AgentFinish\n * being returned.\n *\n * ```\n * Thought: agent thought here\n * Final Answer: The temperature is 100 degrees\n * ```\n * @example\n * ```typescript\n *\n * const runnableAgent = RunnableSequence.from([\n *   ...rest of runnable\n *   new ReActSingleInputOutputParser({ toolNames: [\"SerpAPI\", \"Calculator\"] }),\n * ]);\n * const agent = AgentExecutor.fromAgentAndTools({\n *   agent: runnableAgent,\n *   tools: [new SerpAPI(), new Calculator()],\n * });\n * const result = await agent.invoke({\n *   input: \"whats the weather in pomfret?\",\n * });\n * ```\n */\nclass ReActSingleInputOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"react\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    /**\n     * Parses the given text into an AgentAction or AgentFinish object. If an\n     * output fixing parser is defined, uses it to parse the text.\n     * @param text Text to parse.\n     * @returns Promise that resolves to an AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        const includesAnswer = text.includes(FINAL_ANSWER_ACTION);\n        const regex = /Action\\s*\\d*\\s*:[\\s]*(.*?)[\\s]*Action\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)/;\n        const actionMatch = text.match(regex);\n        if (actionMatch) {\n            if (includesAnswer) {\n                throw new Error(`${FINAL_ANSWER_AND_PARSABLE_ACTION_ERROR_MESSAGE}: ${text}`);\n            }\n            const action = actionMatch[1];\n            const actionInput = actionMatch[2];\n            const toolInput = actionInput.trim().replace(/\"/g, \"\");\n            return {\n                tool: action,\n                toolInput,\n                log: text,\n            };\n        }\n        if (includesAnswer) {\n            const finalAnswerText = text.split(FINAL_ANSWER_ACTION)[1].trim();\n            return {\n                returnValues: {\n                    output: finalAnswerText,\n                },\n                log: text,\n            };\n        }\n        throw new Error(`Could not parse LLM output: ${text}`);\n    }\n    /**\n     * Returns the format instructions as a string. If the 'raw' option is\n     * true, returns the raw FORMAT_INSTRUCTIONS.\n     * @param options Options for getting the format instructions.\n     * @returns Format instructions as a string.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_2__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3JlYWN0L291dHB1dF9wYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RDtBQUNIO0FBQ0o7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHNDQUFzQztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTywyQ0FBMkMsOERBQXVCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQywrQ0FBK0MsSUFBSSxLQUFLO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsS0FBSztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1RUFBYyxDQUFDLDJEQUFtQjtBQUNqRDtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvcmVhY3Qvb3V0cHV0X3BhcnNlci5qcz9jNmFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlclRlbXBsYXRlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB9IGZyb20gXCIuLi90eXBlcy5qc1wiO1xuaW1wb3J0IHsgRk9STUFUX0lOU1RSVUNUSU9OUyB9IGZyb20gXCIuL3Byb21wdC5qc1wiO1xuY29uc3QgRklOQUxfQU5TV0VSX0FDVElPTiA9IFwiRmluYWwgQW5zd2VyOlwiO1xuY29uc3QgRklOQUxfQU5TV0VSX0FORF9QQVJTQUJMRV9BQ1RJT05fRVJST1JfTUVTU0FHRSA9IFwiUGFyc2luZyBMTE0gb3V0cHV0IHByb2R1Y2VkIGJvdGggYSBmaW5hbCBhbnN3ZXIgYW5kIGEgcGFyc2UtYWJsZSBhY3Rpb246XCI7XG4vKipcbiAqIFBhcnNlcyBSZUFjdC1zdHlsZSBMTE0gY2FsbHMgdGhhdCBoYXZlIGEgc2luZ2xlIHRvb2wgaW5wdXQuXG4gKlxuICogRXhwZWN0cyBvdXRwdXQgdG8gYmUgaW4gb25lIG9mIHR3byBmb3JtYXRzLlxuICpcbiAqIElmIHRoZSBvdXRwdXQgc2lnbmFscyB0aGF0IGFuIGFjdGlvbiBzaG91bGQgYmUgdGFrZW4sXG4gKiBzaG91bGQgYmUgaW4gdGhlIGJlbG93IGZvcm1hdC4gVGhpcyB3aWxsIHJlc3VsdCBpbiBhbiBBZ2VudEFjdGlvblxuICogYmVpbmcgcmV0dXJuZWQuXG4gKlxuICogYGBgXG4gKiBUaG91Z2h0OiBhZ2VudCB0aG91Z2h0IGhlcmVcbiAqIEFjdGlvbjogc2VhcmNoXG4gKiBBY3Rpb24gSW5wdXQ6IHdoYXQgaXMgdGhlIHRlbXBlcmF0dXJlIGluIFNGP1xuICogYGBgXG4gKlxuICogSWYgdGhlIG91dHB1dCBzaWduYWxzIHRoYXQgYSBmaW5hbCBhbnN3ZXIgc2hvdWxkIGJlIGdpdmVuLFxuICogc2hvdWxkIGJlIGluIHRoZSBiZWxvdyBmb3JtYXQuIFRoaXMgd2lsbCByZXN1bHQgaW4gYW4gQWdlbnRGaW5pc2hcbiAqIGJlaW5nIHJldHVybmVkLlxuICpcbiAqIGBgYFxuICogVGhvdWdodDogYWdlbnQgdGhvdWdodCBoZXJlXG4gKiBGaW5hbCBBbnN3ZXI6IFRoZSB0ZW1wZXJhdHVyZSBpcyAxMDAgZGVncmVlc1xuICogYGBgXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICpcbiAqIGNvbnN0IHJ1bm5hYmxlQWdlbnQgPSBSdW5uYWJsZVNlcXVlbmNlLmZyb20oW1xuICogICAuLi5yZXN0IG9mIHJ1bm5hYmxlXG4gKiAgIG5ldyBSZUFjdFNpbmdsZUlucHV0T3V0cHV0UGFyc2VyKHsgdG9vbE5hbWVzOiBbXCJTZXJwQVBJXCIsIFwiQ2FsY3VsYXRvclwiXSB9KSxcbiAqIF0pO1xuICogY29uc3QgYWdlbnQgPSBBZ2VudEV4ZWN1dG9yLmZyb21BZ2VudEFuZFRvb2xzKHtcbiAqICAgYWdlbnQ6IHJ1bm5hYmxlQWdlbnQsXG4gKiAgIHRvb2xzOiBbbmV3IFNlcnBBUEkoKSwgbmV3IENhbGN1bGF0b3IoKV0sXG4gKiB9KTtcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFnZW50Lmludm9rZSh7XG4gKiAgIGlucHV0OiBcIndoYXRzIHRoZSB3ZWF0aGVyIGluIHBvbWZyZXQ/XCIsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgUmVBY3RTaW5nbGVJbnB1dE91dHB1dFBhcnNlciBleHRlbmRzIEFnZW50QWN0aW9uT3V0cHV0UGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5cIiwgXCJhZ2VudHNcIiwgXCJyZWFjdFwiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidG9vbE5hbWVzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudG9vbE5hbWVzID0gZmllbGRzLnRvb2xOYW1lcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHRoZSBnaXZlbiB0ZXh0IGludG8gYW4gQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2ggb2JqZWN0LiBJZiBhblxuICAgICAqIG91dHB1dCBmaXhpbmcgcGFyc2VyIGlzIGRlZmluZWQsIHVzZXMgaXQgdG8gcGFyc2UgdGhlIHRleHQuXG4gICAgICogQHBhcmFtIHRleHQgVGV4dCB0byBwYXJzZS5cbiAgICAgKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2ggb2JqZWN0LlxuICAgICAqL1xuICAgIGFzeW5jIHBhcnNlKHRleHQpIHtcbiAgICAgICAgY29uc3QgaW5jbHVkZXNBbnN3ZXIgPSB0ZXh0LmluY2x1ZGVzKEZJTkFMX0FOU1dFUl9BQ1RJT04pO1xuICAgICAgICBjb25zdCByZWdleCA9IC9BY3Rpb25cXHMqXFxkKlxccyo6W1xcc10qKC4qPylbXFxzXSpBY3Rpb25cXHMqXFxkKlxccypJbnB1dFxccypcXGQqXFxzKjpbXFxzXSooLiopLztcbiAgICAgICAgY29uc3QgYWN0aW9uTWF0Y2ggPSB0ZXh0Lm1hdGNoKHJlZ2V4KTtcbiAgICAgICAgaWYgKGFjdGlvbk1hdGNoKSB7XG4gICAgICAgICAgICBpZiAoaW5jbHVkZXNBbnN3ZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7RklOQUxfQU5TV0VSX0FORF9QQVJTQUJMRV9BQ1RJT05fRVJST1JfTUVTU0FHRX06ICR7dGV4dH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGFjdGlvbk1hdGNoWzFdO1xuICAgICAgICAgICAgY29uc3QgYWN0aW9uSW5wdXQgPSBhY3Rpb25NYXRjaFsyXTtcbiAgICAgICAgICAgIGNvbnN0IHRvb2xJbnB1dCA9IGFjdGlvbklucHV0LnRyaW0oKS5yZXBsYWNlKC9cIi9nLCBcIlwiKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdG9vbDogYWN0aW9uLFxuICAgICAgICAgICAgICAgIHRvb2xJbnB1dCxcbiAgICAgICAgICAgICAgICBsb2c6IHRleHQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmNsdWRlc0Fuc3dlcikge1xuICAgICAgICAgICAgY29uc3QgZmluYWxBbnN3ZXJUZXh0ID0gdGV4dC5zcGxpdChGSU5BTF9BTlNXRVJfQUNUSU9OKVsxXS50cmltKCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHVyblZhbHVlczoge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQ6IGZpbmFsQW5zd2VyVGV4dCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxvZzogdGV4dCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgcGFyc2UgTExNIG91dHB1dDogJHt0ZXh0fWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBmb3JtYXQgaW5zdHJ1Y3Rpb25zIGFzIGEgc3RyaW5nLiBJZiB0aGUgJ3Jhdycgb3B0aW9uIGlzXG4gICAgICogdHJ1ZSwgcmV0dXJucyB0aGUgcmF3IEZPUk1BVF9JTlNUUlVDVElPTlMuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyBmb3IgZ2V0dGluZyB0aGUgZm9ybWF0IGluc3RydWN0aW9ucy5cbiAgICAgKiBAcmV0dXJucyBGb3JtYXQgaW5zdHJ1Y3Rpb25zIGFzIGEgc3RyaW5nLlxuICAgICAqL1xuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHJlbmRlclRlbXBsYXRlKEZPUk1BVF9JTlNUUlVDVElPTlMsIFwiZi1zdHJpbmdcIiwge1xuICAgICAgICAgICAgdG9vbF9uYW1lczogdGhpcy50b29sTmFtZXMuam9pbihcIiwgXCIpLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/react/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/react/prompt.js":
/*!************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/react/prompt.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS)\n/* harmony export */ });\nconst FORMAT_INSTRUCTIONS = `Use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3JlYWN0L3Byb21wdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87O0FBRVA7QUFDQTtBQUNBLCtDQUErQyxXQUFXO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9yZWFjdC9wcm9tcHQuanM/YWM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRk9STUFUX0lOU1RSVUNUSU9OUyA9IGBVc2UgdGhlIGZvbGxvd2luZyBmb3JtYXQ6XG5cblF1ZXN0aW9uOiB0aGUgaW5wdXQgcXVlc3Rpb24geW91IG11c3QgYW5zd2VyXG5UaG91Z2h0OiB5b3Ugc2hvdWxkIGFsd2F5cyB0aGluayBhYm91dCB3aGF0IHRvIGRvXG5BY3Rpb246IHRoZSBhY3Rpb24gdG8gdGFrZSwgc2hvdWxkIGJlIG9uZSBvZiBbe3Rvb2xfbmFtZXN9XVxuQWN0aW9uIElucHV0OiB0aGUgaW5wdXQgdG8gdGhlIGFjdGlvblxuT2JzZXJ2YXRpb246IHRoZSByZXN1bHQgb2YgdGhlIGFjdGlvblxuLi4uICh0aGlzIFRob3VnaHQvQWN0aW9uL0FjdGlvbiBJbnB1dC9PYnNlcnZhdGlvbiBjYW4gcmVwZWF0IE4gdGltZXMpXG5UaG91Z2h0OiBJIG5vdyBrbm93IHRoZSBmaW5hbCBhbnN3ZXJcbkZpbmFsIEFuc3dlcjogdGhlIGZpbmFsIGFuc3dlciB0byB0aGUgb3JpZ2luYWwgaW5wdXQgcXVlc3Rpb25gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/react/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/structured_chat/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/structured_chat/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredChatAgent: () => (/* binding */ StructuredChatAgent),\n/* harmony export */   createStructuredChatAgent: () => (/* binding */ createStructuredChatAgent)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _outputParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./outputParser.js */ \"(rsc)/./node_modules/langchain/dist/agents/structured_chat/outputParser.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/structured_chat/prompt.js\");\n/* harmony import */ var _tools_render_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../tools/render.js */ \"(rsc)/./node_modules/langchain/dist/tools/render.js\");\n/* harmony import */ var _format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../format_scratchpad/log.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/log.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Agent that interoperates with Structured Tools using React logic.\n * @augments Agent\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain_agents.createStructuredChatAgent.html | createStructuredChatAgent method instead}.\n */\nclass StructuredChatAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_4__.Agent {\n    static lc_name() {\n        return \"StructuredChatAgent\";\n    }\n    constructor(input) {\n        const outputParser = input?.outputParser ?? StructuredChatAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n    }\n    _agentType() {\n        return \"structured-chat-zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    /**\n     * Validates that all provided tools have a description. Throws an error\n     * if any tool lacks a description.\n     * @param tools Array of StructuredTool instances to validate.\n     */\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Returns a default output parser for the StructuredChatAgent. If an LLM\n     * is provided, it creates an output parser with retry logic from the LLM.\n     * @param fields Optional fields to customize the output parser. Can include an LLM and a list of tool names.\n     * @returns An instance of StructuredChatOutputParserWithRetries.\n     */\n    static getDefaultOutputParser(fields) {\n        if (fields?.llm) {\n            return _outputParser_js__WEBPACK_IMPORTED_MODULE_5__.StructuredChatOutputParserWithRetries.fromLLM(fields.llm, {\n                toolNames: fields.toolNames,\n            });\n        }\n        return new _outputParser_js__WEBPACK_IMPORTED_MODULE_5__.StructuredChatOutputParserWithRetries({\n            toolNames: fields?.toolNames,\n        });\n    }\n    /**\n     * Constructs the agent's scratchpad from a list of steps. If the agent's\n     * scratchpad is not empty, it prepends a message indicating that the\n     * agent has not seen any previous work.\n     * @param steps Array of AgentStep instances to construct the scratchpad from.\n     * @returns A Promise that resolves to a string representing the agent's scratchpad.\n     */\n    async constructScratchPad(steps) {\n        const agentScratchpad = await super.constructScratchPad(steps);\n        if (agentScratchpad) {\n            return `This was your previous work (but I haven't seen any of it! I only see what you return as final answer):\\n${agentScratchpad}`;\n        }\n        return agentScratchpad;\n    }\n    /**\n     * Creates a string representation of the schemas of the provided tools.\n     * @param tools Array of StructuredTool instances to create the schemas string from.\n     * @returns A string representing the schemas of the provided tools.\n     */\n    static createToolSchemasString(tools) {\n        return tools\n            .map((tool) => `${tool.name}: ${tool.description}, args: ${JSON.stringify((0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(tool.schema).properties)}`)\n            .join(\"\\n\");\n    }\n    /**\n     * Create prompt in the style of the agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.inputVariables List of input variables the final prompt will expect.\n     * @param args.memoryPrompts List of historical prompts from memory.\n     */\n    static createPrompt(tools, args) {\n        const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_6__.PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_6__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], humanMessageTemplate = \"{input}\\n\\n{agent_scratchpad}\", memoryPrompts = [], } = args ?? {};\n        const template = [prefix, _prompt_js__WEBPACK_IMPORTED_MODULE_6__.FORMAT_INSTRUCTIONS, suffix].join(\"\\n\\n\");\n        const messages = [\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.SystemMessagePromptTemplate(new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.PromptTemplate({\n                template,\n                inputVariables,\n                partialVariables: {\n                    tool_schemas: StructuredChatAgent.createToolSchemasString(tools),\n                    tool_names: tools.map((tool) => tool.name).join(\", \"),\n                },\n            })),\n            ...memoryPrompts,\n            new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.HumanMessagePromptTemplate(new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.PromptTemplate({\n                template: humanMessageTemplate,\n                inputVariables,\n            })),\n        ];\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.ChatPromptTemplate.fromMessages(messages);\n    }\n    /**\n     * Creates a StructuredChatAgent from an LLM and a list of tools.\n     * Validates the tools, creates a prompt, and sets up an LLM chain for the\n     * agent.\n     * @param llm BaseLanguageModel instance to create the agent from.\n     * @param tools Array of StructuredTool instances to create the agent from.\n     * @param args Optional arguments to customize the creation of the agent. Can include arguments for creating the prompt and AgentArgs.\n     * @returns A new instance of StructuredChatAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        StructuredChatAgent.validateTools(tools);\n        const prompt = StructuredChatAgent.createPrompt(tools, args);\n        const outputParser = args?.outputParser ??\n            StructuredChatAgent.getDefaultOutputParser({\n                llm,\n                toolNames: tools.map((tool) => tool.name),\n            });\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new StructuredChatAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n/**\n * Create an agent aimed at supporting tools with multiple inputs.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createStructuredChatAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/structured-chat-agent\n * const prompt = await pull<ChatPromptTemplate>(\n *   \"hwchase17/structured-chat-agent\"\n * );\n *\n * const llm = new ChatOpenAI({\n *   temperature: 0,\n *   modelName: \"gpt-3.5-turbo-1106\",\n * });\n *\n * const agent = await createStructuredChatAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   chat_history: [\n *     new HumanMessage(\"hi! my name is cob\"),\n *     new AIMessage(\"Hello Cob! How can I assist you today?\"),\n *   ],\n * });\n * ```\n */\nasync function createStructuredChatAgent({ llm, tools, prompt, streamRunnable, }) {\n    const missingVariables = [\"tools\", \"tool_names\", \"agent_scratchpad\"].filter((v) => !prompt.inputVariables.includes(v));\n    if (missingVariables.length > 0) {\n        throw new Error(`Provided prompt is missing required input variables: ${JSON.stringify(missingVariables)}`);\n    }\n    const toolNames = tools.map((tool) => tool.name);\n    const partialedPrompt = await prompt.partial({\n        tools: (0,_tools_render_js__WEBPACK_IMPORTED_MODULE_7__.renderTextDescriptionAndArgs)(tools),\n        tool_names: toolNames.join(\", \"),\n    });\n    // TODO: Add .bind to core runnable interface.\n    const llmWithStop = llm.bind({\n        stop: [\"Observation\"],\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_4__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_log_js__WEBPACK_IMPORTED_MODULE_8__.formatLogToString)(input.steps),\n        }),\n        partialedPrompt,\n        llmWithStop,\n        _outputParser_js__WEBPACK_IMPORTED_MODULE_5__.StructuredChatOutputParserWithRetries.fromLLM(llm, {\n            toolNames,\n        }),\n    ], {\n        name: \"StructuredChatAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/structured_chat/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/structured_chat/outputParser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/structured_chat/outputParser.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredChatOutputParser: () => (/* binding */ StructuredChatOutputParser),\n/* harmony export */   StructuredChatOutputParserWithRetries: () => (/* binding */ StructuredChatOutputParserWithRetries)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/structured_chat/prompt.js\");\n/* harmony import */ var _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../output_parsers/fix.js */ \"(rsc)/./node_modules/langchain/dist/output_parsers/fix.js\");\n\n\n\n\n\n/**\n * A class that provides a custom implementation for parsing the output of\n * a StructuredChatAgent action. It extends the `AgentActionOutputParser`\n * class and extracts the action and action input from the text output,\n * returning an `AgentAction` or `AgentFinish` object.\n */\nclass StructuredChatOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    /**\n     * Parses the given text and returns an `AgentAction` or `AgentFinish`\n     * object. If an `OutputFixingParser` is provided, it is used for parsing;\n     * otherwise, the base parser is used.\n     * @param text The text to parse.\n     * @param callbacks Optional callbacks for asynchronous operations.\n     * @returns A Promise that resolves to an `AgentAction` or `AgentFinish` object.\n     */\n    async parse(text) {\n        try {\n            const regex = /```(?:json)?(.*)(```)/gs;\n            const actionMatch = regex.exec(text);\n            if (actionMatch === null) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse an action. The agent action must be within a markdown code block, and \"action\" must be a provided tool or \"Final Answer\"`);\n            }\n            const response = JSON.parse(actionMatch[1].trim());\n            const { action, action_input } = response;\n            if (action === \"Final Answer\") {\n                return { returnValues: { output: action_input }, log: text };\n            }\n            return { tool: action, toolInput: action_input || {}, log: text };\n        }\n        catch (e) {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n        }\n    }\n    /**\n     * Returns the format instructions for parsing the output of an agent\n     * action in the style of the StructuredChatAgent.\n     * @returns A string representing the format instructions.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.AGENT_ACTION_FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\n/**\n * A class that provides a wrapper around the `StructuredChatOutputParser`\n * and `OutputFixingParser` classes. It extends the\n * `AgentActionOutputParser` class and allows for retrying the output\n * parsing using the `OutputFixingParser` if it is provided.\n * @example\n * ```typescript\n * const outputParser = new StructuredChatOutputParserWithRetries.fromLLM(\n *   new ChatOpenAI({ temperature: 0 }),\n *   {\n *     toolNames: [\"calculator\", \"random-number-generator\"],\n *   },\n * );\n * const result = await outputParser.parse(\n *  \"What is a random number between 5 and 10 raised to the second power?\"\n * );\n * ```\n */\nclass StructuredChatOutputParserWithRetries extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n        Object.defineProperty(this, \"baseParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputFixingParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.toolNames = fields.toolNames ?? this.toolNames;\n        this.baseParser =\n            fields?.baseParser ??\n                new StructuredChatOutputParser({ toolNames: this.toolNames });\n        this.outputFixingParser = fields?.outputFixingParser;\n    }\n    /**\n     * Parses the given text and returns an `AgentAction` or `AgentFinish`\n     * object. Throws an `OutputParserException` if the parsing fails.\n     * @param text The text to parse.\n     * @returns A Promise that resolves to an `AgentAction` or `AgentFinish` object.\n     */\n    async parse(text, callbacks) {\n        if (this.outputFixingParser !== undefined) {\n            return this.outputFixingParser.parse(text, callbacks);\n        }\n        return this.baseParser.parse(text);\n    }\n    /**\n     * Returns the format instructions for parsing the output of an agent\n     * action in the style of the StructuredChatAgent.\n     * @returns A string representing the format instructions.\n     */\n    getFormatInstructions() {\n        return (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(_prompt_js__WEBPACK_IMPORTED_MODULE_3__.FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n    /**\n     * Creates a new `StructuredChatOutputParserWithRetries` instance from a\n     * `BaseLanguageModel` and options. The options can include a base parser\n     * and tool names.\n     * @param llm A `BaseLanguageModel` instance.\n     * @param options Options for creating a `StructuredChatOutputParserWithRetries` instance.\n     * @returns A new `StructuredChatOutputParserWithRetries` instance.\n     */\n    static fromLLM(llm, options) {\n        const baseParser = options.baseParser ??\n            new StructuredChatOutputParser({ toolNames: options.toolNames ?? [] });\n        const outputFixingParser = _output_parsers_fix_js__WEBPACK_IMPORTED_MODULE_4__.OutputFixingParser.fromLLM(llm, baseParser);\n        return new StructuredChatOutputParserWithRetries({\n            baseParser,\n            outputFixingParser,\n            toolNames: options.toolNames,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/structured_chat/outputParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/structured_chat/prompt.js":
/*!**********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/structured_chat/prompt.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AGENT_ACTION_FORMAT_INSTRUCTIONS: () => (/* binding */ AGENT_ACTION_FORMAT_INSTRUCTIONS),\n/* harmony export */   FORMAT_INSTRUCTIONS: () => (/* binding */ FORMAT_INSTRUCTIONS),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   SUFFIX: () => (/* binding */ SUFFIX)\n/* harmony export */ });\nconst PREFIX = `Answer the following questions truthfully and as best you can.`;\nconst AGENT_ACTION_FORMAT_INSTRUCTIONS = `Output a JSON markdown code snippet containing a valid JSON blob (denoted below by $JSON_BLOB).\nThis $JSON_BLOB must have a \"action\" key (with the name of the tool to use) and an \"action_input\" key (tool input).\n\nValid \"action\" values: \"Final Answer\" (which you must use when giving your final response to the user), or one of [{tool_names}].\n\nThe $JSON_BLOB must be valid, parseable JSON and only contain a SINGLE action. Here is an example of an acceptable output:\n\n\\`\\`\\`json\n{{\n  \"action\": $TOOL_NAME,\n  \"action_input\": $INPUT\n}}\n\\`\\`\\`\n\nRemember to include the surrounding markdown code snippet delimiters (begin with \"\\`\\`\\`\" json and close with \"\\`\\`\\`\")!\n`;\nconst FORMAT_INSTRUCTIONS = `You have access to the following tools.\nYou must format your inputs to these tools to match their \"JSON schema\" definitions below.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nHere are the JSON Schema instances for the tools you have access to:\n\n{tool_schemas}\n\nThe way you use the tools is as follows:\n\n------------------------\n\n${AGENT_ACTION_FORMAT_INSTRUCTIONS}\n\nIf you are using a tool, \"action_input\" must adhere to the tool's input schema, given above.\n\n------------------------\n\nALWAYS use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction:\n\\`\\`\\`json\n$JSON_BLOB\n\\`\\`\\`\nObservation: the result of the action\n... (this Thought/Action/Observation can repeat N times)\nThought: I now know the final answer\nAction:\n\\`\\`\\`json\n{{\n  \"action\": \"Final Answer\",\n  \"action_input\": \"Final response to human\"\n}}\n\\`\\`\\``;\nconst SUFFIX = `Begin! Reminder to ALWAYS use the above format, and to use tools if appropriate.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3N0cnVjdHVyZWRfY2hhdC9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ0E7QUFDUDs7QUFFQSxvSEFBb0gsV0FBVzs7QUFFL0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDTztBQUNQOztBQUVBOztBQUVBLGtEQUFrRCxnQkFBZ0IsU0FBUyxtRUFBbUUsc0JBQXNCO0FBQ3BLO0FBQ0EsbUJBQW1CLHdCQUF3Qix5RUFBeUUsZ0JBQWdCLDBCQUEwQjs7QUFFOUo7O0FBRUEsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQSxFQUFFOztBQUVGOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy9zdHJ1Y3R1cmVkX2NoYXQvcHJvbXB0LmpzPzU3YzEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBSRUZJWCA9IGBBbnN3ZXIgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnMgdHJ1dGhmdWxseSBhbmQgYXMgYmVzdCB5b3UgY2FuLmA7XG5leHBvcnQgY29uc3QgQUdFTlRfQUNUSU9OX0ZPUk1BVF9JTlNUUlVDVElPTlMgPSBgT3V0cHV0IGEgSlNPTiBtYXJrZG93biBjb2RlIHNuaXBwZXQgY29udGFpbmluZyBhIHZhbGlkIEpTT04gYmxvYiAoZGVub3RlZCBiZWxvdyBieSAkSlNPTl9CTE9CKS5cblRoaXMgJEpTT05fQkxPQiBtdXN0IGhhdmUgYSBcImFjdGlvblwiIGtleSAod2l0aCB0aGUgbmFtZSBvZiB0aGUgdG9vbCB0byB1c2UpIGFuZCBhbiBcImFjdGlvbl9pbnB1dFwiIGtleSAodG9vbCBpbnB1dCkuXG5cblZhbGlkIFwiYWN0aW9uXCIgdmFsdWVzOiBcIkZpbmFsIEFuc3dlclwiICh3aGljaCB5b3UgbXVzdCB1c2Ugd2hlbiBnaXZpbmcgeW91ciBmaW5hbCByZXNwb25zZSB0byB0aGUgdXNlciksIG9yIG9uZSBvZiBbe3Rvb2xfbmFtZXN9XS5cblxuVGhlICRKU09OX0JMT0IgbXVzdCBiZSB2YWxpZCwgcGFyc2VhYmxlIEpTT04gYW5kIG9ubHkgY29udGFpbiBhIFNJTkdMRSBhY3Rpb24uIEhlcmUgaXMgYW4gZXhhbXBsZSBvZiBhbiBhY2NlcHRhYmxlIG91dHB1dDpcblxuXFxgXFxgXFxganNvblxue3tcbiAgXCJhY3Rpb25cIjogJFRPT0xfTkFNRSxcbiAgXCJhY3Rpb25faW5wdXRcIjogJElOUFVUXG59fVxuXFxgXFxgXFxgXG5cblJlbWVtYmVyIHRvIGluY2x1ZGUgdGhlIHN1cnJvdW5kaW5nIG1hcmtkb3duIGNvZGUgc25pcHBldCBkZWxpbWl0ZXJzIChiZWdpbiB3aXRoIFwiXFxgXFxgXFxgXCIganNvbiBhbmQgY2xvc2Ugd2l0aCBcIlxcYFxcYFxcYFwiKSFcbmA7XG5leHBvcnQgY29uc3QgRk9STUFUX0lOU1RSVUNUSU9OUyA9IGBZb3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZvbGxvd2luZyB0b29scy5cbllvdSBtdXN0IGZvcm1hdCB5b3VyIGlucHV0cyB0byB0aGVzZSB0b29scyB0byBtYXRjaCB0aGVpciBcIkpTT04gc2NoZW1hXCIgZGVmaW5pdGlvbnMgYmVsb3cuXG5cblwiSlNPTiBTY2hlbWFcIiBpcyBhIGRlY2xhcmF0aXZlIGxhbmd1YWdlIHRoYXQgYWxsb3dzIHlvdSB0byBhbm5vdGF0ZSBhbmQgdmFsaWRhdGUgSlNPTiBkb2N1bWVudHMuXG5cbkZvciBleGFtcGxlLCB0aGUgZXhhbXBsZSBcIkpTT04gU2NoZW1hXCIgaW5zdGFuY2Uge3tcInByb3BlcnRpZXNcIjoge3tcImZvb1wiOiB7e1wiZGVzY3JpcHRpb25cIjogXCJhIGxpc3Qgb2YgdGVzdCB3b3Jkc1wiLCBcInR5cGVcIjogXCJhcnJheVwiLCBcIml0ZW1zXCI6IHt7XCJ0eXBlXCI6IFwic3RyaW5nXCJ9fX19fX0sIFwicmVxdWlyZWRcIjogW1wiZm9vXCJdfX19fVxud291bGQgbWF0Y2ggYW4gb2JqZWN0IHdpdGggb25lIHJlcXVpcmVkIHByb3BlcnR5LCBcImZvb1wiLiBUaGUgXCJ0eXBlXCIgcHJvcGVydHkgc3BlY2lmaWVzIFwiZm9vXCIgbXVzdCBiZSBhbiBcImFycmF5XCIsIGFuZCB0aGUgXCJkZXNjcmlwdGlvblwiIHByb3BlcnR5IHNlbWFudGljYWxseSBkZXNjcmliZXMgaXQgYXMgXCJhIGxpc3Qgb2YgdGVzdCB3b3Jkc1wiLiBUaGUgaXRlbXMgd2l0aGluIFwiZm9vXCIgbXVzdCBiZSBzdHJpbmdzLlxuVGh1cywgdGhlIG9iamVjdCB7e1wiZm9vXCI6IFtcImJhclwiLCBcImJhelwiXX19IGlzIGEgd2VsbC1mb3JtYXR0ZWQgaW5zdGFuY2Ugb2YgdGhpcyBleGFtcGxlIFwiSlNPTiBTY2hlbWFcIi4gVGhlIG9iamVjdCB7e1wicHJvcGVydGllc1wiOiB7e1wiZm9vXCI6IFtcImJhclwiLCBcImJhelwiXX19fX0gaXMgbm90IHdlbGwtZm9ybWF0dGVkLlxuXG5IZXJlIGFyZSB0aGUgSlNPTiBTY2hlbWEgaW5zdGFuY2VzIGZvciB0aGUgdG9vbHMgeW91IGhhdmUgYWNjZXNzIHRvOlxuXG57dG9vbF9zY2hlbWFzfVxuXG5UaGUgd2F5IHlvdSB1c2UgdGhlIHRvb2xzIGlzIGFzIGZvbGxvd3M6XG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4ke0FHRU5UX0FDVElPTl9GT1JNQVRfSU5TVFJVQ1RJT05TfVxuXG5JZiB5b3UgYXJlIHVzaW5nIGEgdG9vbCwgXCJhY3Rpb25faW5wdXRcIiBtdXN0IGFkaGVyZSB0byB0aGUgdG9vbCdzIGlucHV0IHNjaGVtYSwgZ2l2ZW4gYWJvdmUuXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5BTFdBWVMgdXNlIHRoZSBmb2xsb3dpbmcgZm9ybWF0OlxuXG5RdWVzdGlvbjogdGhlIGlucHV0IHF1ZXN0aW9uIHlvdSBtdXN0IGFuc3dlclxuVGhvdWdodDogeW91IHNob3VsZCBhbHdheXMgdGhpbmsgYWJvdXQgd2hhdCB0byBkb1xuQWN0aW9uOlxuXFxgXFxgXFxganNvblxuJEpTT05fQkxPQlxuXFxgXFxgXFxgXG5PYnNlcnZhdGlvbjogdGhlIHJlc3VsdCBvZiB0aGUgYWN0aW9uXG4uLi4gKHRoaXMgVGhvdWdodC9BY3Rpb24vT2JzZXJ2YXRpb24gY2FuIHJlcGVhdCBOIHRpbWVzKVxuVGhvdWdodDogSSBub3cga25vdyB0aGUgZmluYWwgYW5zd2VyXG5BY3Rpb246XG5cXGBcXGBcXGBqc29uXG57e1xuICBcImFjdGlvblwiOiBcIkZpbmFsIEFuc3dlclwiLFxuICBcImFjdGlvbl9pbnB1dFwiOiBcIkZpbmFsIHJlc3BvbnNlIHRvIGh1bWFuXCJcbn19XG5cXGBcXGBcXGBgO1xuZXhwb3J0IGNvbnN0IFNVRkZJWCA9IGBCZWdpbiEgUmVtaW5kZXIgdG8gQUxXQVlTIHVzZSB0aGUgYWJvdmUgZm9ybWF0LCBhbmQgdG8gdXNlIHRvb2xzIGlmIGFwcHJvcHJpYXRlLmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/structured_chat/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/tool_calling/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/tool_calling/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createToolCallingAgent: () => (/* binding */ createToolCallingAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/tool_calling/output_parser.js\");\n/* harmony import */ var _format_scratchpad_tool_calling_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format_scratchpad/tool_calling.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/tool_calling.js\");\n\n\n\n\n/**\n * Create an agent that uses tools.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n * @example\n * ```typescript\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n * import { ChatPromptTemplate, MessagesPlaceholder } from \"@langchain/core/prompts\";\n * import { AgentExecutor, createToolCallingAgent } from \"langchain/agents\";\n *\n * const prompt = ChatPromptTemplate.fromMessages(\n *   [\n *     [\"system\", \"You are a helpful assistant\"],\n *     [\"placeholder\", \"{chat_history}\"],\n *     [\"human\", \"{input}\"],\n *     [\"placeholder\", \"{agent_scratchpad}\"],\n *   ]\n * );\n *\n *\n * const llm = new ChatAnthropic({\n *   modelName: \"claude-3-opus-20240229\",\n *   temperature: 0,\n * });\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * const agent = createToolCallingAgent({ llm, tools, prompt });\n *\n * const agentExecutor = new AgentExecutor({ agent, tools });\n *\n * const result = await agentExecutor.invoke({input: \"what is LangChain?\"});\n *\n * // Using with chat history\n * import { AIMessage, HumanMessage } from \"@langchain/core/messages\";\n *\n * const result2 = await agentExecutor.invoke(\n *   {\n *     input: \"what's my name?\",\n *     chat_history: [\n *       new HumanMessage({content: \"hi! my name is bob\"}),\n *       new AIMessage({content: \"Hello Bob! How can I assist you today?\"}),\n *     ],\n *   }\n * );\n * ```\n */\nfunction createToolCallingAgent({ llm, tools, prompt, streamRunnable, }) {\n    if (!prompt.inputVariables.includes(\"agent_scratchpad\")) {\n        throw new Error([\n            `Prompt must have an input variable named \"agent_scratchpad\".`,\n            `Found ${JSON.stringify(prompt.inputVariables)} instead.`,\n        ].join(\"\\n\"));\n    }\n    if (llm.bindTools === undefined) {\n        throw new Error(`This agent requires that the \"bind_tools()\" method be implemented on the input model.`);\n    }\n    const modelWithTools = llm.bindTools(tools);\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_1__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_tool_calling_js__WEBPACK_IMPORTED_MODULE_3__.formatToToolMessages)(input.steps),\n        }),\n        prompt,\n        modelWithTools,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_2__.ToolCallingAgentOutputParser(),\n    ], {\n        name: \"ToolCallingAgent\",\n        streamRunnable,\n        singleAction: false,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xfY2FsbGluZy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRTtBQUNaO0FBQ2U7QUFDUztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUIsWUFBWSwwQ0FBMEM7QUFDdEQsWUFBWSx3Q0FBd0M7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsYUFBYTtBQUN0QyxtQkFBbUIsTUFBTTtBQUN6Qix5QkFBeUIsaUJBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG9CQUFvQjtBQUM5RDtBQUNBLDZDQUE2QyxjQUFjO0FBQzNEO0FBQ0EsOENBQThDLDRCQUE0QjtBQUMxRTtBQUNBO0FBQ0EsWUFBWSwwQkFBMEI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw4QkFBOEI7QUFDekQsd0JBQXdCLGtEQUFrRDtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLHFDQUFxQztBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0REFBcUI7QUFDdkMsUUFBUSwwRUFBbUI7QUFDM0IseUNBQXlDLHdGQUFvQjtBQUM3RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVksMkVBQTRCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sX2NhbGxpbmcvaW5kZXguanM/MjhkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdW5uYWJsZVBhc3N0aHJvdWdoIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9ydW5uYWJsZXNcIjtcbmltcG9ydCB7IEFnZW50UnVubmFibGVTZXF1ZW5jZSB9IGZyb20gXCIuLi9hZ2VudC5qc1wiO1xuaW1wb3J0IHsgVG9vbENhbGxpbmdBZ2VudE91dHB1dFBhcnNlciwgfSBmcm9tIFwiLi9vdXRwdXRfcGFyc2VyLmpzXCI7XG5pbXBvcnQgeyBmb3JtYXRUb1Rvb2xNZXNzYWdlcyB9IGZyb20gXCIuLi9mb3JtYXRfc2NyYXRjaHBhZC90b29sX2NhbGxpbmcuanNcIjtcbi8qKlxuICogQ3JlYXRlIGFuIGFnZW50IHRoYXQgdXNlcyB0b29scy5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1zIHJlcXVpcmVkIHRvIGNyZWF0ZSB0aGUgYWdlbnQuIEluY2x1ZGVzIGFuIExMTSwgdG9vbHMsIGFuZCBwcm9tcHQuXG4gKiBAcmV0dXJucyBBIHJ1bm5hYmxlIHNlcXVlbmNlIHJlcHJlc2VudGluZyBhbiBhZ2VudC4gSXQgdGFrZXMgYXMgaW5wdXQgYWxsIHRoZSBzYW1lIGlucHV0XG4gKiAgICAgdmFyaWFibGVzIGFzIHRoZSBwcm9tcHQgcGFzc2VkIGluIGRvZXMuIEl0IHJldHVybnMgYXMgb3V0cHV0IGVpdGhlciBhblxuICogICAgIEFnZW50QWN0aW9uIG9yIEFnZW50RmluaXNoLlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IENoYXRBbnRocm9waWMgfSBmcm9tIFwiQGxhbmdjaGFpbi9hbnRocm9waWNcIjtcbiAqIGltcG9ydCB7IENoYXRQcm9tcHRUZW1wbGF0ZSwgTWVzc2FnZXNQbGFjZWhvbGRlciB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuICogaW1wb3J0IHsgQWdlbnRFeGVjdXRvciwgY3JlYXRlVG9vbENhbGxpbmdBZ2VudCB9IGZyb20gXCJsYW5nY2hhaW4vYWdlbnRzXCI7XG4gKlxuICogY29uc3QgcHJvbXB0ID0gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhcbiAqICAgW1xuICogICAgIFtcInN5c3RlbVwiLCBcIllvdSBhcmUgYSBoZWxwZnVsIGFzc2lzdGFudFwiXSxcbiAqICAgICBbXCJwbGFjZWhvbGRlclwiLCBcIntjaGF0X2hpc3Rvcnl9XCJdLFxuICogICAgIFtcImh1bWFuXCIsIFwie2lucHV0fVwiXSxcbiAqICAgICBbXCJwbGFjZWhvbGRlclwiLCBcInthZ2VudF9zY3JhdGNocGFkfVwiXSxcbiAqICAgXVxuICogKTtcbiAqXG4gKlxuICogY29uc3QgbGxtID0gbmV3IENoYXRBbnRocm9waWMoe1xuICogICBtb2RlbE5hbWU6IFwiY2xhdWRlLTMtb3B1cy0yMDI0MDIyOVwiLFxuICogICB0ZW1wZXJhdHVyZTogMCxcbiAqIH0pO1xuICpcbiAqIC8vIERlZmluZSB0aGUgdG9vbHMgdGhlIGFnZW50IHdpbGwgaGF2ZSBhY2Nlc3MgdG8uXG4gKiBjb25zdCB0b29scyA9IFsuLi5dO1xuICpcbiAqIGNvbnN0IGFnZW50ID0gY3JlYXRlVG9vbENhbGxpbmdBZ2VudCh7IGxsbSwgdG9vbHMsIHByb21wdCB9KTtcbiAqXG4gKiBjb25zdCBhZ2VudEV4ZWN1dG9yID0gbmV3IEFnZW50RXhlY3V0b3IoeyBhZ2VudCwgdG9vbHMgfSk7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgYWdlbnRFeGVjdXRvci5pbnZva2Uoe2lucHV0OiBcIndoYXQgaXMgTGFuZ0NoYWluP1wifSk7XG4gKlxuICogLy8gVXNpbmcgd2l0aCBjaGF0IGhpc3RvcnlcbiAqIGltcG9ydCB7IEFJTWVzc2FnZSwgSHVtYW5NZXNzYWdlIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuICpcbiAqIGNvbnN0IHJlc3VsdDIgPSBhd2FpdCBhZ2VudEV4ZWN1dG9yLmludm9rZShcbiAqICAge1xuICogICAgIGlucHV0OiBcIndoYXQncyBteSBuYW1lP1wiLFxuICogICAgIGNoYXRfaGlzdG9yeTogW1xuICogICAgICAgbmV3IEh1bWFuTWVzc2FnZSh7Y29udGVudDogXCJoaSEgbXkgbmFtZSBpcyBib2JcIn0pLFxuICogICAgICAgbmV3IEFJTWVzc2FnZSh7Y29udGVudDogXCJIZWxsbyBCb2IhIEhvdyBjYW4gSSBhc3Npc3QgeW91IHRvZGF5P1wifSksXG4gKiAgICAgXSxcbiAqICAgfVxuICogKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVG9vbENhbGxpbmdBZ2VudCh7IGxsbSwgdG9vbHMsIHByb21wdCwgc3RyZWFtUnVubmFibGUsIH0pIHtcbiAgICBpZiAoIXByb21wdC5pbnB1dFZhcmlhYmxlcy5pbmNsdWRlcyhcImFnZW50X3NjcmF0Y2hwYWRcIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFtcbiAgICAgICAgICAgIGBQcm9tcHQgbXVzdCBoYXZlIGFuIGlucHV0IHZhcmlhYmxlIG5hbWVkIFwiYWdlbnRfc2NyYXRjaHBhZFwiLmAsXG4gICAgICAgICAgICBgRm91bmQgJHtKU09OLnN0cmluZ2lmeShwcm9tcHQuaW5wdXRWYXJpYWJsZXMpfSBpbnN0ZWFkLmAsXG4gICAgICAgIF0uam9pbihcIlxcblwiKSk7XG4gICAgfVxuICAgIGlmIChsbG0uYmluZFRvb2xzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGlzIGFnZW50IHJlcXVpcmVzIHRoYXQgdGhlIFwiYmluZF90b29scygpXCIgbWV0aG9kIGJlIGltcGxlbWVudGVkIG9uIHRoZSBpbnB1dCBtb2RlbC5gKTtcbiAgICB9XG4gICAgY29uc3QgbW9kZWxXaXRoVG9vbHMgPSBsbG0uYmluZFRvb2xzKHRvb2xzKTtcbiAgICBjb25zdCBhZ2VudCA9IEFnZW50UnVubmFibGVTZXF1ZW5jZS5mcm9tUnVubmFibGVzKFtcbiAgICAgICAgUnVubmFibGVQYXNzdGhyb3VnaC5hc3NpZ24oe1xuICAgICAgICAgICAgYWdlbnRfc2NyYXRjaHBhZDogKGlucHV0KSA9PiBmb3JtYXRUb1Rvb2xNZXNzYWdlcyhpbnB1dC5zdGVwcyksXG4gICAgICAgIH0pLFxuICAgICAgICBwcm9tcHQsXG4gICAgICAgIG1vZGVsV2l0aFRvb2xzLFxuICAgICAgICBuZXcgVG9vbENhbGxpbmdBZ2VudE91dHB1dFBhcnNlcigpLFxuICAgIF0sIHtcbiAgICAgICAgbmFtZTogXCJUb29sQ2FsbGluZ0FnZW50XCIsXG4gICAgICAgIHN0cmVhbVJ1bm5hYmxlLFxuICAgICAgICBzaW5nbGVBY3Rpb246IGZhbHNlLFxuICAgIH0pO1xuICAgIHJldHVybiBhZ2VudDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/tool_calling/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/tool_calling/output_parser.js":
/*!**************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/tool_calling/output_parser.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolCallingAgentOutputParser: () => (/* binding */ ToolCallingAgentOutputParser),\n/* harmony export */   parseAIMessageToToolAction: () => (/* binding */ parseAIMessageToToolAction)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n\n\n\nfunction parseAIMessageToToolAction(message) {\n    const stringifiedMessageContent = typeof message.content === \"string\"\n        ? message.content\n        : JSON.stringify(message.content);\n    let toolCalls = [];\n    if (message.tool_calls !== undefined && message.tool_calls.length > 0) {\n        toolCalls = message.tool_calls;\n    }\n    else {\n        if (message.additional_kwargs.tool_calls === undefined ||\n            message.additional_kwargs.tool_calls.length === 0) {\n            return {\n                returnValues: { output: message.content },\n                log: stringifiedMessageContent,\n            };\n        }\n        // Best effort parsing\n        for (const toolCall of message.additional_kwargs.tool_calls ?? []) {\n            const functionName = toolCall.function?.name;\n            try {\n                const args = JSON.parse(toolCall.function.arguments);\n                toolCalls.push({ name: functionName, args, id: toolCall.id });\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse tool arguments from chat model response. Text: \"${JSON.stringify(toolCalls)}\". ${e}`);\n            }\n        }\n    }\n    return toolCalls.map((toolCall, i) => {\n        const messageLog = i === 0 ? [message] : [];\n        const log = `Invoking \"${toolCall.name}\" with ${JSON.stringify(toolCall.args ?? {})}\\n${stringifiedMessageContent}`;\n        return {\n            tool: toolCall.name,\n            toolInput: toolCall.args,\n            toolCallId: toolCall.id ?? \"\",\n            log,\n            messageLog,\n        };\n    });\n}\nclass ToolCallingAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_2__.AgentMultiActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"tool_calling\"]\n        });\n    }\n    static lc_name() {\n        return \"ToolCallingAgentOutputParser\";\n    }\n    async parse(text) {\n        throw new Error(`ToolCallingAgentOutputParser can only parse messages.\\nPassed input: ${text}`);\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0] && (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(generations[0].message)) {\n            return parseAIMessageToToolAction(generations[0].message);\n        }\n        throw new Error(\"parseResult on ToolCallingAgentOutputParser only works on ChatGeneration output\");\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside ToolCallingAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xfY2FsbGluZy9vdXRwdXRfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBEO0FBQ2E7QUFDWjtBQUNwRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MseUJBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsMkNBQTJDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpRkFBcUIsb0VBQW9FLDBCQUEwQixLQUFLLEVBQUU7QUFDcEo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxjQUFjLFNBQVMsa0NBQWtDLEVBQUUsSUFBSSwwQkFBMEI7QUFDMUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTywyQ0FBMkMsbUVBQTRCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnR0FBZ0csS0FBSztBQUNyRztBQUNBO0FBQ0EsMkNBQTJDLHVFQUFhO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sX2NhbGxpbmcvb3V0cHV0X3BhcnNlci5qcz80OTYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQmFzZU1lc3NhZ2UsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgT3V0cHV0UGFyc2VyRXhjZXB0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9vdXRwdXRfcGFyc2Vyc1wiO1xuaW1wb3J0IHsgQWdlbnRNdWx0aUFjdGlvbk91dHB1dFBhcnNlciB9IGZyb20gXCIuLi90eXBlcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQUlNZXNzYWdlVG9Ub29sQWN0aW9uKG1lc3NhZ2UpIHtcbiAgICBjb25zdCBzdHJpbmdpZmllZE1lc3NhZ2VDb250ZW50ID0gdHlwZW9mIG1lc3NhZ2UuY29udGVudCA9PT0gXCJzdHJpbmdcIlxuICAgICAgICA/IG1lc3NhZ2UuY29udGVudFxuICAgICAgICA6IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UuY29udGVudCk7XG4gICAgbGV0IHRvb2xDYWxscyA9IFtdO1xuICAgIGlmIChtZXNzYWdlLnRvb2xfY2FsbHMgIT09IHVuZGVmaW5lZCAmJiBtZXNzYWdlLnRvb2xfY2FsbHMubGVuZ3RoID4gMCkge1xuICAgICAgICB0b29sQ2FsbHMgPSBtZXNzYWdlLnRvb2xfY2FsbHM7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAobWVzc2FnZS5hZGRpdGlvbmFsX2t3YXJncy50b29sX2NhbGxzID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIG1lc3NhZ2UuYWRkaXRpb25hbF9rd2FyZ3MudG9vbF9jYWxscy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuVmFsdWVzOiB7IG91dHB1dDogbWVzc2FnZS5jb250ZW50IH0sXG4gICAgICAgICAgICAgICAgbG9nOiBzdHJpbmdpZmllZE1lc3NhZ2VDb250ZW50LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBCZXN0IGVmZm9ydCBwYXJzaW5nXG4gICAgICAgIGZvciAoY29uc3QgdG9vbENhbGwgb2YgbWVzc2FnZS5hZGRpdGlvbmFsX2t3YXJncy50b29sX2NhbGxzID8/IFtdKSB7XG4gICAgICAgICAgICBjb25zdCBmdW5jdGlvbk5hbWUgPSB0b29sQ2FsbC5mdW5jdGlvbj8ubmFtZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IEpTT04ucGFyc2UodG9vbENhbGwuZnVuY3Rpb24uYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICB0b29sQ2FsbHMucHVzaCh7IG5hbWU6IGZ1bmN0aW9uTmFtZSwgYXJncywgaWQ6IHRvb2xDYWxsLmlkIH0pO1xuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBPdXRwdXRQYXJzZXJFeGNlcHRpb24oYEZhaWxlZCB0byBwYXJzZSB0b29sIGFyZ3VtZW50cyBmcm9tIGNoYXQgbW9kZWwgcmVzcG9uc2UuIFRleHQ6IFwiJHtKU09OLnN0cmluZ2lmeSh0b29sQ2FsbHMpfVwiLiAke2V9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvb2xDYWxscy5tYXAoKHRvb2xDYWxsLCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VMb2cgPSBpID09PSAwID8gW21lc3NhZ2VdIDogW107XG4gICAgICAgIGNvbnN0IGxvZyA9IGBJbnZva2luZyBcIiR7dG9vbENhbGwubmFtZX1cIiB3aXRoICR7SlNPTi5zdHJpbmdpZnkodG9vbENhbGwuYXJncyA/PyB7fSl9XFxuJHtzdHJpbmdpZmllZE1lc3NhZ2VDb250ZW50fWA7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b29sOiB0b29sQ2FsbC5uYW1lLFxuICAgICAgICAgICAgdG9vbElucHV0OiB0b29sQ2FsbC5hcmdzLFxuICAgICAgICAgICAgdG9vbENhbGxJZDogdG9vbENhbGwuaWQgPz8gXCJcIixcbiAgICAgICAgICAgIGxvZyxcbiAgICAgICAgICAgIG1lc3NhZ2VMb2csXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnQgY2xhc3MgVG9vbENhbGxpbmdBZ2VudE91dHB1dFBhcnNlciBleHRlbmRzIEFnZW50TXVsdGlBY3Rpb25PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcImFnZW50c1wiLCBcInRvb2xfY2FsbGluZ1wiXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlRvb2xDYWxsaW5nQWdlbnRPdXRwdXRQYXJzZXJcIjtcbiAgICB9XG4gICAgYXN5bmMgcGFyc2UodGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRvb2xDYWxsaW5nQWdlbnRPdXRwdXRQYXJzZXIgY2FuIG9ubHkgcGFyc2UgbWVzc2FnZXMuXFxuUGFzc2VkIGlucHV0OiAke3RleHR9YCk7XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlUmVzdWx0KGdlbmVyYXRpb25zKSB7XG4gICAgICAgIGlmIChcIm1lc3NhZ2VcIiBpbiBnZW5lcmF0aW9uc1swXSAmJiBpc0Jhc2VNZXNzYWdlKGdlbmVyYXRpb25zWzBdLm1lc3NhZ2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VBSU1lc3NhZ2VUb1Rvb2xBY3Rpb24oZ2VuZXJhdGlvbnNbMF0ubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicGFyc2VSZXN1bHQgb24gVG9vbENhbGxpbmdBZ2VudE91dHB1dFBhcnNlciBvbmx5IHdvcmtzIG9uIENoYXRHZW5lcmF0aW9uIG91dHB1dFwiKTtcbiAgICB9XG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZXRGb3JtYXRJbnN0cnVjdGlvbnMgbm90IGltcGxlbWVudGVkIGluc2lkZSBUb29sQ2FsbGluZ0FnZW50T3V0cHV0UGFyc2VyLlwiKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/tool_calling/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/base.js":
/*!*************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/base.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toolkit: () => (/* reexport safe */ _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__.Toolkit)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/agents/toolkits/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2Jhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9iYXNlLmpzP2JhOTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIkBsYW5nY2hhaW4vY29tbXVuaXR5L2FnZW50cy90b29sa2l0cy9iYXNlXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConversationalRetrievalAgent: () => (/* binding */ createConversationalRetrievalAgent)\n/* harmony export */ });\n/* harmony import */ var _memory_summary_buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../memory/summary_buffer.js */ \"(rsc)/./node_modules/langchain/dist/memory/summary_buffer.js\");\n/* harmony import */ var _initialize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../initialize.js */ \"(rsc)/./node_modules/langchain/dist/agents/initialize.js\");\n/* harmony import */ var _token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./token_buffer_memory.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js\");\n\n\n\n/**\n * Asynchronous function that creates a conversational retrieval agent\n * using a language model, tools, and options. It initializes the buffer\n * memory based on the provided options and initializes the AgentExecutor\n * with the tools, language model, and memory.\n * @param llm Instance of ChatOpenAI used as the language model for the agent.\n * @param tools Array of StructuredTool instances used by the agent.\n * @param options Optional ConversationalRetrievalAgentOptions to customize the agent.\n * @returns A Promise that resolves to an initialized AgentExecutor.\n */\nasync function createConversationalRetrievalAgent(llm, tools, options) {\n    const { rememberIntermediateSteps = true, memoryKey = \"chat_history\", outputKey = \"output\", inputKey = \"input\", prefix, verbose, } = options ?? {};\n    let memory;\n    if (rememberIntermediateSteps) {\n        memory = new _token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_2__.OpenAIAgentTokenBufferMemory({\n            memoryKey,\n            llm,\n            outputKey,\n            inputKey,\n        });\n    }\n    else {\n        memory = new _memory_summary_buffer_js__WEBPACK_IMPORTED_MODULE_0__.ConversationSummaryBufferMemory({\n            memoryKey,\n            llm,\n            maxTokenLimit: 12000,\n            returnMessages: true,\n            outputKey,\n            inputKey,\n        });\n    }\n    const executor = await (0,_initialize_js__WEBPACK_IMPORTED_MODULE_1__.initializeAgentExecutorWithOptions)(tools, llm, {\n        agentType: \"openai-functions\",\n        memory,\n        verbose,\n        returnIntermediateSteps: rememberIntermediateSteps,\n        agentArgs: {\n            prefix: prefix ??\n                `Do your best to answer the questions. Feel free to use any tools available to look up relevant information, only if necessary.`,\n        },\n    });\n    return executor;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2NvbnZlcnNhdGlvbmFsX3JldHJpZXZhbC9vcGVuYWlfZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Y7QUFDWDtBQUNEO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLDJIQUEySDtBQUN2STtBQUNBO0FBQ0EscUJBQXFCLGlGQUE0QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EscUJBQXFCLHNGQUErQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwyQkFBMkIsa0ZBQWtDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvY29udmVyc2F0aW9uYWxfcmV0cmlldmFsL29wZW5haV9mdW5jdGlvbnMuanM/MmNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb252ZXJzYXRpb25TdW1tYXJ5QnVmZmVyTWVtb3J5IH0gZnJvbSBcIi4uLy4uLy4uL21lbW9yeS9zdW1tYXJ5X2J1ZmZlci5qc1wiO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUFnZW50RXhlY3V0b3JXaXRoT3B0aW9ucyB9IGZyb20gXCIuLi8uLi9pbml0aWFsaXplLmpzXCI7XG5pbXBvcnQgeyBPcGVuQUlBZ2VudFRva2VuQnVmZmVyTWVtb3J5IH0gZnJvbSBcIi4vdG9rZW5fYnVmZmVyX21lbW9yeS5qc1wiO1xuLyoqXG4gKiBBc3luY2hyb25vdXMgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIGEgY29udmVyc2F0aW9uYWwgcmV0cmlldmFsIGFnZW50XG4gKiB1c2luZyBhIGxhbmd1YWdlIG1vZGVsLCB0b29scywgYW5kIG9wdGlvbnMuIEl0IGluaXRpYWxpemVzIHRoZSBidWZmZXJcbiAqIG1lbW9yeSBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgb3B0aW9ucyBhbmQgaW5pdGlhbGl6ZXMgdGhlIEFnZW50RXhlY3V0b3JcbiAqIHdpdGggdGhlIHRvb2xzLCBsYW5ndWFnZSBtb2RlbCwgYW5kIG1lbW9yeS5cbiAqIEBwYXJhbSBsbG0gSW5zdGFuY2Ugb2YgQ2hhdE9wZW5BSSB1c2VkIGFzIHRoZSBsYW5ndWFnZSBtb2RlbCBmb3IgdGhlIGFnZW50LlxuICogQHBhcmFtIHRvb2xzIEFycmF5IG9mIFN0cnVjdHVyZWRUb29sIGluc3RhbmNlcyB1c2VkIGJ5IHRoZSBhZ2VudC5cbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIENvbnZlcnNhdGlvbmFsUmV0cmlldmFsQWdlbnRPcHRpb25zIHRvIGN1c3RvbWl6ZSB0aGUgYWdlbnQuXG4gKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBpbml0aWFsaXplZCBBZ2VudEV4ZWN1dG9yLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ29udmVyc2F0aW9uYWxSZXRyaWV2YWxBZ2VudChsbG0sIHRvb2xzLCBvcHRpb25zKSB7XG4gICAgY29uc3QgeyByZW1lbWJlckludGVybWVkaWF0ZVN0ZXBzID0gdHJ1ZSwgbWVtb3J5S2V5ID0gXCJjaGF0X2hpc3RvcnlcIiwgb3V0cHV0S2V5ID0gXCJvdXRwdXRcIiwgaW5wdXRLZXkgPSBcImlucHV0XCIsIHByZWZpeCwgdmVyYm9zZSwgfSA9IG9wdGlvbnMgPz8ge307XG4gICAgbGV0IG1lbW9yeTtcbiAgICBpZiAocmVtZW1iZXJJbnRlcm1lZGlhdGVTdGVwcykge1xuICAgICAgICBtZW1vcnkgPSBuZXcgT3BlbkFJQWdlbnRUb2tlbkJ1ZmZlck1lbW9yeSh7XG4gICAgICAgICAgICBtZW1vcnlLZXksXG4gICAgICAgICAgICBsbG0sXG4gICAgICAgICAgICBvdXRwdXRLZXksXG4gICAgICAgICAgICBpbnB1dEtleSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBtZW1vcnkgPSBuZXcgQ29udmVyc2F0aW9uU3VtbWFyeUJ1ZmZlck1lbW9yeSh7XG4gICAgICAgICAgICBtZW1vcnlLZXksXG4gICAgICAgICAgICBsbG0sXG4gICAgICAgICAgICBtYXhUb2tlbkxpbWl0OiAxMjAwMCxcbiAgICAgICAgICAgIHJldHVybk1lc3NhZ2VzOiB0cnVlLFxuICAgICAgICAgICAgb3V0cHV0S2V5LFxuICAgICAgICAgICAgaW5wdXRLZXksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBleGVjdXRvciA9IGF3YWl0IGluaXRpYWxpemVBZ2VudEV4ZWN1dG9yV2l0aE9wdGlvbnModG9vbHMsIGxsbSwge1xuICAgICAgICBhZ2VudFR5cGU6IFwib3BlbmFpLWZ1bmN0aW9uc1wiLFxuICAgICAgICBtZW1vcnksXG4gICAgICAgIHZlcmJvc2UsXG4gICAgICAgIHJldHVybkludGVybWVkaWF0ZVN0ZXBzOiByZW1lbWJlckludGVybWVkaWF0ZVN0ZXBzLFxuICAgICAgICBhZ2VudEFyZ3M6IHtcbiAgICAgICAgICAgIHByZWZpeDogcHJlZml4ID8/XG4gICAgICAgICAgICAgICAgYERvIHlvdXIgYmVzdCB0byBhbnN3ZXIgdGhlIHF1ZXN0aW9ucy4gRmVlbCBmcmVlIHRvIHVzZSBhbnkgdG9vbHMgYXZhaWxhYmxlIHRvIGxvb2sgdXAgcmVsZXZhbnQgaW5mb3JtYXRpb24sIG9ubHkgaWYgbmVjZXNzYXJ5LmAsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIGV4ZWN1dG9yO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIAgentTokenBufferMemory: () => (/* binding */ OpenAIAgentTokenBufferMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/memory */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/memory.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_community_memory_chat_memory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/community/memory/chat_memory */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/memory/chat_memory.js\");\n/* harmony import */ var _openai_functions_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../openai_functions/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/openai_functions/index.js\");\n\n\n\n\n/**\n * Memory used to save agent output and intermediate steps.\n */\nclass OpenAIAgentTokenBufferMemory extends _langchain_community_memory_chat_memory__WEBPACK_IMPORTED_MODULE_2__.BaseChatMemory {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"maxTokenLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12000\n        });\n        Object.defineProperty(this, \"returnMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"intermediateStepsKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"intermediateSteps\"\n        });\n        this.humanPrefix = fields.humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = fields.aiPrefix ?? this.aiPrefix;\n        this.llm = fields.llm;\n        this.memoryKey = fields.memoryKey ?? this.memoryKey;\n        this.maxTokenLimit = fields.maxTokenLimit ?? this.maxTokenLimit;\n        this.returnMessages = fields.returnMessages ?? this.returnMessages;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.intermediateStepsKey =\n            fields.intermediateStepsKey ?? this.intermediateStepsKey;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Retrieves the messages from the chat history.\n     * @returns Promise that resolves with the messages from the chat history.\n     */\n    async getMessages() {\n        return this.chatHistory.getMessages();\n    }\n    /**\n     * Loads memory variables from the input values.\n     * @param _values Input values.\n     * @returns Promise that resolves with the loaded memory variables.\n     */\n    async loadMemoryVariables(_values) {\n        const buffer = await this.getMessages();\n        if (this.returnMessages) {\n            return { [this.memoryKey]: buffer };\n        }\n        else {\n            const bufferString = (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix);\n            return { [this.memoryKey]: bufferString };\n        }\n    }\n    /**\n     * Saves the context of the chat, including user input, AI output, and\n     * intermediate steps. Prunes the chat history if the total token count\n     * exceeds the maximum limit.\n     * @param inputValues Input values.\n     * @param outputValues Output values.\n     * @returns Promise that resolves when the context has been saved.\n     */\n    async saveContext(inputValues, outputValues) {\n        const inputValue = (0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getInputValue)(inputValues, this.inputKey);\n        const outputValue = (0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getOutputValue)(outputValues, this.outputKey);\n        await this.chatHistory.addUserMessage(inputValue);\n        const intermediateStepMessages = (0,_openai_functions_index_js__WEBPACK_IMPORTED_MODULE_3__._formatIntermediateSteps)(outputValues[this.intermediateStepsKey]);\n        for (const message of intermediateStepMessages) {\n            await this.chatHistory.addMessage(message);\n        }\n        await this.chatHistory.addAIChatMessage(outputValue);\n        const currentMessages = await this.chatHistory.getMessages();\n        let tokenInfo = await this.llm.getNumTokensFromMessages(currentMessages);\n        if (tokenInfo.totalCount > this.maxTokenLimit) {\n            const prunedMemory = [];\n            while (tokenInfo.totalCount > this.maxTokenLimit) {\n                const retainedMessage = currentMessages.pop();\n                if (!retainedMessage) {\n                    console.warn(`Could not prune enough messages from chat history to stay under ${this.maxTokenLimit} tokens.`);\n                    break;\n                }\n                prunedMemory.push(retainedMessage);\n                tokenInfo = await this.llm.getNumTokensFromMessages(currentMessages);\n            }\n            await this.chatHistory.clear();\n            for (const message of prunedMemory) {\n                await this.chatHistory.addMessage(message);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRetrieverTool: () => (/* binding */ createRetrieverTool)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _util_document_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util/document.js */ \"(rsc)/./node_modules/langchain/dist/util/document.js\");\n\n\n\n/** @deprecated Use \"langchain/tools/retriever\" instead. */\nfunction createRetrieverTool(retriever, input) {\n    const func = async ({ input }, runManager) => {\n        const docs = await retriever.getRelevantDocuments(input, runManager?.getChild(\"retriever\"));\n        return (0,_util_document_js__WEBPACK_IMPORTED_MODULE_1__.formatDocumentsAsString)(docs);\n    };\n    const schema = zod__WEBPACK_IMPORTED_MODULE_2__.z.object({\n        input: zod__WEBPACK_IMPORTED_MODULE_2__.z\n            .string()\n            .describe(\"Natural language query used as input to the retriever\"),\n    });\n    return new _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicStructuredTool({ ...input, func, schema });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2NvbnZlcnNhdGlvbmFsX3JldHJpZXZhbC90b29sLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0I7QUFDdUM7QUFDSztBQUNwRTtBQUNPO0FBQ1AsMEJBQTBCLE9BQU87QUFDakM7QUFDQSxlQUFlLDBFQUF1QjtBQUN0QztBQUNBLG1CQUFtQixrQ0FBQztBQUNwQixlQUFlLGtDQUFDO0FBQ2hCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSx3RUFBcUIsR0FBRyx3QkFBd0I7QUFDL0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9jb252ZXJzYXRpb25hbF9yZXRyaWV2YWwvdG9vbC5qcz8xODNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5pbXBvcnQgeyBEeW5hbWljU3RydWN0dXJlZFRvb2wsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS90b29sc1wiO1xuaW1wb3J0IHsgZm9ybWF0RG9jdW1lbnRzQXNTdHJpbmcgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbC9kb2N1bWVudC5qc1wiO1xuLyoqIEBkZXByZWNhdGVkIFVzZSBcImxhbmdjaGFpbi90b29scy9yZXRyaWV2ZXJcIiBpbnN0ZWFkLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJldHJpZXZlclRvb2wocmV0cmlldmVyLCBpbnB1dCkge1xuICAgIGNvbnN0IGZ1bmMgPSBhc3luYyAoeyBpbnB1dCB9LCBydW5NYW5hZ2VyKSA9PiB7XG4gICAgICAgIGNvbnN0IGRvY3MgPSBhd2FpdCByZXRyaWV2ZXIuZ2V0UmVsZXZhbnREb2N1bWVudHMoaW5wdXQsIHJ1bk1hbmFnZXI/LmdldENoaWxkKFwicmV0cmlldmVyXCIpKTtcbiAgICAgICAgcmV0dXJuIGZvcm1hdERvY3VtZW50c0FzU3RyaW5nKGRvY3MpO1xuICAgIH07XG4gICAgY29uc3Qgc2NoZW1hID0gei5vYmplY3Qoe1xuICAgICAgICBpbnB1dDogelxuICAgICAgICAgICAgLnN0cmluZygpXG4gICAgICAgICAgICAuZGVzY3JpYmUoXCJOYXR1cmFsIGxhbmd1YWdlIHF1ZXJ5IHVzZWQgYXMgaW5wdXQgdG8gdGhlIHJldHJpZXZlclwiKSxcbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IER5bmFtaWNTdHJ1Y3R1cmVkVG9vbCh7IC4uLmlucHV0LCBmdW5jLCBzY2hlbWEgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonToolkit: () => (/* reexport safe */ _json_json_js__WEBPACK_IMPORTED_MODULE_0__.JsonToolkit),\n/* harmony export */   OpenAIAgentTokenBufferMemory: () => (/* reexport safe */ _conversational_retrieval_token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_6__.OpenAIAgentTokenBufferMemory),\n/* harmony export */   OpenApiToolkit: () => (/* reexport safe */ _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__.OpenApiToolkit),\n/* harmony export */   RequestsToolkit: () => (/* reexport safe */ _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__.RequestsToolkit),\n/* harmony export */   VectorStoreRouterToolkit: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.VectorStoreRouterToolkit),\n/* harmony export */   VectorStoreToolkit: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.VectorStoreToolkit),\n/* harmony export */   ZapierToolKit: () => (/* reexport safe */ _zapier_zapier_js__WEBPACK_IMPORTED_MODULE_3__.ZapierToolKit),\n/* harmony export */   createConversationalRetrievalAgent: () => (/* reexport safe */ _conversational_retrieval_openai_functions_js__WEBPACK_IMPORTED_MODULE_5__.createConversationalRetrievalAgent),\n/* harmony export */   createJsonAgent: () => (/* reexport safe */ _json_json_js__WEBPACK_IMPORTED_MODULE_0__.createJsonAgent),\n/* harmony export */   createOpenApiAgent: () => (/* reexport safe */ _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__.createOpenApiAgent),\n/* harmony export */   createRetrieverTool: () => (/* reexport safe */ _conversational_retrieval_tool_js__WEBPACK_IMPORTED_MODULE_4__.createRetrieverTool),\n/* harmony export */   createVectorStoreAgent: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.createVectorStoreAgent),\n/* harmony export */   createVectorStoreRouterAgent: () => (/* reexport safe */ _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__.createVectorStoreRouterAgent)\n/* harmony export */ });\n/* harmony import */ var _json_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/json.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/json/json.js\");\n/* harmony import */ var _openapi_openapi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./openapi/openapi.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/openapi/openapi.js\");\n/* harmony import */ var _vectorstore_vectorstore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vectorstore/vectorstore.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js\");\n/* harmony import */ var _zapier_zapier_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zapier/zapier.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/zapier/zapier.js\");\n/* harmony import */ var _conversational_retrieval_tool_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conversational_retrieval/tool.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/tool.js\");\n/* harmony import */ var _conversational_retrieval_openai_functions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./conversational_retrieval/openai_functions.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/openai_functions.js\");\n/* harmony import */ var _conversational_retrieval_token_buffer_memory_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./conversational_retrieval/token_buffer_memory.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/conversational_retrieval/token_buffer_memory.js\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThEO0FBQzhCO0FBQ3VEO0FBQ2hHO0FBQ3NCO0FBQzRCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9pbmRleC5qcz8zNGE1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEpzb25Ub29sa2l0LCBjcmVhdGVKc29uQWdlbnQgfSBmcm9tIFwiLi9qc29uL2pzb24uanNcIjtcbmV4cG9ydCB7IFJlcXVlc3RzVG9vbGtpdCwgT3BlbkFwaVRvb2xraXQsIGNyZWF0ZU9wZW5BcGlBZ2VudCwgfSBmcm9tIFwiLi9vcGVuYXBpL29wZW5hcGkuanNcIjtcbmV4cG9ydCB7IFZlY3RvclN0b3JlVG9vbGtpdCwgVmVjdG9yU3RvcmVSb3V0ZXJUb29sa2l0LCBjcmVhdGVWZWN0b3JTdG9yZUFnZW50LCBjcmVhdGVWZWN0b3JTdG9yZVJvdXRlckFnZW50LCB9IGZyb20gXCIuL3ZlY3RvcnN0b3JlL3ZlY3RvcnN0b3JlLmpzXCI7XG5leHBvcnQgeyBaYXBpZXJUb29sS2l0IH0gZnJvbSBcIi4vemFwaWVyL3phcGllci5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlUmV0cmlldmVyVG9vbCB9IGZyb20gXCIuL2NvbnZlcnNhdGlvbmFsX3JldHJpZXZhbC90b29sLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVDb252ZXJzYXRpb25hbFJldHJpZXZhbEFnZW50LCB9IGZyb20gXCIuL2NvbnZlcnNhdGlvbmFsX3JldHJpZXZhbC9vcGVuYWlfZnVuY3Rpb25zLmpzXCI7XG5leHBvcnQgeyBPcGVuQUlBZ2VudFRva2VuQnVmZmVyTWVtb3J5IH0gZnJvbSBcIi4vY29udmVyc2F0aW9uYWxfcmV0cmlldmFsL3Rva2VuX2J1ZmZlcl9tZW1vcnkuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/json/json.js":
/*!******************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/json/json.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonToolkit: () => (/* binding */ JsonToolkit),\n/* harmony export */   createJsonAgent: () => (/* binding */ createJsonAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/agents/toolkits/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js\");\n/* harmony import */ var _tools_json_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tools/json.js */ \"(rsc)/./node_modules/langchain/dist/tools/json.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/json/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mrkl/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../executor.js */ \"(rsc)/./node_modules/langchain/dist/agents/executor.js\");\n\n\n\n\n\n\n/**\n * Represents a toolkit for working with JSON data. It initializes the\n * JSON tools based on the provided JSON specification.\n * @example\n * ```typescript\n * const toolkit = new JsonToolkit(new JsonSpec());\n * const executor = createJsonAgent(model, toolkit);\n * const result = await executor.invoke({\n *   input: 'What are the required parameters in the request body to the /completions endpoint?'\n * });\n * ```\n */\nclass JsonToolkit extends _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__.Toolkit {\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = [\n            new _tools_json_js__WEBPACK_IMPORTED_MODULE_1__.JsonListKeysTool(jsonSpec),\n            new _tools_json_js__WEBPACK_IMPORTED_MODULE_1__.JsonGetValueTool(jsonSpec),\n        ];\n    }\n}\n/**\n * @deprecated Create a specific agent with a custom tool instead.\n *\n * Creates a JSON agent using a language model, a JSON toolkit, and\n * optional prompt arguments. It creates a prompt for the agent using the\n * JSON tools and the provided prefix and suffix. It then creates a\n * ZeroShotAgent with the prompt and the JSON tools, and returns an\n * AgentExecutor for executing the agent with the tools.\n * @param llm The language model used to create the JSON agent.\n * @param toolkit The JSON toolkit used to create the JSON agent.\n * @param args Optional prompt arguments used to create the JSON agent.\n * @returns An AgentExecutor for executing the created JSON agent with the tools.\n */\nfunction createJsonAgent(llm, toolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_2__.JSON_PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_2__.JSON_SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_3__.LLMChain({ prompt, llm });\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_4__.ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_5__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2pzb24vanNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvRTtBQUNTO0FBQ3RCO0FBQ0M7QUFDSjtBQUNGO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sMEJBQTBCLDhFQUFPO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxnQkFBZ0IsNERBQWdCO0FBQ2hDLGdCQUFnQiw0REFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksU0FBUyxtREFBVyxXQUFXLG1EQUFXLG9EQUFvRDtBQUMxRyxZQUFZLFFBQVE7QUFDcEIsbUJBQW1CLHlEQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzQkFBc0IsMERBQVEsR0FBRyxhQUFhO0FBQzlDLHNCQUFzQix5REFBYTtBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMLFdBQVcsdURBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvanNvbi9qc29uLmpzPzMwMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9vbGtpdCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvbW11bml0eS9hZ2VudHMvdG9vbGtpdHMvYmFzZVwiO1xuaW1wb3J0IHsgSnNvbkdldFZhbHVlVG9vbCwgSnNvbkxpc3RLZXlzVG9vbCwgfSBmcm9tIFwiLi4vLi4vLi4vdG9vbHMvanNvbi5qc1wiO1xuaW1wb3J0IHsgSlNPTl9QUkVGSVgsIEpTT05fU1VGRklYIH0gZnJvbSBcIi4vcHJvbXB0LmpzXCI7XG5pbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi8uLi8uLi9jaGFpbnMvbGxtX2NoYWluLmpzXCI7XG5pbXBvcnQgeyBaZXJvU2hvdEFnZW50IH0gZnJvbSBcIi4uLy4uL21ya2wvaW5kZXguanNcIjtcbmltcG9ydCB7IEFnZW50RXhlY3V0b3IgfSBmcm9tIFwiLi4vLi4vZXhlY3V0b3IuanNcIjtcbi8qKlxuICogUmVwcmVzZW50cyBhIHRvb2xraXQgZm9yIHdvcmtpbmcgd2l0aCBKU09OIGRhdGEuIEl0IGluaXRpYWxpemVzIHRoZVxuICogSlNPTiB0b29scyBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgSlNPTiBzcGVjaWZpY2F0aW9uLlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IHRvb2xraXQgPSBuZXcgSnNvblRvb2xraXQobmV3IEpzb25TcGVjKCkpO1xuICogY29uc3QgZXhlY3V0b3IgPSBjcmVhdGVKc29uQWdlbnQobW9kZWwsIHRvb2xraXQpO1xuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY3V0b3IuaW52b2tlKHtcbiAqICAgaW5wdXQ6ICdXaGF0IGFyZSB0aGUgcmVxdWlyZWQgcGFyYW1ldGVycyBpbiB0aGUgcmVxdWVzdCBib2R5IHRvIHRoZSAvY29tcGxldGlvbnMgZW5kcG9pbnQ/J1xuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEpzb25Ub29sa2l0IGV4dGVuZHMgVG9vbGtpdCB7XG4gICAgY29uc3RydWN0b3IoanNvblNwZWMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwianNvblNwZWNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGpzb25TcGVjXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0b29sc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRvb2xzID0gW1xuICAgICAgICAgICAgbmV3IEpzb25MaXN0S2V5c1Rvb2woanNvblNwZWMpLFxuICAgICAgICAgICAgbmV3IEpzb25HZXRWYWx1ZVRvb2woanNvblNwZWMpLFxuICAgICAgICBdO1xuICAgIH1cbn1cbi8qKlxuICogQGRlcHJlY2F0ZWQgQ3JlYXRlIGEgc3BlY2lmaWMgYWdlbnQgd2l0aCBhIGN1c3RvbSB0b29sIGluc3RlYWQuXG4gKlxuICogQ3JlYXRlcyBhIEpTT04gYWdlbnQgdXNpbmcgYSBsYW5ndWFnZSBtb2RlbCwgYSBKU09OIHRvb2xraXQsIGFuZFxuICogb3B0aW9uYWwgcHJvbXB0IGFyZ3VtZW50cy4gSXQgY3JlYXRlcyBhIHByb21wdCBmb3IgdGhlIGFnZW50IHVzaW5nIHRoZVxuICogSlNPTiB0b29scyBhbmQgdGhlIHByb3ZpZGVkIHByZWZpeCBhbmQgc3VmZml4LiBJdCB0aGVuIGNyZWF0ZXMgYVxuICogWmVyb1Nob3RBZ2VudCB3aXRoIHRoZSBwcm9tcHQgYW5kIHRoZSBKU09OIHRvb2xzLCBhbmQgcmV0dXJucyBhblxuICogQWdlbnRFeGVjdXRvciBmb3IgZXhlY3V0aW5nIHRoZSBhZ2VudCB3aXRoIHRoZSB0b29scy5cbiAqIEBwYXJhbSBsbG0gVGhlIGxhbmd1YWdlIG1vZGVsIHVzZWQgdG8gY3JlYXRlIHRoZSBKU09OIGFnZW50LlxuICogQHBhcmFtIHRvb2xraXQgVGhlIEpTT04gdG9vbGtpdCB1c2VkIHRvIGNyZWF0ZSB0aGUgSlNPTiBhZ2VudC5cbiAqIEBwYXJhbSBhcmdzIE9wdGlvbmFsIHByb21wdCBhcmd1bWVudHMgdXNlZCB0byBjcmVhdGUgdGhlIEpTT04gYWdlbnQuXG4gKiBAcmV0dXJucyBBbiBBZ2VudEV4ZWN1dG9yIGZvciBleGVjdXRpbmcgdGhlIGNyZWF0ZWQgSlNPTiBhZ2VudCB3aXRoIHRoZSB0b29scy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUpzb25BZ2VudChsbG0sIHRvb2xraXQsIGFyZ3MpIHtcbiAgICBjb25zdCB7IHByZWZpeCA9IEpTT05fUFJFRklYLCBzdWZmaXggPSBKU09OX1NVRkZJWCwgaW5wdXRWYXJpYWJsZXMgPSBbXCJpbnB1dFwiLCBcImFnZW50X3NjcmF0Y2hwYWRcIl0sIH0gPSBhcmdzID8/IHt9O1xuICAgIGNvbnN0IHsgdG9vbHMgfSA9IHRvb2xraXQ7XG4gICAgY29uc3QgcHJvbXB0ID0gWmVyb1Nob3RBZ2VudC5jcmVhdGVQcm9tcHQodG9vbHMsIHtcbiAgICAgICAgcHJlZml4LFxuICAgICAgICBzdWZmaXgsXG4gICAgICAgIGlucHV0VmFyaWFibGVzLFxuICAgIH0pO1xuICAgIGNvbnN0IGNoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0LCBsbG0gfSk7XG4gICAgY29uc3QgYWdlbnQgPSBuZXcgWmVyb1Nob3RBZ2VudCh7XG4gICAgICAgIGxsbUNoYWluOiBjaGFpbixcbiAgICAgICAgYWxsb3dlZFRvb2xzOiB0b29scy5tYXAoKHQpID0+IHQubmFtZSksXG4gICAgfSk7XG4gICAgcmV0dXJuIEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICAgICAgICBhZ2VudCxcbiAgICAgICAgdG9vbHMsXG4gICAgICAgIHJldHVybkludGVybWVkaWF0ZVN0ZXBzOiB0cnVlLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/json/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/json/prompt.js":
/*!********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/json/prompt.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSON_PREFIX: () => (/* binding */ JSON_PREFIX),\n/* harmony export */   JSON_SUFFIX: () => (/* binding */ JSON_SUFFIX)\n/* harmony export */ });\nconst JSON_PREFIX = `You are an agent designed to interact with JSON.\nYour goal is to return a final answer by interacting with the JSON.\nYou have access to the following tools which help you learn more about the JSON you are interacting with.\nOnly use the below tools. Only use the information returned by the below tools to construct your final answer.\nDo not make up any information that is not contained in the JSON.\nYour input to the tools should be in the form of in json pointer syntax (e.g. /key1/0/key2).\nYou must escape a slash in a key with a ~1, and escape a tilde with a ~0.\nFor example, to access the key /foo, you would use /~1foo\nYou should only use keys that you know for a fact exist. You must validate that a key exists by seeing it previously when calling 'json_list_keys'.\nIf you have not seen a key in one of those responses, you cannot use it.\nYou should only add one key at a time to the path. You cannot add multiple keys at once.\nIf you encounter a null or undefined value, go back to the previous key, look at the available keys, and try again.\n\nIf the question does not seem to be related to the JSON, just return \"I don't know\" as the answer.\nAlways begin your interaction with the 'json_list_keys' with an empty string as the input to see what keys exist in the JSON.\n\nNote that sometimes the value at a given path is large. In this case, you will get an error \"Value is a large dictionary, should explore its keys directly\".\nIn this case, you should ALWAYS follow up by using the 'json_list_keys' tool to see what keys exist at that path.\nDo not simply refer the user to the JSON or a section of the JSON, as this is not a valid answer. Keep digging until you find the answer and explicitly return it.`;\nconst JSON_SUFFIX = `Begin!\"\n\nQuestion: {input}\nThought: I should look at the keys that exist to see what I can query. I should use the 'json_list_keys' tool with an empty string as the input.\n{agent_scratchpad}`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2pzb24vcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ087O0FBRVAsV0FBVztBQUNYO0FBQ0EsQ0FBQyxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9qc29uL3Byb21wdC5qcz84MTMyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBKU09OX1BSRUZJWCA9IGBZb3UgYXJlIGFuIGFnZW50IGRlc2lnbmVkIHRvIGludGVyYWN0IHdpdGggSlNPTi5cbllvdXIgZ29hbCBpcyB0byByZXR1cm4gYSBmaW5hbCBhbnN3ZXIgYnkgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgSlNPTi5cbllvdSBoYXZlIGFjY2VzcyB0byB0aGUgZm9sbG93aW5nIHRvb2xzIHdoaWNoIGhlbHAgeW91IGxlYXJuIG1vcmUgYWJvdXQgdGhlIEpTT04geW91IGFyZSBpbnRlcmFjdGluZyB3aXRoLlxuT25seSB1c2UgdGhlIGJlbG93IHRvb2xzLiBPbmx5IHVzZSB0aGUgaW5mb3JtYXRpb24gcmV0dXJuZWQgYnkgdGhlIGJlbG93IHRvb2xzIHRvIGNvbnN0cnVjdCB5b3VyIGZpbmFsIGFuc3dlci5cbkRvIG5vdCBtYWtlIHVwIGFueSBpbmZvcm1hdGlvbiB0aGF0IGlzIG5vdCBjb250YWluZWQgaW4gdGhlIEpTT04uXG5Zb3VyIGlucHV0IHRvIHRoZSB0b29scyBzaG91bGQgYmUgaW4gdGhlIGZvcm0gb2YgaW4ganNvbiBwb2ludGVyIHN5bnRheCAoZS5nLiAva2V5MS8wL2tleTIpLlxuWW91IG11c3QgZXNjYXBlIGEgc2xhc2ggaW4gYSBrZXkgd2l0aCBhIH4xLCBhbmQgZXNjYXBlIGEgdGlsZGUgd2l0aCBhIH4wLlxuRm9yIGV4YW1wbGUsIHRvIGFjY2VzcyB0aGUga2V5IC9mb28sIHlvdSB3b3VsZCB1c2UgL34xZm9vXG5Zb3Ugc2hvdWxkIG9ubHkgdXNlIGtleXMgdGhhdCB5b3Uga25vdyBmb3IgYSBmYWN0IGV4aXN0LiBZb3UgbXVzdCB2YWxpZGF0ZSB0aGF0IGEga2V5IGV4aXN0cyBieSBzZWVpbmcgaXQgcHJldmlvdXNseSB3aGVuIGNhbGxpbmcgJ2pzb25fbGlzdF9rZXlzJy5cbklmIHlvdSBoYXZlIG5vdCBzZWVuIGEga2V5IGluIG9uZSBvZiB0aG9zZSByZXNwb25zZXMsIHlvdSBjYW5ub3QgdXNlIGl0LlxuWW91IHNob3VsZCBvbmx5IGFkZCBvbmUga2V5IGF0IGEgdGltZSB0byB0aGUgcGF0aC4gWW91IGNhbm5vdCBhZGQgbXVsdGlwbGUga2V5cyBhdCBvbmNlLlxuSWYgeW91IGVuY291bnRlciBhIG51bGwgb3IgdW5kZWZpbmVkIHZhbHVlLCBnbyBiYWNrIHRvIHRoZSBwcmV2aW91cyBrZXksIGxvb2sgYXQgdGhlIGF2YWlsYWJsZSBrZXlzLCBhbmQgdHJ5IGFnYWluLlxuXG5JZiB0aGUgcXVlc3Rpb24gZG9lcyBub3Qgc2VlbSB0byBiZSByZWxhdGVkIHRvIHRoZSBKU09OLCBqdXN0IHJldHVybiBcIkkgZG9uJ3Qga25vd1wiIGFzIHRoZSBhbnN3ZXIuXG5BbHdheXMgYmVnaW4geW91ciBpbnRlcmFjdGlvbiB3aXRoIHRoZSAnanNvbl9saXN0X2tleXMnIHdpdGggYW4gZW1wdHkgc3RyaW5nIGFzIHRoZSBpbnB1dCB0byBzZWUgd2hhdCBrZXlzIGV4aXN0IGluIHRoZSBKU09OLlxuXG5Ob3RlIHRoYXQgc29tZXRpbWVzIHRoZSB2YWx1ZSBhdCBhIGdpdmVuIHBhdGggaXMgbGFyZ2UuIEluIHRoaXMgY2FzZSwgeW91IHdpbGwgZ2V0IGFuIGVycm9yIFwiVmFsdWUgaXMgYSBsYXJnZSBkaWN0aW9uYXJ5LCBzaG91bGQgZXhwbG9yZSBpdHMga2V5cyBkaXJlY3RseVwiLlxuSW4gdGhpcyBjYXNlLCB5b3Ugc2hvdWxkIEFMV0FZUyBmb2xsb3cgdXAgYnkgdXNpbmcgdGhlICdqc29uX2xpc3Rfa2V5cycgdG9vbCB0byBzZWUgd2hhdCBrZXlzIGV4aXN0IGF0IHRoYXQgcGF0aC5cbkRvIG5vdCBzaW1wbHkgcmVmZXIgdGhlIHVzZXIgdG8gdGhlIEpTT04gb3IgYSBzZWN0aW9uIG9mIHRoZSBKU09OLCBhcyB0aGlzIGlzIG5vdCBhIHZhbGlkIGFuc3dlci4gS2VlcCBkaWdnaW5nIHVudGlsIHlvdSBmaW5kIHRoZSBhbnN3ZXIgYW5kIGV4cGxpY2l0bHkgcmV0dXJuIGl0LmA7XG5leHBvcnQgY29uc3QgSlNPTl9TVUZGSVggPSBgQmVnaW4hXCJcblxuUXVlc3Rpb246IHtpbnB1dH1cblRob3VnaHQ6IEkgc2hvdWxkIGxvb2sgYXQgdGhlIGtleXMgdGhhdCBleGlzdCB0byBzZWUgd2hhdCBJIGNhbiBxdWVyeS4gSSBzaG91bGQgdXNlIHRoZSAnanNvbl9saXN0X2tleXMnIHRvb2wgd2l0aCBhbiBlbXB0eSBzdHJpbmcgYXMgdGhlIGlucHV0Llxue2FnZW50X3NjcmF0Y2hwYWR9YDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/json/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/openapi/openapi.js":
/*!************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/openapi/openapi.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenApiToolkit: () => (/* binding */ OpenApiToolkit),\n/* harmony export */   RequestsToolkit: () => (/* binding */ RequestsToolkit),\n/* harmony export */   createOpenApiAgent: () => (/* binding */ createOpenApiAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/community/agents/toolkits/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../executor.js */ \"(rsc)/./node_modules/langchain/dist/agents/executor.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/openapi/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mrkl/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _tools_requests_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../tools/requests.js */ \"(rsc)/./node_modules/langchain/dist/tools/requests.js\");\n/* harmony import */ var _json_json_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../json/json.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/json/json.js\");\n\n\n\n\n\n\n\n\n/**\n * Represents a toolkit for making HTTP requests. It initializes the\n * request tools based on the provided headers.\n */\nclass RequestsToolkit extends _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_1__.Toolkit {\n    constructor(headers) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = [new _tools_requests_js__WEBPACK_IMPORTED_MODULE_6__.RequestsGetTool(headers), new _tools_requests_js__WEBPACK_IMPORTED_MODULE_6__.RequestsPostTool(headers)];\n    }\n}\n/**\n * Extends the `RequestsToolkit` class and adds a dynamic tool for\n * exploring JSON data. It creates a JSON agent using the `JsonToolkit`\n * and the provided language model, and adds the JSON explorer tool to the\n * toolkit.\n * @example\n * ```typescript\n * const toolkit = new OpenApiToolkit(\n *   new JsonSpec({\n *   }),\n *   new ChatOpenAI({ temperature: 0 }),\n *   {\n *     \"Content-Type\": \"application/json\",\n *     Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,\n *   },\n * );\n *\n * const result = await toolkit.invoke({\n *   input:\n *     \"Make a POST request to openai /completions. The prompt should be 'tell me a joke.'\",\n * });\n * console.log(`Got output ${result.output}`);\n * ```\n */\nclass OpenApiToolkit extends RequestsToolkit {\n    constructor(jsonSpec, llm, headers) {\n        super(headers);\n        const jsonAgent = (0,_json_json_js__WEBPACK_IMPORTED_MODULE_7__.createJsonAgent)(llm, new _json_json_js__WEBPACK_IMPORTED_MODULE_7__.JsonToolkit(jsonSpec));\n        this.tools = [\n            ...this.tools,\n            new _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicTool({\n                name: \"json_explorer\",\n                func: async (input) => {\n                    const result = await jsonAgent.call({ input });\n                    return result.output;\n                },\n                description: _prompt_js__WEBPACK_IMPORTED_MODULE_3__.JSON_EXPLORER_DESCRIPTION,\n            }),\n        ];\n    }\n}\n/**\n * @deprecated Create a specific agent with a custom tool instead.\n *\n * Creates an OpenAPI agent using a language model, an OpenAPI toolkit,\n * and optional prompt arguments. It creates a prompt for the agent using\n * the OpenAPI tools and the provided prefix and suffix. It then creates a\n * ZeroShotAgent with the prompt and the OpenAPI tools, and returns an\n * AgentExecutor for executing the agent with the tools.\n * @param llm The language model to use.\n * @param openApiToolkit The OpenAPI toolkit to use.\n * @param args Optional arguments for creating the prompt.\n * @returns An AgentExecutor for executing the agent with the tools.\n *\n * @security **Security Notice** This agent provides access to external APIs.\n * Use with caution as this agent can make API calls with arbitrary headers.\n * Exposing this agent to users could lead to security vulnerabilities. Consider\n * limiting access to what endpoints it can hit, what actions can be taken, and\n * more.\n *\n * @link See https://js.langchain.com/docs/security for more information.\n */\nfunction createOpenApiAgent(llm, openApiToolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_3__.OPENAPI_PREFIX, suffix = _prompt_js__WEBPACK_IMPORTED_MODULE_3__.OPENAPI_SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = openApiToolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_4__.LLMChain({\n        prompt,\n        llm,\n    });\n    const toolNames = tools.map((tool) => tool.name);\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_5__.ZeroShotAgent({ llmChain: chain, allowedTools: toolNames });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_2__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL29wZW5hcGkvb3BlbmFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFvRDtBQUNnQjtBQUNsQjtBQUN1QztBQUNqQztBQUNKO0FBQzRCO0FBQ2pCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOEJBQThCLDhFQUFPO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULDBCQUEwQiwrREFBZSxlQUFlLGdFQUFnQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTtBQUNBLGdDQUFnQywyQkFBMkI7QUFDM0QsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDBCQUEwQiw4REFBZSxVQUFVLHNEQUFXO0FBQzlEO0FBQ0E7QUFDQSxnQkFBZ0IsOERBQVc7QUFDM0I7QUFDQTtBQUNBLDBEQUEwRCxPQUFPO0FBQ2pFO0FBQ0EsaUJBQWlCO0FBQ2pCLDZCQUE2QixpRUFBeUI7QUFDdEQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxTQUFTLHNEQUFjLFdBQVcsc0RBQWMsb0RBQW9EO0FBQ2hILFlBQVksUUFBUTtBQUNwQixtQkFBbUIseURBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHNCQUFzQiwwREFBUTtBQUM5QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCLHlEQUFhLEdBQUcsMENBQTBDO0FBQ2hGLFdBQVcsdURBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvb3BlbmFwaS9vcGVuYXBpLmpzPzJjMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY1Rvb2wgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG5pbXBvcnQgeyBUb29sa2l0IH0gZnJvbSBcIkBsYW5nY2hhaW4vY29tbXVuaXR5L2FnZW50cy90b29sa2l0cy9iYXNlXCI7XG5pbXBvcnQgeyBBZ2VudEV4ZWN1dG9yIH0gZnJvbSBcIi4uLy4uL2V4ZWN1dG9yLmpzXCI7XG5pbXBvcnQgeyBPUEVOQVBJX1BSRUZJWCwgT1BFTkFQSV9TVUZGSVgsIEpTT05fRVhQTE9SRVJfREVTQ1JJUFRJT04sIH0gZnJvbSBcIi4vcHJvbXB0LmpzXCI7XG5pbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi8uLi8uLi9jaGFpbnMvbGxtX2NoYWluLmpzXCI7XG5pbXBvcnQgeyBaZXJvU2hvdEFnZW50IH0gZnJvbSBcIi4uLy4uL21ya2wvaW5kZXguanNcIjtcbmltcG9ydCB7IFJlcXVlc3RzR2V0VG9vbCwgUmVxdWVzdHNQb3N0VG9vbCwgfSBmcm9tIFwiLi4vLi4vLi4vdG9vbHMvcmVxdWVzdHMuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUpzb25BZ2VudCwgSnNvblRvb2xraXQgfSBmcm9tIFwiLi4vanNvbi9qc29uLmpzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSB0b29sa2l0IGZvciBtYWtpbmcgSFRUUCByZXF1ZXN0cy4gSXQgaW5pdGlhbGl6ZXMgdGhlXG4gKiByZXF1ZXN0IHRvb2xzIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBoZWFkZXJzLlxuICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdHNUb29sa2l0IGV4dGVuZHMgVG9vbGtpdCB7XG4gICAgY29uc3RydWN0b3IoaGVhZGVycykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0b29sc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRvb2xzID0gW25ldyBSZXF1ZXN0c0dldFRvb2woaGVhZGVycyksIG5ldyBSZXF1ZXN0c1Bvc3RUb29sKGhlYWRlcnMpXTtcbiAgICB9XG59XG4vKipcbiAqIEV4dGVuZHMgdGhlIGBSZXF1ZXN0c1Rvb2xraXRgIGNsYXNzIGFuZCBhZGRzIGEgZHluYW1pYyB0b29sIGZvclxuICogZXhwbG9yaW5nIEpTT04gZGF0YS4gSXQgY3JlYXRlcyBhIEpTT04gYWdlbnQgdXNpbmcgdGhlIGBKc29uVG9vbGtpdGBcbiAqIGFuZCB0aGUgcHJvdmlkZWQgbGFuZ3VhZ2UgbW9kZWwsIGFuZCBhZGRzIHRoZSBKU09OIGV4cGxvcmVyIHRvb2wgdG8gdGhlXG4gKiB0b29sa2l0LlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IHRvb2xraXQgPSBuZXcgT3BlbkFwaVRvb2xraXQoXG4gKiAgIG5ldyBKc29uU3BlYyh7XG4gKiAgIH0pLFxuICogICBuZXcgQ2hhdE9wZW5BSSh7IHRlbXBlcmF0dXJlOiAwIH0pLFxuICogICB7XG4gKiAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gKiAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Byb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZfWAsXG4gKiAgIH0sXG4gKiApO1xuICpcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRvb2xraXQuaW52b2tlKHtcbiAqICAgaW5wdXQ6XG4gKiAgICAgXCJNYWtlIGEgUE9TVCByZXF1ZXN0IHRvIG9wZW5haSAvY29tcGxldGlvbnMuIFRoZSBwcm9tcHQgc2hvdWxkIGJlICd0ZWxsIG1lIGEgam9rZS4nXCIsXG4gKiB9KTtcbiAqIGNvbnNvbGUubG9nKGBHb3Qgb3V0cHV0ICR7cmVzdWx0Lm91dHB1dH1gKTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgT3BlbkFwaVRvb2xraXQgZXh0ZW5kcyBSZXF1ZXN0c1Rvb2xraXQge1xuICAgIGNvbnN0cnVjdG9yKGpzb25TcGVjLCBsbG0sIGhlYWRlcnMpIHtcbiAgICAgICAgc3VwZXIoaGVhZGVycyk7XG4gICAgICAgIGNvbnN0IGpzb25BZ2VudCA9IGNyZWF0ZUpzb25BZ2VudChsbG0sIG5ldyBKc29uVG9vbGtpdChqc29uU3BlYykpO1xuICAgICAgICB0aGlzLnRvb2xzID0gW1xuICAgICAgICAgICAgLi4udGhpcy50b29scyxcbiAgICAgICAgICAgIG5ldyBEeW5hbWljVG9vbCh7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJqc29uX2V4cGxvcmVyXCIsXG4gICAgICAgICAgICAgICAgZnVuYzogYXN5bmMgKGlucHV0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGpzb25BZ2VudC5jYWxsKHsgaW5wdXQgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQub3V0cHV0O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IEpTT05fRVhQTE9SRVJfREVTQ1JJUFRJT04sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgXTtcbiAgICB9XG59XG4vKipcbiAqIEBkZXByZWNhdGVkIENyZWF0ZSBhIHNwZWNpZmljIGFnZW50IHdpdGggYSBjdXN0b20gdG9vbCBpbnN0ZWFkLlxuICpcbiAqIENyZWF0ZXMgYW4gT3BlbkFQSSBhZ2VudCB1c2luZyBhIGxhbmd1YWdlIG1vZGVsLCBhbiBPcGVuQVBJIHRvb2xraXQsXG4gKiBhbmQgb3B0aW9uYWwgcHJvbXB0IGFyZ3VtZW50cy4gSXQgY3JlYXRlcyBhIHByb21wdCBmb3IgdGhlIGFnZW50IHVzaW5nXG4gKiB0aGUgT3BlbkFQSSB0b29scyBhbmQgdGhlIHByb3ZpZGVkIHByZWZpeCBhbmQgc3VmZml4LiBJdCB0aGVuIGNyZWF0ZXMgYVxuICogWmVyb1Nob3RBZ2VudCB3aXRoIHRoZSBwcm9tcHQgYW5kIHRoZSBPcGVuQVBJIHRvb2xzLCBhbmQgcmV0dXJucyBhblxuICogQWdlbnRFeGVjdXRvciBmb3IgZXhlY3V0aW5nIHRoZSBhZ2VudCB3aXRoIHRoZSB0b29scy5cbiAqIEBwYXJhbSBsbG0gVGhlIGxhbmd1YWdlIG1vZGVsIHRvIHVzZS5cbiAqIEBwYXJhbSBvcGVuQXBpVG9vbGtpdCBUaGUgT3BlbkFQSSB0b29sa2l0IHRvIHVzZS5cbiAqIEBwYXJhbSBhcmdzIE9wdGlvbmFsIGFyZ3VtZW50cyBmb3IgY3JlYXRpbmcgdGhlIHByb21wdC5cbiAqIEByZXR1cm5zIEFuIEFnZW50RXhlY3V0b3IgZm9yIGV4ZWN1dGluZyB0aGUgYWdlbnQgd2l0aCB0aGUgdG9vbHMuXG4gKlxuICogQHNlY3VyaXR5ICoqU2VjdXJpdHkgTm90aWNlKiogVGhpcyBhZ2VudCBwcm92aWRlcyBhY2Nlc3MgdG8gZXh0ZXJuYWwgQVBJcy5cbiAqIFVzZSB3aXRoIGNhdXRpb24gYXMgdGhpcyBhZ2VudCBjYW4gbWFrZSBBUEkgY2FsbHMgd2l0aCBhcmJpdHJhcnkgaGVhZGVycy5cbiAqIEV4cG9zaW5nIHRoaXMgYWdlbnQgdG8gdXNlcnMgY291bGQgbGVhZCB0byBzZWN1cml0eSB2dWxuZXJhYmlsaXRpZXMuIENvbnNpZGVyXG4gKiBsaW1pdGluZyBhY2Nlc3MgdG8gd2hhdCBlbmRwb2ludHMgaXQgY2FuIGhpdCwgd2hhdCBhY3Rpb25zIGNhbiBiZSB0YWtlbiwgYW5kXG4gKiBtb3JlLlxuICpcbiAqIEBsaW5rIFNlZSBodHRwczovL2pzLmxhbmdjaGFpbi5jb20vZG9jcy9zZWN1cml0eSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU9wZW5BcGlBZ2VudChsbG0sIG9wZW5BcGlUb29sa2l0LCBhcmdzKSB7XG4gICAgY29uc3QgeyBwcmVmaXggPSBPUEVOQVBJX1BSRUZJWCwgc3VmZml4ID0gT1BFTkFQSV9TVUZGSVgsIGlucHV0VmFyaWFibGVzID0gW1wiaW5wdXRcIiwgXCJhZ2VudF9zY3JhdGNocGFkXCJdLCB9ID0gYXJncyA/PyB7fTtcbiAgICBjb25zdCB7IHRvb2xzIH0gPSBvcGVuQXBpVG9vbGtpdDtcbiAgICBjb25zdCBwcm9tcHQgPSBaZXJvU2hvdEFnZW50LmNyZWF0ZVByb21wdCh0b29scywge1xuICAgICAgICBwcmVmaXgsXG4gICAgICAgIHN1ZmZpeCxcbiAgICAgICAgaW5wdXRWYXJpYWJsZXMsXG4gICAgfSk7XG4gICAgY29uc3QgY2hhaW4gPSBuZXcgTExNQ2hhaW4oe1xuICAgICAgICBwcm9tcHQsXG4gICAgICAgIGxsbSxcbiAgICB9KTtcbiAgICBjb25zdCB0b29sTmFtZXMgPSB0b29scy5tYXAoKHRvb2wpID0+IHRvb2wubmFtZSk7XG4gICAgY29uc3QgYWdlbnQgPSBuZXcgWmVyb1Nob3RBZ2VudCh7IGxsbUNoYWluOiBjaGFpbiwgYWxsb3dlZFRvb2xzOiB0b29sTmFtZXMgfSk7XG4gICAgcmV0dXJuIEFnZW50RXhlY3V0b3IuZnJvbUFnZW50QW5kVG9vbHMoe1xuICAgICAgICBhZ2VudCxcbiAgICAgICAgdG9vbHMsXG4gICAgICAgIHJldHVybkludGVybWVkaWF0ZVN0ZXBzOiB0cnVlLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/openapi/openapi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/openapi/prompt.js":
/*!***********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/openapi/prompt.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JSON_EXPLORER_DESCRIPTION: () => (/* binding */ JSON_EXPLORER_DESCRIPTION),\n/* harmony export */   OPENAPI_PREFIX: () => (/* binding */ OPENAPI_PREFIX),\n/* harmony export */   OPENAPI_SUFFIX: () => (/* binding */ OPENAPI_SUFFIX)\n/* harmony export */ });\nconst OPENAPI_PREFIX = `You are an agent designed to answer questions by making web requests to an API given the OpenAPI spec.\n\nIf the question does not seem related to the API, return I don't know. Do not make up an answer.\nOnly use information provided by the tools to construct your response.\n\nTo find information in the OpenAPI spec, use the 'json_explorer' tool. The input to this tool is a question about the API.\n\nTake the following steps:\nFirst, find the base URL needed to make the request.\n\nSecond, find the relevant paths needed to answer the question. Take note that, sometimes, you might need to make more than one request to more than one path to answer the question.\n\nThird, find the required parameters needed to make the request. For GET requests, these are usually URL parameters and for POST requests, these are request body parameters.\n\nFourth, make the requests needed to answer the question. Ensure that you are sending the correct parameters to the request by checking which parameters are required. For parameters with a fixed set of values, please use the spec to look at which values are allowed.\n\nUse the exact parameter names as listed in the spec, do not make up any names or abbreviate the names of parameters.\nIf you get a not found error, ensure that you are using a path that actually exists in the spec.`;\nconst OPENAPI_SUFFIX = `Begin!\"\n\nQuestion: {input}\nThought: I should explore the spec to find the base url for the API.\n{agent_scratchpad}`;\nconst JSON_EXPLORER_DESCRIPTION = `\nCan be used to answer questions about the openapi spec for the API. Always use this tool before trying to make a request. \nExample inputs to this tool: \n    'What are the required query parameters for a GET request to the /bar endpoint?'\n    'What are the required parameters in the request body for a POST request to the /foo endpoint?'\nAlways give this tool a specific question.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL29wZW5hcGkvcHJvbXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPOztBQUVQO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ087O0FBRVAsV0FBVztBQUNYO0FBQ0EsQ0FBQyxpQkFBaUI7QUFDWDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy9vcGVuYXBpL3Byb21wdC5qcz8wMDZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBPUEVOQVBJX1BSRUZJWCA9IGBZb3UgYXJlIGFuIGFnZW50IGRlc2lnbmVkIHRvIGFuc3dlciBxdWVzdGlvbnMgYnkgbWFraW5nIHdlYiByZXF1ZXN0cyB0byBhbiBBUEkgZ2l2ZW4gdGhlIE9wZW5BUEkgc3BlYy5cblxuSWYgdGhlIHF1ZXN0aW9uIGRvZXMgbm90IHNlZW0gcmVsYXRlZCB0byB0aGUgQVBJLCByZXR1cm4gSSBkb24ndCBrbm93LiBEbyBub3QgbWFrZSB1cCBhbiBhbnN3ZXIuXG5Pbmx5IHVzZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBieSB0aGUgdG9vbHMgdG8gY29uc3RydWN0IHlvdXIgcmVzcG9uc2UuXG5cblRvIGZpbmQgaW5mb3JtYXRpb24gaW4gdGhlIE9wZW5BUEkgc3BlYywgdXNlIHRoZSAnanNvbl9leHBsb3JlcicgdG9vbC4gVGhlIGlucHV0IHRvIHRoaXMgdG9vbCBpcyBhIHF1ZXN0aW9uIGFib3V0IHRoZSBBUEkuXG5cblRha2UgdGhlIGZvbGxvd2luZyBzdGVwczpcbkZpcnN0LCBmaW5kIHRoZSBiYXNlIFVSTCBuZWVkZWQgdG8gbWFrZSB0aGUgcmVxdWVzdC5cblxuU2Vjb25kLCBmaW5kIHRoZSByZWxldmFudCBwYXRocyBuZWVkZWQgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbi4gVGFrZSBub3RlIHRoYXQsIHNvbWV0aW1lcywgeW91IG1pZ2h0IG5lZWQgdG8gbWFrZSBtb3JlIHRoYW4gb25lIHJlcXVlc3QgdG8gbW9yZSB0aGFuIG9uZSBwYXRoIHRvIGFuc3dlciB0aGUgcXVlc3Rpb24uXG5cblRoaXJkLCBmaW5kIHRoZSByZXF1aXJlZCBwYXJhbWV0ZXJzIG5lZWRlZCB0byBtYWtlIHRoZSByZXF1ZXN0LiBGb3IgR0VUIHJlcXVlc3RzLCB0aGVzZSBhcmUgdXN1YWxseSBVUkwgcGFyYW1ldGVycyBhbmQgZm9yIFBPU1QgcmVxdWVzdHMsIHRoZXNlIGFyZSByZXF1ZXN0IGJvZHkgcGFyYW1ldGVycy5cblxuRm91cnRoLCBtYWtlIHRoZSByZXF1ZXN0cyBuZWVkZWQgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbi4gRW5zdXJlIHRoYXQgeW91IGFyZSBzZW5kaW5nIHRoZSBjb3JyZWN0IHBhcmFtZXRlcnMgdG8gdGhlIHJlcXVlc3QgYnkgY2hlY2tpbmcgd2hpY2ggcGFyYW1ldGVycyBhcmUgcmVxdWlyZWQuIEZvciBwYXJhbWV0ZXJzIHdpdGggYSBmaXhlZCBzZXQgb2YgdmFsdWVzLCBwbGVhc2UgdXNlIHRoZSBzcGVjIHRvIGxvb2sgYXQgd2hpY2ggdmFsdWVzIGFyZSBhbGxvd2VkLlxuXG5Vc2UgdGhlIGV4YWN0IHBhcmFtZXRlciBuYW1lcyBhcyBsaXN0ZWQgaW4gdGhlIHNwZWMsIGRvIG5vdCBtYWtlIHVwIGFueSBuYW1lcyBvciBhYmJyZXZpYXRlIHRoZSBuYW1lcyBvZiBwYXJhbWV0ZXJzLlxuSWYgeW91IGdldCBhIG5vdCBmb3VuZCBlcnJvciwgZW5zdXJlIHRoYXQgeW91IGFyZSB1c2luZyBhIHBhdGggdGhhdCBhY3R1YWxseSBleGlzdHMgaW4gdGhlIHNwZWMuYDtcbmV4cG9ydCBjb25zdCBPUEVOQVBJX1NVRkZJWCA9IGBCZWdpbiFcIlxuXG5RdWVzdGlvbjoge2lucHV0fVxuVGhvdWdodDogSSBzaG91bGQgZXhwbG9yZSB0aGUgc3BlYyB0byBmaW5kIHRoZSBiYXNlIHVybCBmb3IgdGhlIEFQSS5cbnthZ2VudF9zY3JhdGNocGFkfWA7XG5leHBvcnQgY29uc3QgSlNPTl9FWFBMT1JFUl9ERVNDUklQVElPTiA9IGBcbkNhbiBiZSB1c2VkIHRvIGFuc3dlciBxdWVzdGlvbnMgYWJvdXQgdGhlIG9wZW5hcGkgc3BlYyBmb3IgdGhlIEFQSS4gQWx3YXlzIHVzZSB0aGlzIHRvb2wgYmVmb3JlIHRyeWluZyB0byBtYWtlIGEgcmVxdWVzdC4gXG5FeGFtcGxlIGlucHV0cyB0byB0aGlzIHRvb2w6IFxuICAgICdXaGF0IGFyZSB0aGUgcmVxdWlyZWQgcXVlcnkgcGFyYW1ldGVycyBmb3IgYSBHRVQgcmVxdWVzdCB0byB0aGUgL2JhciBlbmRwb2ludD8nXG4gICAgJ1doYXQgYXJlIHRoZSByZXF1aXJlZCBwYXJhbWV0ZXJzIGluIHRoZSByZXF1ZXN0IGJvZHkgZm9yIGEgUE9TVCByZXF1ZXN0IHRvIHRoZSAvZm9vIGVuZHBvaW50PydcbkFsd2F5cyBnaXZlIHRoaXMgdG9vbCBhIHNwZWNpZmljIHF1ZXN0aW9uLmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/openapi/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js":
/*!***************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VECTOR_PREFIX: () => (/* binding */ VECTOR_PREFIX),\n/* harmony export */   VECTOR_ROUTER_PREFIX: () => (/* binding */ VECTOR_ROUTER_PREFIX)\n/* harmony export */ });\nconst VECTOR_PREFIX = `You are an agent designed to answer questions about sets of documents.\nYou have access to tools for interacting with the documents, and the inputs to the tools are questions.\nSometimes, you will be asked to provide sources for your questions, in which case you should use the appropriate tool to do so.\nIf the question does not seem relevant to any of the tools provided, just return \"I don't know\" as the answer.`;\nconst VECTOR_ROUTER_PREFIX = `You are an agent designed to answer questions.\nYou have access to tools for interacting with different sources, and the inputs to the tools are questions.\nYour main task is to decide which of the tools is relevant for answering question at hand.\nFor complex questions, you can break the question down into sub questions and use tools to answers the sub questions.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL3ZlY3RvcnN0b3JlL3Byb21wdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2FnZW50cy90b29sa2l0cy92ZWN0b3JzdG9yZS9wcm9tcHQuanM/ODE0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVkVDVE9SX1BSRUZJWCA9IGBZb3UgYXJlIGFuIGFnZW50IGRlc2lnbmVkIHRvIGFuc3dlciBxdWVzdGlvbnMgYWJvdXQgc2V0cyBvZiBkb2N1bWVudHMuXG5Zb3UgaGF2ZSBhY2Nlc3MgdG8gdG9vbHMgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGRvY3VtZW50cywgYW5kIHRoZSBpbnB1dHMgdG8gdGhlIHRvb2xzIGFyZSBxdWVzdGlvbnMuXG5Tb21ldGltZXMsIHlvdSB3aWxsIGJlIGFza2VkIHRvIHByb3ZpZGUgc291cmNlcyBmb3IgeW91ciBxdWVzdGlvbnMsIGluIHdoaWNoIGNhc2UgeW91IHNob3VsZCB1c2UgdGhlIGFwcHJvcHJpYXRlIHRvb2wgdG8gZG8gc28uXG5JZiB0aGUgcXVlc3Rpb24gZG9lcyBub3Qgc2VlbSByZWxldmFudCB0byBhbnkgb2YgdGhlIHRvb2xzIHByb3ZpZGVkLCBqdXN0IHJldHVybiBcIkkgZG9uJ3Qga25vd1wiIGFzIHRoZSBhbnN3ZXIuYDtcbmV4cG9ydCBjb25zdCBWRUNUT1JfUk9VVEVSX1BSRUZJWCA9IGBZb3UgYXJlIGFuIGFnZW50IGRlc2lnbmVkIHRvIGFuc3dlciBxdWVzdGlvbnMuXG5Zb3UgaGF2ZSBhY2Nlc3MgdG8gdG9vbHMgZm9yIGludGVyYWN0aW5nIHdpdGggZGlmZmVyZW50IHNvdXJjZXMsIGFuZCB0aGUgaW5wdXRzIHRvIHRoZSB0b29scyBhcmUgcXVlc3Rpb25zLlxuWW91ciBtYWluIHRhc2sgaXMgdG8gZGVjaWRlIHdoaWNoIG9mIHRoZSB0b29scyBpcyByZWxldmFudCBmb3IgYW5zd2VyaW5nIHF1ZXN0aW9uIGF0IGhhbmQuXG5Gb3IgY29tcGxleCBxdWVzdGlvbnMsIHlvdSBjYW4gYnJlYWsgdGhlIHF1ZXN0aW9uIGRvd24gaW50byBzdWIgcXVlc3Rpb25zIGFuZCB1c2UgdG9vbHMgdG8gYW5zd2VycyB0aGUgc3ViIHF1ZXN0aW9ucy5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js":
/*!********************************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStoreRouterToolkit: () => (/* binding */ VectorStoreRouterToolkit),\n/* harmony export */   VectorStoreToolkit: () => (/* binding */ VectorStoreToolkit),\n/* harmony export */   createVectorStoreAgent: () => (/* binding */ createVectorStoreAgent),\n/* harmony export */   createVectorStoreRouterAgent: () => (/* binding */ createVectorStoreRouterAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/agents/toolkits/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js\");\n/* harmony import */ var _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tools/vectorstore.js */ \"(rsc)/./node_modules/langchain/dist/tools/vectorstore.js\");\n/* harmony import */ var _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mrkl/index.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/index.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/toolkits/vectorstore/prompt.js\");\n/* harmony import */ var _mrkl_prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mrkl/prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/mrkl/prompt.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _executor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../executor.js */ \"(rsc)/./node_modules/langchain/dist/agents/executor.js\");\n\n\n\n\n\n\n\n/**\n * Class representing a toolkit for working with a single vector store. It\n * initializes the vector store QA tool based on the provided vector store\n * information and language model.\n * @example\n * ```typescript\n * const toolkit = new VectorStoreToolkit(\n *   {\n *     name: \"state_of_union_address\",\n *     description: \"the most recent state of the Union address\",\n *     vectorStore: new HNSWLib(),\n *   },\n *   new ChatOpenAI({ temperature: 0 }),\n * );\n * const result = await toolkit.invoke({\n *   input:\n *     \"What did biden say about Ketanji Brown Jackson in the state of the union address?\",\n * });\n * console.log(`Got output ${result.output}`);\n * ```\n */\nclass VectorStoreToolkit extends _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__.Toolkit {\n    constructor(vectorStoreInfo, llm) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const description = _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool.getDescription(vectorStoreInfo.name, vectorStoreInfo.description);\n        this.llm = llm;\n        this.tools = [\n            new _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool(vectorStoreInfo.name, description, {\n                vectorStore: vectorStoreInfo.vectorStore,\n                llm: this.llm,\n            }),\n        ];\n    }\n}\n/**\n * Class representing a toolkit for working with multiple vector stores.\n * It initializes multiple vector store QA tools based on the provided\n * vector store information and language model.\n */\nclass VectorStoreRouterToolkit extends _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__.Toolkit {\n    constructor(vectorStoreInfos, llm) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"vectorStoreInfos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llm = llm;\n        this.vectorStoreInfos = vectorStoreInfos;\n        this.tools = vectorStoreInfos.map((vectorStoreInfo) => {\n            const description = _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool.getDescription(vectorStoreInfo.name, vectorStoreInfo.description);\n            return new _tools_vectorstore_js__WEBPACK_IMPORTED_MODULE_1__.VectorStoreQATool(vectorStoreInfo.name, description, {\n                vectorStore: vectorStoreInfo.vectorStore,\n                llm: this.llm,\n            });\n        });\n    }\n}\n/** @deprecated Create a specific agent with a custom tool instead. */\nfunction createVectorStoreAgent(llm, toolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_3__.VECTOR_PREFIX, suffix = _mrkl_prompt_js__WEBPACK_IMPORTED_MODULE_4__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__.LLMChain({ prompt, llm });\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_6__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n/** @deprecated Create a specific agent with a custom tool instead. */\nfunction createVectorStoreRouterAgent(llm, toolkit, args) {\n    const { prefix = _prompt_js__WEBPACK_IMPORTED_MODULE_3__.VECTOR_ROUTER_PREFIX, suffix = _mrkl_prompt_js__WEBPACK_IMPORTED_MODULE_4__.SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_5__.LLMChain({ prompt, llm });\n    const agent = new _mrkl_index_js__WEBPACK_IMPORTED_MODULE_2__.ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return _executor_js__WEBPACK_IMPORTED_MODULE_6__.AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/vectorstore/vectorstore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/toolkits/zapier/zapier.js":
/*!**********************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/toolkits/zapier/zapier.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZapierToolKit: () => (/* binding */ ZapierToolKit)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/agents/toolkits/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js\");\n/* harmony import */ var _tools_zapier_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../tools/zapier.js */ \"(rsc)/./node_modules/langchain/dist/tools/zapier.js\");\n\n\n/**\n * Represents a toolkit for working with Zapier actions. It extends the\n * Toolkit class and provides functionality for managing Zapier tools.\n * @example\n * ```typescript\n * const toolkit = await ZapierToolKit.fromZapierNLAWrapper(\n *   new ZapierNLAWrapper(),\n * );\n * const result = await toolkit.invoke({\n *   input:\n *     \"Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier Slack channel.\",\n * });\n * ```\n */\nclass ZapierToolKit extends _langchain_community_agents_toolkits_base__WEBPACK_IMPORTED_MODULE_0__.Toolkit {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    /**\n     * Creates a ZapierToolKit instance based on a ZapierNLAWrapper instance.\n     * It retrieves the list of available actions from the ZapierNLAWrapper\n     * and creates a ZapierNLARunAction tool for each action. The created\n     * tools are added to the tools property of the ZapierToolKit instance.\n     * @param zapierNLAWrapper The ZapierNLAWrapper instance to create the ZapierToolKit from.\n     * @returns A Promise that resolves to a ZapierToolKit instance.\n     */\n    static async fromZapierNLAWrapper(zapierNLAWrapper) {\n        const toolkit = new ZapierToolKit();\n        const actions = await zapierNLAWrapper.listActions();\n        for (const action of actions) {\n            const tool = new _tools_zapier_js__WEBPACK_IMPORTED_MODULE_1__.ZapierNLARunAction(zapierNLAWrapper, action.id, action.description, action.params);\n            toolkit.tools.push(tool);\n        }\n        return toolkit;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3Rvb2xraXRzL3phcGllci96YXBpZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9FO0FBQ047QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sNEJBQTRCLDhFQUFPO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdFQUFrQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMvdG9vbGtpdHMvemFwaWVyL3phcGllci5qcz83ZTMxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvb2xraXQgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb21tdW5pdHkvYWdlbnRzL3Rvb2xraXRzL2Jhc2VcIjtcbmltcG9ydCB7IFphcGllck5MQVJ1bkFjdGlvbiB9IGZyb20gXCIuLi8uLi8uLi90b29scy96YXBpZXIuanNcIjtcbi8qKlxuICogUmVwcmVzZW50cyBhIHRvb2xraXQgZm9yIHdvcmtpbmcgd2l0aCBaYXBpZXIgYWN0aW9ucy4gSXQgZXh0ZW5kcyB0aGVcbiAqIFRvb2xraXQgY2xhc3MgYW5kIHByb3ZpZGVzIGZ1bmN0aW9uYWxpdHkgZm9yIG1hbmFnaW5nIFphcGllciB0b29scy5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBjb25zdCB0b29sa2l0ID0gYXdhaXQgWmFwaWVyVG9vbEtpdC5mcm9tWmFwaWVyTkxBV3JhcHBlcihcbiAqICAgbmV3IFphcGllck5MQVdyYXBwZXIoKSxcbiAqICk7XG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCB0b29sa2l0Lmludm9rZSh7XG4gKiAgIGlucHV0OlxuICogICAgIFwiU3VtbWFyaXplIHRoZSBsYXN0IGVtYWlsIEkgcmVjZWl2ZWQgcmVnYXJkaW5nIFNpbGljb24gVmFsbGV5IEJhbmsuIFNlbmQgdGhlIHN1bW1hcnkgdG8gdGhlICN0ZXN0LXphcGllciBTbGFjayBjaGFubmVsLlwiLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIFphcGllclRvb2xLaXQgZXh0ZW5kcyBUb29sa2l0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidG9vbHNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgWmFwaWVyVG9vbEtpdCBpbnN0YW5jZSBiYXNlZCBvbiBhIFphcGllck5MQVdyYXBwZXIgaW5zdGFuY2UuXG4gICAgICogSXQgcmV0cmlldmVzIHRoZSBsaXN0IG9mIGF2YWlsYWJsZSBhY3Rpb25zIGZyb20gdGhlIFphcGllck5MQVdyYXBwZXJcbiAgICAgKiBhbmQgY3JlYXRlcyBhIFphcGllck5MQVJ1bkFjdGlvbiB0b29sIGZvciBlYWNoIGFjdGlvbi4gVGhlIGNyZWF0ZWRcbiAgICAgKiB0b29scyBhcmUgYWRkZWQgdG8gdGhlIHRvb2xzIHByb3BlcnR5IG9mIHRoZSBaYXBpZXJUb29sS2l0IGluc3RhbmNlLlxuICAgICAqIEBwYXJhbSB6YXBpZXJOTEFXcmFwcGVyIFRoZSBaYXBpZXJOTEFXcmFwcGVyIGluc3RhbmNlIHRvIGNyZWF0ZSB0aGUgWmFwaWVyVG9vbEtpdCBmcm9tLlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGEgWmFwaWVyVG9vbEtpdCBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZnJvbVphcGllck5MQVdyYXBwZXIoemFwaWVyTkxBV3JhcHBlcikge1xuICAgICAgICBjb25zdCB0b29sa2l0ID0gbmV3IFphcGllclRvb2xLaXQoKTtcbiAgICAgICAgY29uc3QgYWN0aW9ucyA9IGF3YWl0IHphcGllck5MQVdyYXBwZXIubGlzdEFjdGlvbnMoKTtcbiAgICAgICAgZm9yIChjb25zdCBhY3Rpb24gb2YgYWN0aW9ucykge1xuICAgICAgICAgICAgY29uc3QgdG9vbCA9IG5ldyBaYXBpZXJOTEFSdW5BY3Rpb24oemFwaWVyTkxBV3JhcHBlciwgYWN0aW9uLmlkLCBhY3Rpb24uZGVzY3JpcHRpb24sIGFjdGlvbi5wYXJhbXMpO1xuICAgICAgICAgICAgdG9vbGtpdC50b29scy5wdXNoKHRvb2wpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b29sa2l0O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/toolkits/zapier/zapier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/langchain/dist/agents/types.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentActionOutputParser: () => (/* binding */ AgentActionOutputParser),\n/* harmony export */   AgentMultiActionOutputParser: () => (/* binding */ AgentMultiActionOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n\n/**\n * Abstract class representing an output parser specifically for agent\n * actions and finishes in LangChain. It extends the `BaseOutputParser`\n * class.\n */\nclass AgentActionOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n}\n/**\n * Abstract class representing an output parser specifically for agents\n * that return multiple actions.\n */\nclass AgentMultiActionOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0NBQXNDLDRFQUFnQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkNBQTJDLDRFQUFnQjtBQUNsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3R5cGVzLmpzP2U3OTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZU91dHB1dFBhcnNlciB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvb3V0cHV0X3BhcnNlcnNcIjtcbi8qKlxuICogQWJzdHJhY3QgY2xhc3MgcmVwcmVzZW50aW5nIGFuIG91dHB1dCBwYXJzZXIgc3BlY2lmaWNhbGx5IGZvciBhZ2VudFxuICogYWN0aW9ucyBhbmQgZmluaXNoZXMgaW4gTGFuZ0NoYWluLiBJdCBleHRlbmRzIHRoZSBgQmFzZU91dHB1dFBhcnNlcmBcbiAqIGNsYXNzLlxuICovXG5leHBvcnQgY2xhc3MgQWdlbnRBY3Rpb25PdXRwdXRQYXJzZXIgZXh0ZW5kcyBCYXNlT3V0cHV0UGFyc2VyIHtcbn1cbi8qKlxuICogQWJzdHJhY3QgY2xhc3MgcmVwcmVzZW50aW5nIGFuIG91dHB1dCBwYXJzZXIgc3BlY2lmaWNhbGx5IGZvciBhZ2VudHNcbiAqIHRoYXQgcmV0dXJuIG11bHRpcGxlIGFjdGlvbnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBZ2VudE11bHRpQWN0aW9uT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZU91dHB1dFBhcnNlciB7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/xml/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/xml/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XMLAgent: () => (/* binding */ XMLAgent),\n/* harmony export */   createXmlAgent: () => (/* binding */ createXmlAgent)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _agent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/langchain/dist/agents/agent.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/agents/xml/prompt.js\");\n/* harmony import */ var _output_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./output_parser.js */ \"(rsc)/./node_modules/langchain/dist/agents/xml/output_parser.js\");\n/* harmony import */ var _tools_render_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../tools/render.js */ \"(rsc)/./node_modules/langchain/dist/tools/render.js\");\n/* harmony import */ var _format_scratchpad_xml_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../format_scratchpad/xml.js */ \"(rsc)/./node_modules/langchain/dist/agents/format_scratchpad/xml.js\");\n\n\n\n\n\n\n\n\n/**\n * Class that represents an agent that uses XML tags.\n *\n * @deprecated Use the {@link https://api.js.langchain.com/functions/langchain_agents.createXmlAgent.html | createXmlAgent method instead}.\n */\nclass XMLAgent extends _agent_js__WEBPACK_IMPORTED_MODULE_3__.BaseSingleActionAgent {\n    static lc_name() {\n        return \"XMLAgent\";\n    }\n    _agentType() {\n        return \"xml\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"xml\"]\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new _output_parser_js__WEBPACK_IMPORTED_MODULE_5__.XMLAgentOutputParser()\n        });\n        this.tools = fields.tools;\n        this.llmChain = fields.llmChain;\n    }\n    get inputKeys() {\n        return [\"input\"];\n    }\n    static createPrompt() {\n        return _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.ChatPromptTemplate.fromMessages([\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.HumanMessagePromptTemplate.fromTemplate(_prompt_js__WEBPACK_IMPORTED_MODULE_4__.AGENT_INSTRUCTIONS),\n            _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.AIMessagePromptTemplate.fromTemplate(\"{intermediate_steps}\"),\n        ]);\n    }\n    /**\n     * Plans the next action or finish state of the agent based on the\n     * provided steps, inputs, and optional callback manager.\n     * @param steps The steps to consider in planning.\n     * @param inputs The inputs to consider in planning.\n     * @param callbackManager Optional CallbackManager to use in planning.\n     * @returns A Promise that resolves to an AgentAction or AgentFinish object representing the planned action or finish state.\n     */\n    async plan(steps, inputs, callbackManager) {\n        let log = \"\";\n        for (const { action, observation } of steps) {\n            log += `<tool>${action.tool}</tool><tool_input>${action.toolInput}</tool_input><observation>${observation}</observation>`;\n        }\n        let tools = \"\";\n        for (const tool of this.tools) {\n            tools += `${tool.name}: ${tool.description}\\n`;\n        }\n        const _inputs = {\n            intermediate_steps: log,\n            tools,\n            question: inputs.input,\n            stop: [\"</tool_input>\", \"</final_answer>\"],\n        };\n        const response = await this.llmChain.call(_inputs, callbackManager);\n        return this.outputParser.parse(response[this.llmChain.outputKey]);\n    }\n    /**\n     * Creates an XMLAgent from a BaseLanguageModel and a list of tools.\n     * @param llm The BaseLanguageModel to use.\n     * @param tools The tools to be used by the agent.\n     * @param args Optional arguments for creating the agent.\n     * @returns An instance of XMLAgent.\n     */\n    static fromLLMAndTools(llm, tools, args) {\n        const prompt = XMLAgent.createPrompt();\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new XMLAgent({\n            llmChain: chain,\n            tools,\n        });\n    }\n}\n/**\n * Create an agent that uses XML to format its logic.\n * @param params Params required to create the agent. Includes an LLM, tools, and prompt.\n * @returns A runnable sequence representing an agent. It takes as input all the same input\n *     variables as the prompt passed in does. It returns as output either an\n *     AgentAction or AgentFinish.\n *\n * @example\n * ```typescript\n * import { AgentExecutor, createXmlAgent } from \"langchain/agents\";\n * import { pull } from \"langchain/hub\";\n * import type { PromptTemplate } from \"@langchain/core/prompts\";\n *\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n *\n * // Define the tools the agent will have access to.\n * const tools = [...];\n *\n * // Get the prompt to use - you can modify this!\n * // If you want to see the prompt in full, you can at:\n * // https://smith.langchain.com/hub/hwchase17/xml-agent-convo\n * const prompt = await pull<PromptTemplate>(\"hwchase17/xml-agent-convo\");\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n * });\n *\n * const agent = await createXmlAgent({\n *   llm,\n *   tools,\n *   prompt,\n * });\n *\n * const agentExecutor = new AgentExecutor({\n *   agent,\n *   tools,\n * });\n *\n * const result = await agentExecutor.invoke({\n *   input: \"what is LangChain?\",\n * });\n *\n * // With chat history\n * const result2 = await agentExecutor.invoke({\n *   input: \"what's my name?\",\n *   // Notice that chat_history is a string, since this prompt is aimed at LLMs, not chat models\n *   chat_history: \"Human: Hi! My name is Cob\\nAI: Hello Cob! Nice to meet you\",\n * });\n * ```\n */\nasync function createXmlAgent({ llm, tools, prompt, streamRunnable, }) {\n    const missingVariables = [\"tools\", \"agent_scratchpad\"].filter((v) => !prompt.inputVariables.includes(v));\n    if (missingVariables.length > 0) {\n        throw new Error(`Provided prompt is missing required input variables: ${JSON.stringify(missingVariables)}`);\n    }\n    const partialedPrompt = await prompt.partial({\n        tools: (0,_tools_render_js__WEBPACK_IMPORTED_MODULE_6__.renderTextDescription)(tools),\n    });\n    // TODO: Add .bind to core runnable interface.\n    const llmWithStop = llm.bind({\n        stop: [\"</tool_input>\", \"</final_answer>\"],\n    });\n    const agent = _agent_js__WEBPACK_IMPORTED_MODULE_3__.AgentRunnableSequence.fromRunnables([\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough.assign({\n            agent_scratchpad: (input) => (0,_format_scratchpad_xml_js__WEBPACK_IMPORTED_MODULE_7__.formatXml)(input.steps),\n        }),\n        partialedPrompt,\n        llmWithStop,\n        new _output_parser_js__WEBPACK_IMPORTED_MODULE_5__.XMLAgentOutputParser(),\n    ], {\n        name: \"XMLAgent\",\n        streamRunnable,\n        singleAction: true,\n    });\n    return agent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/xml/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/xml/output_parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/langchain/dist/agents/xml/output_parser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XMLAgentOutputParser: () => (/* binding */ XMLAgentOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"(rsc)/./node_modules/langchain/dist/agents/types.js\");\n\n\n/**\n * @example\n * ```typescript\n * const prompt = ChatPromptTemplate.fromMessages([\n *   HumanMessagePromptTemplate.fromTemplate(AGENT_INSTRUCTIONS),\n *   new MessagesPlaceholder(\"agent_scratchpad\"),\n * ]);\n * const runnableAgent = RunnableSequence.from([\n *   ...rest of runnable\n *   prompt,\n *   new ChatAnthropic({ modelName: \"claude-2\", temperature: 0 }).bind({\n *     stop: [\"</tool_input>\", \"</final_answer>\"],\n *   }),\n *   new XMLAgentOutputParser(),\n * ]);\n * const result = await executor.invoke({\n *   input: \"What is the weather in Honolulu?\",\n *   tools: [],\n * });\n * ```\n */\nclass XMLAgentOutputParser extends _types_js__WEBPACK_IMPORTED_MODULE_1__.AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"xml\"]\n        });\n    }\n    static lc_name() {\n        return \"XMLAgentOutputParser\";\n    }\n    /**\n     * Parses the output text from the agent and returns an AgentAction or\n     * AgentFinish object.\n     * @param text The output text from the agent.\n     * @returns An AgentAction or AgentFinish object.\n     */\n    async parse(text) {\n        if (text.includes(\"</tool>\")) {\n            const [tool, toolInput] = text.split(\"</tool>\");\n            const _tool = tool.split(\"<tool>\")[1];\n            const _toolInput = toolInput.split(\"<tool_input>\")[1];\n            return { tool: _tool, toolInput: _toolInput, log: text };\n        }\n        else if (text.includes(\"<final_answer>\")) {\n            const [, answer] = text.split(\"<final_answer>\");\n            return { returnValues: { output: answer }, log: text };\n        }\n        else {\n            throw new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse LLM output: ${text}`);\n        }\n    }\n    getFormatInstructions() {\n        throw new Error(\"getFormatInstructions not implemented inside OpenAIFunctionsAgentOutputParser.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3htbC9vdXRwdXRfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RTtBQUNqQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1Q0FBdUM7QUFDaEU7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sbUNBQW1DLDhEQUF1QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdCQUFnQixnQkFBZ0I7QUFDckQ7QUFDQTtBQUNBLHNCQUFzQixpRkFBcUIsZ0NBQWdDLEtBQUs7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMveG1sL291dHB1dF9wYXJzZXIuanM/MDg4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPdXRwdXRQYXJzZXJFeGNlcHRpb24gfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG5pbXBvcnQgeyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB9IGZyb20gXCIuLi90eXBlcy5qc1wiO1xuLyoqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgcHJvbXB0ID0gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhbXG4gKiAgIEh1bWFuTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShBR0VOVF9JTlNUUlVDVElPTlMpLFxuICogICBuZXcgTWVzc2FnZXNQbGFjZWhvbGRlcihcImFnZW50X3NjcmF0Y2hwYWRcIiksXG4gKiBdKTtcbiAqIGNvbnN0IHJ1bm5hYmxlQWdlbnQgPSBSdW5uYWJsZVNlcXVlbmNlLmZyb20oW1xuICogICAuLi5yZXN0IG9mIHJ1bm5hYmxlXG4gKiAgIHByb21wdCxcbiAqICAgbmV3IENoYXRBbnRocm9waWMoeyBtb2RlbE5hbWU6IFwiY2xhdWRlLTJcIiwgdGVtcGVyYXR1cmU6IDAgfSkuYmluZCh7XG4gKiAgICAgc3RvcDogW1wiPC90b29sX2lucHV0PlwiLCBcIjwvZmluYWxfYW5zd2VyPlwiXSxcbiAqICAgfSksXG4gKiAgIG5ldyBYTUxBZ2VudE91dHB1dFBhcnNlcigpLFxuICogXSk7XG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBleGVjdXRvci5pbnZva2Uoe1xuICogICBpbnB1dDogXCJXaGF0IGlzIHRoZSB3ZWF0aGVyIGluIEhvbm9sdWx1P1wiLFxuICogICB0b29sczogW10sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgWE1MQWdlbnRPdXRwdXRQYXJzZXIgZXh0ZW5kcyBBZ2VudEFjdGlvbk91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwiYWdlbnRzXCIsIFwieG1sXCJdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiWE1MQWdlbnRPdXRwdXRQYXJzZXJcIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHRoZSBvdXRwdXQgdGV4dCBmcm9tIHRoZSBhZ2VudCBhbmQgcmV0dXJucyBhbiBBZ2VudEFjdGlvbiBvclxuICAgICAqIEFnZW50RmluaXNoIG9iamVjdC5cbiAgICAgKiBAcGFyYW0gdGV4dCBUaGUgb3V0cHV0IHRleHQgZnJvbSB0aGUgYWdlbnQuXG4gICAgICogQHJldHVybnMgQW4gQWdlbnRBY3Rpb24gb3IgQWdlbnRGaW5pc2ggb2JqZWN0LlxuICAgICAqL1xuICAgIGFzeW5jIHBhcnNlKHRleHQpIHtcbiAgICAgICAgaWYgKHRleHQuaW5jbHVkZXMoXCI8L3Rvb2w+XCIpKSB7XG4gICAgICAgICAgICBjb25zdCBbdG9vbCwgdG9vbElucHV0XSA9IHRleHQuc3BsaXQoXCI8L3Rvb2w+XCIpO1xuICAgICAgICAgICAgY29uc3QgX3Rvb2wgPSB0b29sLnNwbGl0KFwiPHRvb2w+XCIpWzFdO1xuICAgICAgICAgICAgY29uc3QgX3Rvb2xJbnB1dCA9IHRvb2xJbnB1dC5zcGxpdChcIjx0b29sX2lucHV0PlwiKVsxXTtcbiAgICAgICAgICAgIHJldHVybiB7IHRvb2w6IF90b29sLCB0b29sSW5wdXQ6IF90b29sSW5wdXQsIGxvZzogdGV4dCB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRleHQuaW5jbHVkZXMoXCI8ZmluYWxfYW5zd2VyPlwiKSkge1xuICAgICAgICAgICAgY29uc3QgWywgYW5zd2VyXSA9IHRleHQuc3BsaXQoXCI8ZmluYWxfYW5zd2VyPlwiKTtcbiAgICAgICAgICAgIHJldHVybiB7IHJldHVyblZhbHVlczogeyBvdXRwdXQ6IGFuc3dlciB9LCBsb2c6IHRleHQgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBPdXRwdXRQYXJzZXJFeGNlcHRpb24oYENvdWxkIG5vdCBwYXJzZSBMTE0gb3V0cHV0OiAke3RleHR9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZXRGb3JtYXRJbnN0cnVjdGlvbnMgbm90IGltcGxlbWVudGVkIGluc2lkZSBPcGVuQUlGdW5jdGlvbnNBZ2VudE91dHB1dFBhcnNlci5cIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/xml/output_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/agents/xml/prompt.js":
/*!**********************************************************!*\
  !*** ./node_modules/langchain/dist/agents/xml/prompt.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AGENT_INSTRUCTIONS: () => (/* binding */ AGENT_INSTRUCTIONS)\n/* harmony export */ });\nconst AGENT_INSTRUCTIONS = `You are a helpful assistant. Help the user answer any questions.\n\nYou have access to the following tools:\n\n{tools}\n\nIn order to use a tool, you can use <tool></tool> and <tool_input></tool_input> tags.\nYou will then get back a response in the form <observation></observation>\nFor example, if you have a tool called 'search' that could run a google search, in order to search for the weather in SF you would respond:\n\n<tool>search</tool><tool_input>weather in SF</tool_input>\n<observation>64 degrees</observation>\n\nWhen you are done, respond with a final answer between <final_answer></final_answer>. For example:\n\n<final_answer>The weather in SF is 64 degrees</final_answer>\n\nBegin!\n\nQuestion: {question}`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvYWdlbnRzL3htbC9wcm9tcHQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPOztBQUVQOztBQUVBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsV0FBVyxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9hZ2VudHMveG1sL3Byb21wdC5qcz82MGVkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBR0VOVF9JTlNUUlVDVElPTlMgPSBgWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50LiBIZWxwIHRoZSB1c2VyIGFuc3dlciBhbnkgcXVlc3Rpb25zLlxuXG5Zb3UgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZvbGxvd2luZyB0b29sczpcblxue3Rvb2xzfVxuXG5JbiBvcmRlciB0byB1c2UgYSB0b29sLCB5b3UgY2FuIHVzZSA8dG9vbD48L3Rvb2w+IGFuZCA8dG9vbF9pbnB1dD48L3Rvb2xfaW5wdXQ+IHRhZ3MuXG5Zb3Ugd2lsbCB0aGVuIGdldCBiYWNrIGEgcmVzcG9uc2UgaW4gdGhlIGZvcm0gPG9ic2VydmF0aW9uPjwvb2JzZXJ2YXRpb24+XG5Gb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgYSB0b29sIGNhbGxlZCAnc2VhcmNoJyB0aGF0IGNvdWxkIHJ1biBhIGdvb2dsZSBzZWFyY2gsIGluIG9yZGVyIHRvIHNlYXJjaCBmb3IgdGhlIHdlYXRoZXIgaW4gU0YgeW91IHdvdWxkIHJlc3BvbmQ6XG5cbjx0b29sPnNlYXJjaDwvdG9vbD48dG9vbF9pbnB1dD53ZWF0aGVyIGluIFNGPC90b29sX2lucHV0PlxuPG9ic2VydmF0aW9uPjY0IGRlZ3JlZXM8L29ic2VydmF0aW9uPlxuXG5XaGVuIHlvdSBhcmUgZG9uZSwgcmVzcG9uZCB3aXRoIGEgZmluYWwgYW5zd2VyIGJldHdlZW4gPGZpbmFsX2Fuc3dlcj48L2ZpbmFsX2Fuc3dlcj4uIEZvciBleGFtcGxlOlxuXG48ZmluYWxfYW5zd2VyPlRoZSB3ZWF0aGVyIGluIFNGIGlzIDY0IGRlZ3JlZXM8L2ZpbmFsX2Fuc3dlcj5cblxuQmVnaW4hXG5cblF1ZXN0aW9uOiB7cXVlc3Rpb259YDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/agents/xml/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/api/api_chain.js":
/*!*************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/api/api_chain.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIChain: () => (/* binding */ APIChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base.js */ \"(rsc)/./node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompts.js */ \"(rsc)/./node_modules/langchain/dist/chains/api/prompts.js\");\n\n\n\n/**\n * Class that extends BaseChain and represents a chain specifically\n * designed for making API requests and processing API responses.\n */\nclass APIChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"apiAnswerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiRequestChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiDocs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        this.apiRequestChain = fields.apiRequestChain;\n        this.apiAnswerChain = fields.apiAnswerChain;\n        this.apiDocs = fields.apiDocs;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.headers = fields.headers ?? this.headers;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const question = values[this.inputKey];\n        const api_url = await this.apiRequestChain.predict({ question, api_docs: this.apiDocs }, runManager?.getChild(\"request\"));\n        const res = await fetch(api_url, { headers: this.headers });\n        const api_response = await res.text();\n        const answer = await this.apiAnswerChain.predict({ question, api_docs: this.apiDocs, api_url, api_response }, runManager?.getChild(\"response\"));\n        return { [this.outputKey]: answer };\n    }\n    _chainType() {\n        return \"api_chain\";\n    }\n    static async deserialize(data) {\n        const { api_request_chain, api_answer_chain, api_docs } = data;\n        if (!api_request_chain) {\n            throw new Error(\"LLMChain must have api_request_chain\");\n        }\n        if (!api_answer_chain) {\n            throw new Error(\"LLMChain must have api_answer_chain\");\n        }\n        if (!api_docs) {\n            throw new Error(\"LLMChain must have api_docs\");\n        }\n        return new APIChain({\n            apiAnswerChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain.deserialize(api_answer_chain),\n            apiRequestChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain.deserialize(api_request_chain),\n            apiDocs: api_docs,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            api_answer_chain: this.apiAnswerChain.serialize(),\n            api_request_chain: this.apiRequestChain.serialize(),\n            api_docs: this.apiDocs,\n        };\n    }\n    /**\n     * Static method to create a new APIChain from a BaseLanguageModel and API\n     * documentation.\n     * @param llm BaseLanguageModel instance.\n     * @param apiDocs API documentation.\n     * @param options Optional configuration options for the APIChain.\n     * @returns New APIChain instance.\n     */\n    static fromLLMAndAPIDocs(llm, apiDocs, options = {}) {\n        const { apiUrlPrompt = _prompts_js__WEBPACK_IMPORTED_MODULE_2__.API_URL_PROMPT_TEMPLATE, apiResponsePrompt = _prompts_js__WEBPACK_IMPORTED_MODULE_2__.API_RESPONSE_PROMPT_TEMPLATE, } = options;\n        const apiRequestChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ prompt: apiUrlPrompt, llm });\n        const apiAnswerChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ prompt: apiResponsePrompt, llm });\n        return new this({\n            apiAnswerChain,\n            apiRequestChain,\n            apiDocs,\n            ...options,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL2FwaS9hcGlfY2hhaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1QztBQUNJO0FBQzJDO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ08sdUJBQXVCLCtDQUFTO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxrQ0FBa0M7QUFDL0YsMkNBQTJDLHVCQUF1QjtBQUNsRTtBQUNBLDJEQUEyRCx5REFBeUQ7QUFDcEgsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0RBQWdEO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG1EQUFRO0FBQzFDLG1DQUFtQyxtREFBUTtBQUMzQztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELGdCQUFnQixlQUFlLGdFQUF1QixzQkFBc0IscUVBQTRCLElBQUk7QUFDNUcsb0NBQW9DLG1EQUFRLEdBQUcsMkJBQTJCO0FBQzFFLG1DQUFtQyxtREFBUSxHQUFHLGdDQUFnQztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2NoYWlucy9hcGkvYXBpX2NoYWluLmpzPzUwYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUNoYWluIH0gZnJvbSBcIi4uL2Jhc2UuanNcIjtcbmltcG9ydCB7IExMTUNoYWluIH0gZnJvbSBcIi4uL2xsbV9jaGFpbi5qc1wiO1xuaW1wb3J0IHsgQVBJX1VSTF9QUk9NUFRfVEVNUExBVEUsIEFQSV9SRVNQT05TRV9QUk9NUFRfVEVNUExBVEUsIH0gZnJvbSBcIi4vcHJvbXB0cy5qc1wiO1xuLyoqXG4gKiBDbGFzcyB0aGF0IGV4dGVuZHMgQmFzZUNoYWluIGFuZCByZXByZXNlbnRzIGEgY2hhaW4gc3BlY2lmaWNhbGx5XG4gKiBkZXNpZ25lZCBmb3IgbWFraW5nIEFQSSByZXF1ZXN0cyBhbmQgcHJvY2Vzc2luZyBBUEkgcmVzcG9uc2VzLlxuICovXG5leHBvcnQgY2xhc3MgQVBJQ2hhaW4gZXh0ZW5kcyBCYXNlQ2hhaW4ge1xuICAgIGdldCBpbnB1dEtleXMoKSB7XG4gICAgICAgIHJldHVybiBbdGhpcy5pbnB1dEtleV07XG4gICAgfVxuICAgIGdldCBvdXRwdXRLZXlzKCkge1xuICAgICAgICByZXR1cm4gW3RoaXMub3V0cHV0S2V5XTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFwaUFuc3dlckNoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFwaVJlcXVlc3RDaGFpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJhcGlEb2NzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhlYWRlcnNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHt9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnB1dEtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJxdWVzdGlvblwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvdXRwdXRLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwib3V0cHV0XCJcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYXBpUmVxdWVzdENoYWluID0gZmllbGRzLmFwaVJlcXVlc3RDaGFpbjtcbiAgICAgICAgdGhpcy5hcGlBbnN3ZXJDaGFpbiA9IGZpZWxkcy5hcGlBbnN3ZXJDaGFpbjtcbiAgICAgICAgdGhpcy5hcGlEb2NzID0gZmllbGRzLmFwaURvY3M7XG4gICAgICAgIHRoaXMuaW5wdXRLZXkgPSBmaWVsZHMuaW5wdXRLZXkgPz8gdGhpcy5pbnB1dEtleTtcbiAgICAgICAgdGhpcy5vdXRwdXRLZXkgPSBmaWVsZHMub3V0cHV0S2V5ID8/IHRoaXMub3V0cHV0S2V5O1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBmaWVsZHMuaGVhZGVycyA/PyB0aGlzLmhlYWRlcnM7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwodmFsdWVzLCBydW5NYW5hZ2VyKSB7XG4gICAgICAgIGNvbnN0IHF1ZXN0aW9uID0gdmFsdWVzW3RoaXMuaW5wdXRLZXldO1xuICAgICAgICBjb25zdCBhcGlfdXJsID0gYXdhaXQgdGhpcy5hcGlSZXF1ZXN0Q2hhaW4ucHJlZGljdCh7IHF1ZXN0aW9uLCBhcGlfZG9jczogdGhpcy5hcGlEb2NzIH0sIHJ1bk1hbmFnZXI/LmdldENoaWxkKFwicmVxdWVzdFwiKSk7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGFwaV91cmwsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICAgICAgICBjb25zdCBhcGlfcmVzcG9uc2UgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICBjb25zdCBhbnN3ZXIgPSBhd2FpdCB0aGlzLmFwaUFuc3dlckNoYWluLnByZWRpY3QoeyBxdWVzdGlvbiwgYXBpX2RvY3M6IHRoaXMuYXBpRG9jcywgYXBpX3VybCwgYXBpX3Jlc3BvbnNlIH0sIHJ1bk1hbmFnZXI/LmdldENoaWxkKFwicmVzcG9uc2VcIikpO1xuICAgICAgICByZXR1cm4geyBbdGhpcy5vdXRwdXRLZXldOiBhbnN3ZXIgfTtcbiAgICB9XG4gICAgX2NoYWluVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiYXBpX2NoYWluXCI7XG4gICAgfVxuICAgIHN0YXRpYyBhc3luYyBkZXNlcmlhbGl6ZShkYXRhKSB7XG4gICAgICAgIGNvbnN0IHsgYXBpX3JlcXVlc3RfY2hhaW4sIGFwaV9hbnN3ZXJfY2hhaW4sIGFwaV9kb2NzIH0gPSBkYXRhO1xuICAgICAgICBpZiAoIWFwaV9yZXF1ZXN0X2NoYWluKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgYXBpX3JlcXVlc3RfY2hhaW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhcGlfYW5zd2VyX2NoYWluKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgYXBpX2Fuc3dlcl9jaGFpblwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFwaV9kb2NzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgYXBpX2RvY3NcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBBUElDaGFpbih7XG4gICAgICAgICAgICBhcGlBbnN3ZXJDaGFpbjogYXdhaXQgTExNQ2hhaW4uZGVzZXJpYWxpemUoYXBpX2Fuc3dlcl9jaGFpbiksXG4gICAgICAgICAgICBhcGlSZXF1ZXN0Q2hhaW46IGF3YWl0IExMTUNoYWluLmRlc2VyaWFsaXplKGFwaV9yZXF1ZXN0X2NoYWluKSxcbiAgICAgICAgICAgIGFwaURvY3M6IGFwaV9kb2NzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgX3R5cGU6IHRoaXMuX2NoYWluVHlwZSgpLFxuICAgICAgICAgICAgYXBpX2Fuc3dlcl9jaGFpbjogdGhpcy5hcGlBbnN3ZXJDaGFpbi5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgIGFwaV9yZXF1ZXN0X2NoYWluOiB0aGlzLmFwaVJlcXVlc3RDaGFpbi5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgIGFwaV9kb2NzOiB0aGlzLmFwaURvY3MsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QgdG8gY3JlYXRlIGEgbmV3IEFQSUNoYWluIGZyb20gYSBCYXNlTGFuZ3VhZ2VNb2RlbCBhbmQgQVBJXG4gICAgICogZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAcGFyYW0gbGxtIEJhc2VMYW5ndWFnZU1vZGVsIGluc3RhbmNlLlxuICAgICAqIEBwYXJhbSBhcGlEb2NzIEFQSSBkb2N1bWVudGF0aW9uLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIEFQSUNoYWluLlxuICAgICAqIEByZXR1cm5zIE5ldyBBUElDaGFpbiBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUxMTUFuZEFQSURvY3MobGxtLCBhcGlEb2NzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgeyBhcGlVcmxQcm9tcHQgPSBBUElfVVJMX1BST01QVF9URU1QTEFURSwgYXBpUmVzcG9uc2VQcm9tcHQgPSBBUElfUkVTUE9OU0VfUFJPTVBUX1RFTVBMQVRFLCB9ID0gb3B0aW9ucztcbiAgICAgICAgY29uc3QgYXBpUmVxdWVzdENoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0OiBhcGlVcmxQcm9tcHQsIGxsbSB9KTtcbiAgICAgICAgY29uc3QgYXBpQW5zd2VyQ2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBwcm9tcHQ6IGFwaVJlc3BvbnNlUHJvbXB0LCBsbG0gfSk7XG4gICAgICAgIHJldHVybiBuZXcgdGhpcyh7XG4gICAgICAgICAgICBhcGlBbnN3ZXJDaGFpbixcbiAgICAgICAgICAgIGFwaVJlcXVlc3RDaGFpbixcbiAgICAgICAgICAgIGFwaURvY3MsXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/api/api_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/api/prompts.js":
/*!***********************************************************!*\
  !*** ./node_modules/langchain/dist/chains/api/prompts.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_RESPONSE_PROMPT_TEMPLATE: () => (/* binding */ API_RESPONSE_PROMPT_TEMPLATE),\n/* harmony export */   API_RESPONSE_RAW_PROMPT_TEMPLATE: () => (/* binding */ API_RESPONSE_RAW_PROMPT_TEMPLATE),\n/* harmony export */   API_URL_PROMPT_TEMPLATE: () => (/* binding */ API_URL_PROMPT_TEMPLATE),\n/* harmony export */   API_URL_RAW_PROMPT_TEMPLATE: () => (/* binding */ API_URL_RAW_PROMPT_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* eslint-disable spaced-comment */\n\nconst API_URL_RAW_PROMPT_TEMPLATE = `You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate the full API url to call for answering the user question.\nYou should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\nAPI url:`;\nconst API_URL_PROMPT_TEMPLATE = /* #__PURE__ */ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\"],\n    template: API_URL_RAW_PROMPT_TEMPLATE,\n});\nconst API_RESPONSE_RAW_PROMPT_TEMPLATE = `${API_URL_RAW_PROMPT_TEMPLATE} {api_url}\n\nHere is the response from the API:\n\n{api_response}\n\nSummarize this response to answer the original question.\n\nSummary:`;\nconst API_RESPONSE_PROMPT_TEMPLATE = /* #__PURE__ */ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\", \"api_url\", \"api_response\"],\n    template: API_RESPONSE_RAW_PROMPT_TEMPLATE,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL2FwaS9wcm9tcHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDeUQ7QUFDbEQ7QUFDUCxDQUFDO0FBQ0Q7QUFDQTs7QUFFQSxVQUFVO0FBQ1Y7QUFDTyxvREFBb0QsbUVBQWM7QUFDekU7QUFDQTtBQUNBLENBQUM7QUFDTSw0Q0FBNEMsOEJBQThCOztBQUVqRjs7QUFFQSxDQUFDOztBQUVEOztBQUVBO0FBQ08seURBQXlELG1FQUFjO0FBQzlFO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvYXBpL3Byb21wdHMuanM/MDQ1MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBzcGFjZWQtY29tbWVudCAqL1xuaW1wb3J0IHsgUHJvbXB0VGVtcGxhdGUgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Byb21wdHNcIjtcbmV4cG9ydCBjb25zdCBBUElfVVJMX1JBV19QUk9NUFRfVEVNUExBVEUgPSBgWW91IGFyZSBnaXZlbiB0aGUgYmVsb3cgQVBJIERvY3VtZW50YXRpb246XG57YXBpX2RvY3N9XG5Vc2luZyB0aGlzIGRvY3VtZW50YXRpb24sIGdlbmVyYXRlIHRoZSBmdWxsIEFQSSB1cmwgdG8gY2FsbCBmb3IgYW5zd2VyaW5nIHRoZSB1c2VyIHF1ZXN0aW9uLlxuWW91IHNob3VsZCBidWlsZCB0aGUgQVBJIHVybCBpbiBvcmRlciB0byBnZXQgYSByZXNwb25zZSB0aGF0IGlzIGFzIHNob3J0IGFzIHBvc3NpYmxlLCB3aGlsZSBzdGlsbCBnZXR0aW5nIHRoZSBuZWNlc3NhcnkgaW5mb3JtYXRpb24gdG8gYW5zd2VyIHRoZSBxdWVzdGlvbi4gUGF5IGF0dGVudGlvbiB0byBkZWxpYmVyYXRlbHkgZXhjbHVkZSBhbnkgdW5uZWNlc3NhcnkgcGllY2VzIG9mIGRhdGEgaW4gdGhlIEFQSSBjYWxsLlxuXG5RdWVzdGlvbjp7cXVlc3Rpb259XG5BUEkgdXJsOmA7XG5leHBvcnQgY29uc3QgQVBJX1VSTF9QUk9NUFRfVEVNUExBVEUgPSAvKiAjX19QVVJFX18gKi8gbmV3IFByb21wdFRlbXBsYXRlKHtcbiAgICBpbnB1dFZhcmlhYmxlczogW1wiYXBpX2RvY3NcIiwgXCJxdWVzdGlvblwiXSxcbiAgICB0ZW1wbGF0ZTogQVBJX1VSTF9SQVdfUFJPTVBUX1RFTVBMQVRFLFxufSk7XG5leHBvcnQgY29uc3QgQVBJX1JFU1BPTlNFX1JBV19QUk9NUFRfVEVNUExBVEUgPSBgJHtBUElfVVJMX1JBV19QUk9NUFRfVEVNUExBVEV9IHthcGlfdXJsfVxuXG5IZXJlIGlzIHRoZSByZXNwb25zZSBmcm9tIHRoZSBBUEk6XG5cbnthcGlfcmVzcG9uc2V9XG5cblN1bW1hcml6ZSB0aGlzIHJlc3BvbnNlIHRvIGFuc3dlciB0aGUgb3JpZ2luYWwgcXVlc3Rpb24uXG5cblN1bW1hcnk6YDtcbmV4cG9ydCBjb25zdCBBUElfUkVTUE9OU0VfUFJPTVBUX1RFTVBMQVRFID0gLyogI19fUFVSRV9fICovIG5ldyBQcm9tcHRUZW1wbGF0ZSh7XG4gICAgaW5wdXRWYXJpYWJsZXM6IFtcImFwaV9kb2NzXCIsIFwicXVlc3Rpb25cIiwgXCJhcGlfdXJsXCIsIFwiYXBpX3Jlc3BvbnNlXCJdLFxuICAgIHRlbXBsYXRlOiBBUElfUkVTUE9OU0VfUkFXX1BST01QVF9URU1QTEFURSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/api/prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/base.js":
/*!****************************************************!*\
  !*** ./node_modules/langchain/dist/chains/base.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChain: () => (/* binding */ BaseChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_outputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/outputs */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/outputs.js\");\n/* harmony import */ var _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/callbacks/manager */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/callbacks/manager.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/language_models/base.js\");\n\n\n\n\n/**\n * Base interface that all chains must implement.\n */\nclass BaseChain extends _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_3__.BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"chains\", this._chainType()];\n    }\n    constructor(fields, \n    /** @deprecated */\n    verbose, \n    /** @deprecated */\n    callbacks) {\n        if (arguments.length === 1 &&\n            typeof fields === \"object\" &&\n            !(\"saveContext\" in fields)) {\n            // fields is not a BaseMemory\n            const { memory, callbackManager, ...rest } = fields;\n            super({ ...rest, callbacks: callbackManager ?? rest.callbacks });\n            this.memory = memory;\n        }\n        else {\n            // fields is a BaseMemory\n            super({ verbose, callbacks });\n            this.memory = fields;\n        }\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = { ...values };\n        if (\"signal\" in valuesForMemory) {\n            delete valuesForMemory.signal;\n        }\n        if (\"timeout\" in valuesForMemory) {\n            delete valuesForMemory.timeout;\n        }\n        return valuesForMemory;\n    }\n    /**\n     * Invoke the chain with the provided input and returns the output.\n     * @param input Input values for the chain run.\n     * @param config Optional configuration for the Runnable.\n     * @returns Promise that resolves with the output of the chain run.\n     */\n    async invoke(input, options) {\n        const config = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(options);\n        const fullValues = await this._formatValues(input);\n        const callbackManager_ = await _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__.CallbackManager.configure(config?.callbacks, this.callbacks, config?.tags, this.tags, config?.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), fullValues, undefined, undefined, undefined, undefined, config?.runName);\n        let outputValues;\n        try {\n            outputValues = await (fullValues.signal\n                ? Promise.race([\n                    this._call(fullValues, runManager, config),\n                    new Promise((_, reject) => {\n                        fullValues.signal?.addEventListener(\"abort\", () => {\n                            reject(new Error(\"AbortError\"));\n                        });\n                    }),\n                ])\n                : this._call(fullValues, runManager, config));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        if (!(this.memory == null)) {\n            await this.memory.saveContext(this._selectMemoryInputs(input), outputValues);\n        }\n        await runManager?.handleChainEnd(outputValues);\n        // add the runManager's currentRunId to the outputValues\n        Object.defineProperty(outputValues, _langchain_core_outputs__WEBPACK_IMPORTED_MODULE_0__.RUN_KEY, {\n            value: runManager ? { runId: runManager?.runId } : undefined,\n            configurable: true,\n        });\n        return outputValues;\n    }\n    _validateOutputs(outputs) {\n        const missingKeys = this.outputKeys.filter((k) => !(k in outputs));\n        if (missingKeys.length) {\n            throw new Error(`Missing output keys: ${missingKeys.join(\", \")} from chain ${this._chainType()}`);\n        }\n    }\n    async prepOutputs(inputs, outputs, returnOnlyOutputs = false) {\n        this._validateOutputs(outputs);\n        if (this.memory) {\n            await this.memory.saveContext(inputs, outputs);\n        }\n        if (returnOnlyOutputs) {\n            return outputs;\n        }\n        return { ...inputs, ...outputs };\n    }\n    /**\n     * Return a json-like object representing this chain.\n     */\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /** @deprecated Use .invoke() instead. Will be removed in 0.2.0. */\n    async run(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, config) {\n        const inputKeys = this.inputKeys.filter((k) => !this.memory?.memoryKeys.includes(k) ?? true);\n        const isKeylessInput = inputKeys.length <= 1;\n        if (!isKeylessInput) {\n            throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const values = inputKeys.length ? { [inputKeys[0]]: input } : {};\n        const returnValues = await this.call(values, config);\n        const keys = Object.keys(returnValues);\n        if (keys.length === 1) {\n            return returnValues[keys[0]];\n        }\n        throw new Error(\"return values have multiple keys, `run` only supported when one key currently\");\n    }\n    async _formatValues(values) {\n        const fullValues = { ...values };\n        if (fullValues.timeout && !fullValues.signal) {\n            fullValues.signal = AbortSignal.timeout(fullValues.timeout);\n            delete fullValues.timeout;\n        }\n        if (!(this.memory == null)) {\n            const newValues = await this.memory.loadMemoryVariables(this._selectMemoryInputs(values));\n            for (const [key, value] of Object.entries(newValues)) {\n                fullValues[key] = value;\n            }\n        }\n        return fullValues;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    async call(values, config, \n    /** @deprecated */\n    tags) {\n        const parsedConfig = { tags, ...(0,_langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__.parseCallbackConfigArg)(config) };\n        return this.invoke(values, parsedConfig);\n    }\n    /**\n     * @deprecated Use .batch() instead. Will be removed in 0.2.0.\n     *\n     * Call the chain on all inputs in the list\n     */\n    async apply(inputs, config) {\n        return Promise.all(inputs.map(async (i, idx) => this.call(i, config?.[idx])));\n    }\n    /**\n     * Load a chain from a json-like object describing it.\n     */\n    static async deserialize(data, values = {}) {\n        switch (data._type) {\n            case \"llm_chain\": {\n                const { LLMChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\"));\n                return LLMChain.deserialize(data);\n            }\n            case \"sequential_chain\": {\n                const { SequentialChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain\").then(__webpack_require__.bind(__webpack_require__, /*! ./sequential_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/sequential_chain.js\"));\n                return SequentialChain.deserialize(data);\n            }\n            case \"simple_sequential_chain\": {\n                const { SimpleSequentialChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain\").then(__webpack_require__.bind(__webpack_require__, /*! ./sequential_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/sequential_chain.js\"));\n                return SimpleSequentialChain.deserialize(data);\n            }\n            case \"stuff_documents_chain\": {\n                const { StuffDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return StuffDocumentsChain.deserialize(data);\n            }\n            case \"map_reduce_documents_chain\": {\n                const { MapReduceDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return MapReduceDocumentsChain.deserialize(data);\n            }\n            case \"refine_documents_chain\": {\n                const { RefineDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return RefineDocumentsChain.deserialize(data);\n            }\n            case \"vector_db_qa\": {\n                const { VectorDBQAChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./vector_db_qa.js */ \"(rsc)/./node_modules/langchain/dist/chains/vector_db_qa.js\"));\n                return VectorDBQAChain.deserialize(data, values);\n            }\n            case \"api_chain\": {\n                const { APIChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain\").then(__webpack_require__.bind(__webpack_require__, /*! ./api/api_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/api/api_chain.js\"));\n                return APIChain.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/combine_docs_chain.js":
/*!******************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/combine_docs_chain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapReduceDocumentsChain: () => (/* binding */ MapReduceDocumentsChain),\n/* harmony export */   RefineDocumentsChain: () => (/* binding */ RefineDocumentsChain),\n/* harmony export */   StuffDocumentsChain: () => (/* binding */ StuffDocumentsChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n\n\n\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nclass StuffDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"StuffDocumentsChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey, ...this.llmChain.inputKeys].filter((key) => key !== this.documentVariableName);\n    }\n    get outputKeys() {\n        return this.llmChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        this.llmChain = fields.llmChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n    }\n    /** @ignore */\n    _prepInputs(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const texts = docs.map(({ pageContent }) => pageContent);\n        const text = texts.join(\"\\n\\n\");\n        return {\n            ...rest,\n            [this.documentVariableName]: text,\n        };\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const result = await this.llmChain.call(this._prepInputs(values), runManager?.getChild(\"combine_documents\"));\n        return result;\n    }\n    _chainType() {\n        return \"stuff_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        return new StuffDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(data.llm_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by mapping a chain over them, then combining results.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nclass MapReduceDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"MapReduceDocumentsChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey, ...this.combineDocumentChain.inputKeys];\n    }\n    get outputKeys() {\n        return this.combineDocumentChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 10\n        });\n        Object.defineProperty(this, \"ensureMapStep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"combineDocumentChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmChain = fields.llmChain;\n        this.combineDocumentChain = fields.combineDocumentChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.ensureMapStep = fields.ensureMapStep ?? this.ensureMapStep;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.maxTokens = fields.maxTokens ?? this.maxTokens;\n        this.maxIterations = fields.maxIterations ?? this.maxIterations;\n        this.returnIntermediateSteps = fields.returnIntermediateSteps ?? false;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        let currentDocs = docs;\n        let intermediateSteps = [];\n        // For each iteration, we'll use the `llmChain` to get a new result\n        for (let i = 0; i < this.maxIterations; i += 1) {\n            const inputs = currentDocs.map((d) => ({\n                [this.documentVariableName]: d.pageContent,\n                ...rest,\n            }));\n            const canSkipMapStep = i !== 0 || !this.ensureMapStep;\n            if (canSkipMapStep) {\n                // Calculate the total tokens required in the input\n                const formatted = await this.combineDocumentChain.llmChain.prompt.format(this.combineDocumentChain._prepInputs({\n                    [this.combineDocumentChain.inputKey]: currentDocs,\n                    ...rest,\n                }));\n                const length = await this.combineDocumentChain.llmChain._getNumTokens(formatted);\n                const withinTokenLimit = length < this.maxTokens;\n                // If we can skip the map step, and we're within the token limit, we don't\n                // need to run the map step, so just break out of the loop.\n                if (withinTokenLimit) {\n                    break;\n                }\n            }\n            const results = await this.llmChain.apply(inputs, \n            // If we have a runManager, then we need to create a child for each input\n            // so that we can track the progress of each input.\n            runManager\n                ? Array.from({ length: inputs.length }, (_, i) => runManager.getChild(`map_${i + 1}`))\n                : undefined);\n            const { outputKey } = this.llmChain;\n            // If the flag is set, then concat that to the intermediate steps\n            if (this.returnIntermediateSteps) {\n                intermediateSteps = intermediateSteps.concat(results.map((r) => r[outputKey]));\n            }\n            currentDocs = results.map((r) => ({\n                pageContent: r[outputKey],\n                metadata: {},\n            }));\n        }\n        // Now, with the final result of all the inputs from the `llmChain`, we can\n        // run the `combineDocumentChain` over them.\n        const newInputs = {\n            [this.combineDocumentChain.inputKey]: currentDocs,\n            ...rest,\n        };\n        const result = await this.combineDocumentChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n        // Return the intermediate steps results if the flag is set\n        if (this.returnIntermediateSteps) {\n            return { ...result, intermediateSteps };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"map_reduce_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        if (!data.combine_document_chain) {\n            throw new Error(\"Missing combine_document_chain\");\n        }\n        return new MapReduceDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(data.llm_chain),\n            combineDocumentChain: await StuffDocumentsChain.deserialize(data.combine_document_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            combine_document_chain: this.combineDocumentChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by doing a first pass and then refining on more documents.\n * @augments BaseChain\n * @augments RefineDocumentsChainInput\n */\nclass RefineDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"RefineDocumentsChain\";\n    }\n    get defaultDocumentPrompt() {\n        return new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n            inputVariables: [\"page_content\"],\n            template: \"{page_content}\",\n        });\n    }\n    get inputKeys() {\n        return [\n            ...new Set([\n                this.inputKey,\n                ...this.llmChain.inputKeys,\n                ...this.refineLLMChain.inputKeys,\n            ]),\n        ].filter((key) => key !== this.documentVariableName && key !== this.initialResponseName);\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output_text\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"initialResponseName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"existing_answer\"\n        });\n        Object.defineProperty(this, \"refineLLMChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"documentPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.defaultDocumentPrompt\n        });\n        this.llmChain = fields.llmChain;\n        this.refineLLMChain = fields.refineLLMChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.documentPrompt = fields.documentPrompt ?? this.documentPrompt;\n        this.initialResponseName =\n            fields.initialResponseName ?? this.initialResponseName;\n    }\n    /** @ignore */\n    async _constructInitialInputs(doc, rest) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { ...baseInputs, ...rest };\n        return inputs;\n    }\n    /** @ignore */\n    async _constructRefineInputs(doc, res) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { [this.initialResponseName]: res, ...baseInputs };\n        return inputs;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const currentDocs = docs;\n        const initialInputs = await this._constructInitialInputs(currentDocs[0], rest);\n        let res = await this.llmChain.predict({ ...initialInputs }, runManager?.getChild(\"answer\"));\n        const refineSteps = [res];\n        for (let i = 1; i < currentDocs.length; i += 1) {\n            const refineInputs = await this._constructRefineInputs(currentDocs[i], res);\n            const inputs = { ...refineInputs, ...rest };\n            res = await this.refineLLMChain.predict({ ...inputs }, runManager?.getChild(\"refine\"));\n            refineSteps.push(res);\n        }\n        return { [this.outputKey]: res };\n    }\n    _chainType() {\n        return \"refine_documents_chain\";\n    }\n    static async deserialize(data) {\n        const SerializedLLMChain = data.llm_chain;\n        if (!SerializedLLMChain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        const SerializedRefineDocumentChain = data.refine_llm_chain;\n        if (!SerializedRefineDocumentChain) {\n            throw new Error(\"Missing refine_llm_chain\");\n        }\n        return new RefineDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(SerializedLLMChain),\n            refineLLMChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(SerializedRefineDocumentChain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            refine_llm_chain: this.refineLLMChain.serialize(),\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/combine_docs_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/llm_chain.js":
/*!*********************************************************!*\
  !*** ./node_modules/langchain/dist/chains/llm_chain.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LLMChain: () => (/* binding */ LLMChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/language_models/base.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _output_parsers_noop_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../output_parsers/noop.js */ \"(rsc)/./node_modules/langchain/dist/output_parsers/noop.js\");\n\n\n\n\n\nfunction isBaseLanguageModel(llmLike) {\n    return typeof llmLike._llmType === \"function\";\n}\nfunction _getLanguageModel(llmLike) {\n    if (isBaseLanguageModel(llmLike)) {\n        return llmLike;\n    }\n    else if (\"bound\" in llmLike && _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.bound)) {\n        return _getLanguageModel(llmLike.bound);\n    }\n    else if (\"runnable\" in llmLike &&\n        \"fallbacks\" in llmLike &&\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.runnable)) {\n        return _getLanguageModel(llmLike.runnable);\n    }\n    else if (\"default\" in llmLike && _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.default)) {\n        return _getLanguageModel(llmLike.default);\n    }\n    else {\n        throw new Error(\"Unable to extract BaseLanguageModel from llmLike object.\");\n    }\n}\n/**\n * @deprecated This class will be removed in 0.3.0. Use the LangChain Expression Language (LCEL) instead.\n * See the example below for how to use LCEL with the LLMChain class:\n *\n * Chain to run queries against LLMs.\n *\n * @example\n * ```ts\n * import { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const prompt = ChatPromptTemplate.fromTemplate(\"Tell me a {adjective} joke\");\n * const llm = new ChatOpenAI();\n * const chain = prompt.pipe(llm);\n *\n * const response = await chain.invoke({ adjective: \"funny\" });\n * ```\n */\nclass LLMChain extends _base_js__WEBPACK_IMPORTED_MODULE_3__.BaseChain {\n    static lc_name() {\n        return \"LLMChain\";\n    }\n    get inputKeys() {\n        return this.prompt.inputVariables;\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llmKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text\"\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n        this.llm = fields.llm;\n        this.llmKwargs = fields.llmKwargs;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.outputParser =\n            fields.outputParser ?? new _output_parsers_noop_js__WEBPACK_IMPORTED_MODULE_4__.NoOpOutputParser();\n        if (this.prompt.outputParser) {\n            if (fields.outputParser) {\n                throw new Error(\"Cannot set both outputParser and prompt.outputParser\");\n            }\n            this.outputParser = this.prompt.outputParser;\n        }\n    }\n    getCallKeys() {\n        const callKeys = \"callKeys\" in this.llm ? this.llm.callKeys : [];\n        return callKeys;\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = super._selectMemoryInputs(values);\n        const callKeys = this.getCallKeys();\n        for (const key of callKeys) {\n            if (key in values) {\n                delete valuesForMemory[key];\n            }\n        }\n        return valuesForMemory;\n    }\n    /** @ignore */\n    async _getFinalOutput(generations, promptValue, runManager) {\n        let finalCompletion;\n        if (this.outputParser) {\n            finalCompletion = await this.outputParser.parseResultWithPrompt(generations, promptValue, runManager?.getChild());\n        }\n        else {\n            finalCompletion = generations[0].text;\n        }\n        return finalCompletion;\n    }\n    /**\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    call(values, config) {\n        return super.call(values, config);\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const valuesForPrompt = { ...values };\n        const valuesForLLM = {\n            ...this.llmKwargs,\n        };\n        const callKeys = this.getCallKeys();\n        for (const key of callKeys) {\n            if (key in values) {\n                if (valuesForLLM) {\n                    valuesForLLM[key] =\n                        values[key];\n                    delete valuesForPrompt[key];\n                }\n            }\n        }\n        const promptValue = await this.prompt.formatPromptValue(valuesForPrompt);\n        if (\"generatePrompt\" in this.llm) {\n            const { generations } = await this.llm.generatePrompt([promptValue], valuesForLLM, runManager?.getChild());\n            return {\n                [this.outputKey]: await this._getFinalOutput(generations[0], promptValue, runManager),\n            };\n        }\n        const modelWithParser = this.outputParser\n            ? this.llm.pipe(this.outputParser)\n            : this.llm;\n        const response = await modelWithParser.invoke(promptValue, runManager?.getChild());\n        return {\n            [this.outputKey]: response,\n        };\n    }\n    /**\n     * Format prompt with values and pass to LLM\n     *\n     * @param values - keys to pass to prompt template\n     * @param callbackManager - CallbackManager to use\n     * @returns Completion from LLM.\n     *\n     * @example\n     * ```ts\n     * llm.predict({ adjective: \"funny\" })\n     * ```\n     */\n    async predict(values, callbackManager) {\n        const output = await this.call(values, callbackManager);\n        return output[this.outputKey];\n    }\n    _chainType() {\n        return \"llm\";\n    }\n    static async deserialize(data) {\n        const { llm, prompt } = data;\n        if (!llm) {\n            throw new Error(\"LLMChain must have llm\");\n        }\n        if (!prompt) {\n            throw new Error(\"LLMChain must have prompt\");\n        }\n        return new LLMChain({\n            llm: await _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_0__.BaseLanguageModel.deserialize(llm),\n            prompt: await _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.BasePromptTemplate.deserialize(prompt),\n        });\n    }\n    /** @deprecated */\n    serialize() {\n        const serialize = \"serialize\" in this.llm ? this.llm.serialize() : undefined;\n        return {\n            _type: `${this._chainType()}_chain`,\n            llm: serialize,\n            prompt: this.prompt.serialize(),\n        };\n    }\n    _getNumTokens(text) {\n        return _getLanguageModel(this.llm).getNumTokens(text);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/question_answering/load.js":
/*!***********************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/question_answering/load.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadQAChain: () => (/* binding */ loadQAChain),\n/* harmony export */   loadQAMapReduceChain: () => (/* binding */ loadQAMapReduceChain),\n/* harmony export */   loadQARefineChain: () => (/* binding */ loadQARefineChain),\n/* harmony export */   loadQAStuffChain: () => (/* binding */ loadQAStuffChain)\n/* harmony export */ });\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../combine_docs_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/combine_docs_chain.js\");\n/* harmony import */ var _stuff_prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stuff_prompts.js */ \"(rsc)/./node_modules/langchain/dist/chains/question_answering/stuff_prompts.js\");\n/* harmony import */ var _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map_reduce_prompts.js */ \"(rsc)/./node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js\");\n/* harmony import */ var _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./refine_prompts.js */ \"(rsc)/./node_modules/langchain/dist/chains/question_answering/refine_prompts.js\");\n\n\n\n\n\nconst loadQAChain = (llm, params = { type: \"stuff\" }) => {\n    const { type } = params;\n    if (type === \"stuff\") {\n        return loadQAStuffChain(llm, params);\n    }\n    if (type === \"map_reduce\") {\n        return loadQAMapReduceChain(llm, params);\n    }\n    if (type === \"refine\") {\n        return loadQARefineChain(llm, params);\n    }\n    throw new Error(`Invalid _type: ${type}`);\n};\n/**\n * Loads a StuffQAChain based on the provided parameters. It takes an LLM\n * instance and StuffQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a StuffQAChain.\n * @returns A StuffQAChain instance.\n */\nfunction loadQAStuffChain(llm, params = {}) {\n    const { prompt = _stuff_prompts_js__WEBPACK_IMPORTED_MODULE_2__.QA_PROMPT_SELECTOR.getPrompt(llm), verbose } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt, llm, verbose });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain({ llmChain, verbose });\n    return chain;\n}\n/**\n * Loads a MapReduceQAChain based on the provided parameters. It takes an\n * LLM instance and MapReduceQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a MapReduceQAChain.\n * @returns A MapReduceQAChain instance.\n */\nfunction loadQAMapReduceChain(llm, params = {}) {\n    const { combineMapPrompt = _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__.COMBINE_QA_PROMPT_SELECTOR.getPrompt(llm), combinePrompt = _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__.COMBINE_PROMPT_SELECTOR.getPrompt(llm), verbose, combineLLM, returnIntermediateSteps, } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt: combineMapPrompt, llm, verbose });\n    const combineLLMChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({\n        prompt: combinePrompt,\n        llm: combineLLM ?? llm,\n        verbose,\n    });\n    const combineDocumentChain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain({\n        llmChain: combineLLMChain,\n        documentVariableName: \"summaries\",\n        verbose,\n    });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.MapReduceDocumentsChain({\n        llmChain,\n        combineDocumentChain,\n        returnIntermediateSteps,\n        verbose,\n    });\n    return chain;\n}\n/**\n * Loads a RefineQAChain based on the provided parameters. It takes an LLM\n * instance and RefineQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a RefineQAChain.\n * @returns A RefineQAChain instance.\n */\nfunction loadQARefineChain(llm, params = {}) {\n    const { questionPrompt = _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__.QUESTION_PROMPT_SELECTOR.getPrompt(llm), refinePrompt = _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__.REFINE_PROMPT_SELECTOR.getPrompt(llm), refineLLM, verbose, } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt: questionPrompt, llm, verbose });\n    const refineLLMChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({\n        prompt: refinePrompt,\n        llm: refineLLM ?? llm,\n        verbose,\n    });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.RefineDocumentsChain({\n        llmChain,\n        refineLLMChain,\n        verbose,\n    });\n    return chain;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9sb2FkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEyQztBQUNvRTtBQUN2RDtBQUN1QztBQUNQO0FBQ2pGLHFDQUFxQyxlQUFlO0FBQzNELFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsS0FBSztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMENBQTBDO0FBQ2pELFlBQVksU0FBUyxpRUFBa0IsMkJBQTJCO0FBQ2xFLHlCQUF5QixtREFBUSxHQUFHLHNCQUFzQjtBQUMxRCxzQkFBc0IsdUVBQW1CLEdBQUcsbUJBQW1CO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhDQUE4QztBQUNyRCxZQUFZLG1CQUFtQiw4RUFBMEIsaUNBQWlDLDJFQUF1QixpRUFBaUU7QUFDbEwseUJBQXlCLG1EQUFRLEdBQUcsd0NBQXdDO0FBQzVFLGdDQUFnQyxtREFBUTtBQUN4QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wscUNBQXFDLHVFQUFtQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsc0JBQXNCLDJFQUF1QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQ0FBMkM7QUFDbEQsWUFBWSxpQkFBaUIsd0VBQXdCLGdDQUFnQyxzRUFBc0IsdUNBQXVDO0FBQ2xKLHlCQUF5QixtREFBUSxHQUFHLHNDQUFzQztBQUMxRSwrQkFBK0IsbURBQVE7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHNCQUFzQix3RUFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2NoYWlucy9xdWVzdGlvbl9hbnN3ZXJpbmcvbG9hZC5qcz8zYWMxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExMTUNoYWluIH0gZnJvbSBcIi4uL2xsbV9jaGFpbi5qc1wiO1xuaW1wb3J0IHsgU3R1ZmZEb2N1bWVudHNDaGFpbiwgTWFwUmVkdWNlRG9jdW1lbnRzQ2hhaW4sIFJlZmluZURvY3VtZW50c0NoYWluLCB9IGZyb20gXCIuLi9jb21iaW5lX2RvY3NfY2hhaW4uanNcIjtcbmltcG9ydCB7IFFBX1BST01QVF9TRUxFQ1RPUiB9IGZyb20gXCIuL3N0dWZmX3Byb21wdHMuanNcIjtcbmltcG9ydCB7IENPTUJJTkVfUFJPTVBUX1NFTEVDVE9SLCBDT01CSU5FX1FBX1BST01QVF9TRUxFQ1RPUiwgfSBmcm9tIFwiLi9tYXBfcmVkdWNlX3Byb21wdHMuanNcIjtcbmltcG9ydCB7IFFVRVNUSU9OX1BST01QVF9TRUxFQ1RPUiwgUkVGSU5FX1BST01QVF9TRUxFQ1RPUiwgfSBmcm9tIFwiLi9yZWZpbmVfcHJvbXB0cy5qc1wiO1xuZXhwb3J0IGNvbnN0IGxvYWRRQUNoYWluID0gKGxsbSwgcGFyYW1zID0geyB0eXBlOiBcInN0dWZmXCIgfSkgPT4ge1xuICAgIGNvbnN0IHsgdHlwZSB9ID0gcGFyYW1zO1xuICAgIGlmICh0eXBlID09PSBcInN0dWZmXCIpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRRQVN0dWZmQ2hhaW4obGxtLCBwYXJhbXMpO1xuICAgIH1cbiAgICBpZiAodHlwZSA9PT0gXCJtYXBfcmVkdWNlXCIpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRRQU1hcFJlZHVjZUNoYWluKGxsbSwgcGFyYW1zKTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09IFwicmVmaW5lXCIpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRRQVJlZmluZUNoYWluKGxsbSwgcGFyYW1zKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIF90eXBlOiAke3R5cGV9YCk7XG59O1xuLyoqXG4gKiBMb2FkcyBhIFN0dWZmUUFDaGFpbiBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy4gSXQgdGFrZXMgYW4gTExNXG4gKiBpbnN0YW5jZSBhbmQgU3R1ZmZRQUNoYWluUGFyYW1zIGFzIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gbGxtIEFuIGluc3RhbmNlIG9mIEJhc2VMYW5ndWFnZU1vZGVsLlxuICogQHBhcmFtIHBhcmFtcyBQYXJhbWV0ZXJzIGZvciBjcmVhdGluZyBhIFN0dWZmUUFDaGFpbi5cbiAqIEByZXR1cm5zIEEgU3R1ZmZRQUNoYWluIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZFFBU3R1ZmZDaGFpbihsbG0sIHBhcmFtcyA9IHt9KSB7XG4gICAgY29uc3QgeyBwcm9tcHQgPSBRQV9QUk9NUFRfU0VMRUNUT1IuZ2V0UHJvbXB0KGxsbSksIHZlcmJvc2UgfSA9IHBhcmFtcztcbiAgICBjb25zdCBsbG1DaGFpbiA9IG5ldyBMTE1DaGFpbih7IHByb21wdCwgbGxtLCB2ZXJib3NlIH0pO1xuICAgIGNvbnN0IGNoYWluID0gbmV3IFN0dWZmRG9jdW1lbnRzQ2hhaW4oeyBsbG1DaGFpbiwgdmVyYm9zZSB9KTtcbiAgICByZXR1cm4gY2hhaW47XG59XG4vKipcbiAqIExvYWRzIGEgTWFwUmVkdWNlUUFDaGFpbiBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy4gSXQgdGFrZXMgYW5cbiAqIExMTSBpbnN0YW5jZSBhbmQgTWFwUmVkdWNlUUFDaGFpblBhcmFtcyBhcyBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIGxsbSBBbiBpbnN0YW5jZSBvZiBCYXNlTGFuZ3VhZ2VNb2RlbC5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1ldGVycyBmb3IgY3JlYXRpbmcgYSBNYXBSZWR1Y2VRQUNoYWluLlxuICogQHJldHVybnMgQSBNYXBSZWR1Y2VRQUNoYWluIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZFFBTWFwUmVkdWNlQ2hhaW4obGxtLCBwYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IHsgY29tYmluZU1hcFByb21wdCA9IENPTUJJTkVfUUFfUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCBjb21iaW5lUHJvbXB0ID0gQ09NQklORV9QUk9NUFRfU0VMRUNUT1IuZ2V0UHJvbXB0KGxsbSksIHZlcmJvc2UsIGNvbWJpbmVMTE0sIHJldHVybkludGVybWVkaWF0ZVN0ZXBzLCB9ID0gcGFyYW1zO1xuICAgIGNvbnN0IGxsbUNoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0OiBjb21iaW5lTWFwUHJvbXB0LCBsbG0sIHZlcmJvc2UgfSk7XG4gICAgY29uc3QgY29tYmluZUxMTUNoYWluID0gbmV3IExMTUNoYWluKHtcbiAgICAgICAgcHJvbXB0OiBjb21iaW5lUHJvbXB0LFxuICAgICAgICBsbG06IGNvbWJpbmVMTE0gPz8gbGxtLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIGNvbnN0IGNvbWJpbmVEb2N1bWVudENoYWluID0gbmV3IFN0dWZmRG9jdW1lbnRzQ2hhaW4oe1xuICAgICAgICBsbG1DaGFpbjogY29tYmluZUxMTUNoYWluLFxuICAgICAgICBkb2N1bWVudFZhcmlhYmxlTmFtZTogXCJzdW1tYXJpZXNcIixcbiAgICAgICAgdmVyYm9zZSxcbiAgICB9KTtcbiAgICBjb25zdCBjaGFpbiA9IG5ldyBNYXBSZWR1Y2VEb2N1bWVudHNDaGFpbih7XG4gICAgICAgIGxsbUNoYWluLFxuICAgICAgICBjb21iaW5lRG9jdW1lbnRDaGFpbixcbiAgICAgICAgcmV0dXJuSW50ZXJtZWRpYXRlU3RlcHMsXG4gICAgICAgIHZlcmJvc2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIGNoYWluO1xufVxuLyoqXG4gKiBMb2FkcyBhIFJlZmluZVFBQ2hhaW4gYmFzZWQgb24gdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuIEl0IHRha2VzIGFuIExMTVxuICogaW5zdGFuY2UgYW5kIFJlZmluZVFBQ2hhaW5QYXJhbXMgYXMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBsbG0gQW4gaW5zdGFuY2Ugb2YgQmFzZUxhbmd1YWdlTW9kZWwuXG4gKiBAcGFyYW0gcGFyYW1zIFBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgUmVmaW5lUUFDaGFpbi5cbiAqIEByZXR1cm5zIEEgUmVmaW5lUUFDaGFpbiBpbnN0YW5jZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRRQVJlZmluZUNoYWluKGxsbSwgcGFyYW1zID0ge30pIHtcbiAgICBjb25zdCB7IHF1ZXN0aW9uUHJvbXB0ID0gUVVFU1RJT05fUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCByZWZpbmVQcm9tcHQgPSBSRUZJTkVfUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCByZWZpbmVMTE0sIHZlcmJvc2UsIH0gPSBwYXJhbXM7XG4gICAgY29uc3QgbGxtQ2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBwcm9tcHQ6IHF1ZXN0aW9uUHJvbXB0LCBsbG0sIHZlcmJvc2UgfSk7XG4gICAgY29uc3QgcmVmaW5lTExNQ2hhaW4gPSBuZXcgTExNQ2hhaW4oe1xuICAgICAgICBwcm9tcHQ6IHJlZmluZVByb21wdCxcbiAgICAgICAgbGxtOiByZWZpbmVMTE0gPz8gbGxtLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIGNvbnN0IGNoYWluID0gbmV3IFJlZmluZURvY3VtZW50c0NoYWluKHtcbiAgICAgICAgbGxtQ2hhaW4sXG4gICAgICAgIHJlZmluZUxMTUNoYWluLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIHJldHVybiBjaGFpbjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/question_answering/load.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMBINE_PROMPT: () => (/* binding */ COMBINE_PROMPT),\n/* harmony export */   COMBINE_PROMPT_SELECTOR: () => (/* binding */ COMBINE_PROMPT_SELECTOR),\n/* harmony export */   COMBINE_QA_PROMPT_SELECTOR: () => (/* binding */ COMBINE_QA_PROMPT_SELECTOR),\n/* harmony export */   DEFAULT_COMBINE_QA_PROMPT: () => (/* binding */ DEFAULT_COMBINE_QA_PROMPT)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst qa_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:`;\nconst DEFAULT_COMBINE_QA_PROMPT = \n/*#__PURE__*/\n_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(qa_template);\nconst system_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QA_PROMPT = /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst COMBINE_QA_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_COMBINE_QA_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_QA_PROMPT],\n]);\nconst combine_prompt = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia’s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won’t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet’s use this moment to reset. Let’s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet’s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can’t change how divided we’ve been. But we can change how we move forward—on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who’d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I’ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I’m taking robust action to make sure the pain of our sanctions  is targeted at Russia’s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what’s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt’s based on DARPA—the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose—to drive breakthroughs in cancer, Alzheimer’s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans—tonight , we have gathered in a sacred space—the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:`;\nconst COMBINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(combine_prompt);\nconst system_combine_template = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n----------------\n{summaries}`;\nconst combine_messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_combine_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_COMBINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(combine_messages);\nconst COMBINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(COMBINE_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_COMBINE_PROMPT],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/question_answering/refine_prompts.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/question_answering/refine_prompts.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_QUESTION_PROMPT: () => (/* binding */ CHAT_QUESTION_PROMPT),\n/* harmony export */   CHAT_REFINE_PROMPT: () => (/* binding */ CHAT_REFINE_PROMPT),\n/* harmony export */   DEFAULT_REFINE_PROMPT: () => (/* binding */ DEFAULT_REFINE_PROMPT),\n/* harmony export */   DEFAULT_REFINE_PROMPT_TMPL: () => (/* binding */ DEFAULT_REFINE_PROMPT_TMPL),\n/* harmony export */   DEFAULT_TEXT_QA_PROMPT: () => (/* binding */ DEFAULT_TEXT_QA_PROMPT),\n/* harmony export */   DEFAULT_TEXT_QA_PROMPT_TMPL: () => (/* binding */ DEFAULT_TEXT_QA_PROMPT_TMPL),\n/* harmony export */   QUESTION_PROMPT_SELECTOR: () => (/* binding */ QUESTION_PROMPT_SELECTOR),\n/* harmony export */   REFINE_PROMPT_SELECTOR: () => (/* binding */ REFINE_PROMPT_SELECTOR)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst DEFAULT_REFINE_PROMPT_TMPL = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst DEFAULT_REFINE_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"question\", \"existing_answer\", \"context\"],\n    template: DEFAULT_REFINE_PROMPT_TMPL,\n});\nconst refineTemplate = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.AIMessagePromptTemplate.fromTemplate(\"{existing_answer}\"),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(refineTemplate),\n];\nconst CHAT_REFINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst REFINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_REFINE_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_REFINE_PROMPT],\n]);\nconst DEFAULT_TEXT_QA_PROMPT_TMPL = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and no prior knowledge, answer the question: {question}`;\nconst DEFAULT_TEXT_QA_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"context\", \"question\"],\n    template: DEFAULT_TEXT_QA_PROMPT_TMPL,\n});\nconst chat_qa_prompt_template = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and no prior knowledge, answer any questions`;\nconst chat_messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(chat_qa_prompt_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QUESTION_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(chat_messages);\nconst QUESTION_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_TEXT_QA_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_QUESTION_PROMPT],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9yZWZpbmVfcHJvbXB0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDZ0s7QUFDcEU7QUFDckYsMEVBQTBFO0FBQ2pGLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ08sZ0RBQWdELG1FQUFjO0FBQ3JFO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOERBQThEO0FBQzlELHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0VBQTBCLGdCQUFnQixTQUFTO0FBQ3JFLGtCQUFrQiw0RUFBdUIsZ0JBQWdCLGdCQUFnQjtBQUN6RSxrQkFBa0IsK0VBQTBCO0FBQzVDO0FBQ087QUFDUCxjQUFjLHVFQUFrQjtBQUN6QjtBQUNQLGtCQUFrQix3RkFBeUI7QUFDM0MsS0FBSywwRUFBVztBQUNoQjtBQUNPO0FBQ1A7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw0RUFBNEUsU0FBUztBQUM5RSxpREFBaUQsbUVBQWM7QUFDdEU7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnRkFBMkI7QUFDN0Msa0JBQWtCLCtFQUEwQixnQkFBZ0IsU0FBUztBQUNyRTtBQUNPO0FBQ1AsY0FBYyx1RUFBa0I7QUFDekI7QUFDUCxrQkFBa0Isd0ZBQXlCO0FBQzNDLEtBQUssMEVBQVc7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2NoYWlucy9xdWVzdGlvbl9hbnN3ZXJpbmcvcmVmaW5lX3Byb21wdHMuanM/YmU3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBzcGFjZWQtY29tbWVudCAqL1xuaW1wb3J0IHsgUHJvbXB0VGVtcGxhdGUsIENoYXRQcm9tcHRUZW1wbGF0ZSwgU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLCBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgQUlNZXNzYWdlUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yLCBpc0NoYXRNb2RlbCwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2V4YW1wbGVfc2VsZWN0b3JzXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRUZJTkVfUFJPTVBUX1RNUEwgPSBgVGhlIG9yaWdpbmFsIHF1ZXN0aW9uIGlzIGFzIGZvbGxvd3M6IHtxdWVzdGlvbn1cbldlIGhhdmUgcHJvdmlkZWQgYW4gZXhpc3RpbmcgYW5zd2VyOiB7ZXhpc3RpbmdfYW5zd2VyfVxuV2UgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gcmVmaW5lIHRoZSBleGlzdGluZyBhbnN3ZXJcbihvbmx5IGlmIG5lZWRlZCkgd2l0aCBzb21lIG1vcmUgY29udGV4dCBiZWxvdy5cbi0tLS0tLS0tLS0tLVxue2NvbnRleHR9XG4tLS0tLS0tLS0tLS1cbkdpdmVuIHRoZSBuZXcgY29udGV4dCwgcmVmaW5lIHRoZSBvcmlnaW5hbCBhbnN3ZXIgdG8gYmV0dGVyIGFuc3dlciB0aGUgcXVlc3Rpb24uIFxuSWYgdGhlIGNvbnRleHQgaXNuJ3QgdXNlZnVsLCByZXR1cm4gdGhlIG9yaWdpbmFsIGFuc3dlci5gO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVGSU5FX1BST01QVCA9IC8qI19fUFVSRV9fKi8gbmV3IFByb21wdFRlbXBsYXRlKHtcbiAgICBpbnB1dFZhcmlhYmxlczogW1wicXVlc3Rpb25cIiwgXCJleGlzdGluZ19hbnN3ZXJcIiwgXCJjb250ZXh0XCJdLFxuICAgIHRlbXBsYXRlOiBERUZBVUxUX1JFRklORV9QUk9NUFRfVE1QTCxcbn0pO1xuY29uc3QgcmVmaW5lVGVtcGxhdGUgPSBgVGhlIG9yaWdpbmFsIHF1ZXN0aW9uIGlzIGFzIGZvbGxvd3M6IHtxdWVzdGlvbn1cbldlIGhhdmUgcHJvdmlkZWQgYW4gZXhpc3RpbmcgYW5zd2VyOiB7ZXhpc3RpbmdfYW5zd2VyfVxuV2UgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gcmVmaW5lIHRoZSBleGlzdGluZyBhbnN3ZXJcbihvbmx5IGlmIG5lZWRlZCkgd2l0aCBzb21lIG1vcmUgY29udGV4dCBiZWxvdy5cbi0tLS0tLS0tLS0tLVxue2NvbnRleHR9XG4tLS0tLS0tLS0tLS1cbkdpdmVuIHRoZSBuZXcgY29udGV4dCwgcmVmaW5lIHRoZSBvcmlnaW5hbCBhbnN3ZXIgdG8gYmV0dGVyIGFuc3dlciB0aGUgcXVlc3Rpb24uIFxuSWYgdGhlIGNvbnRleHQgaXNuJ3QgdXNlZnVsLCByZXR1cm4gdGhlIG9yaWdpbmFsIGFuc3dlci5gO1xuY29uc3QgbWVzc2FnZXMgPSBbXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7cXVlc3Rpb259XCIpLFxuICAgIC8qI19fUFVSRV9fKi8gQUlNZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie2V4aXN0aW5nX2Fuc3dlcn1cIiksXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUocmVmaW5lVGVtcGxhdGUpLFxuXTtcbmV4cG9ydCBjb25zdCBDSEFUX1JFRklORV9QUk9NUFQgPSBcbi8qI19fUFVSRV9fKi8gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhtZXNzYWdlcyk7XG5leHBvcnQgY29uc3QgUkVGSU5FX1BST01QVF9TRUxFQ1RPUiA9IFxuLyojX19QVVJFX18qLyBuZXcgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvcihERUZBVUxUX1JFRklORV9QUk9NUFQsIFtcbiAgICBbaXNDaGF0TW9kZWwsIENIQVRfUkVGSU5FX1BST01QVF0sXG5dKTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1RFWFRfUUFfUFJPTVBUX1RNUEwgPSBgQ29udGV4dCBpbmZvcm1hdGlvbiBpcyBiZWxvdy4gXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbntjb250ZXh0fVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5HaXZlbiB0aGUgY29udGV4dCBpbmZvcm1hdGlvbiBhbmQgbm8gcHJpb3Iga25vd2xlZGdlLCBhbnN3ZXIgdGhlIHF1ZXN0aW9uOiB7cXVlc3Rpb259YDtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1RFWFRfUUFfUFJPTVBUID0gLyojX19QVVJFX18qLyBuZXcgUHJvbXB0VGVtcGxhdGUoe1xuICAgIGlucHV0VmFyaWFibGVzOiBbXCJjb250ZXh0XCIsIFwicXVlc3Rpb25cIl0sXG4gICAgdGVtcGxhdGU6IERFRkFVTFRfVEVYVF9RQV9QUk9NUFRfVE1QTCxcbn0pO1xuY29uc3QgY2hhdF9xYV9wcm9tcHRfdGVtcGxhdGUgPSBgQ29udGV4dCBpbmZvcm1hdGlvbiBpcyBiZWxvdy4gXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbntjb250ZXh0fVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5HaXZlbiB0aGUgY29udGV4dCBpbmZvcm1hdGlvbiBhbmQgbm8gcHJpb3Iga25vd2xlZGdlLCBhbnN3ZXIgYW55IHF1ZXN0aW9uc2A7XG5jb25zdCBjaGF0X21lc3NhZ2VzID0gW1xuICAgIC8qI19fUFVSRV9fKi8gU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShjaGF0X3FhX3Byb21wdF90ZW1wbGF0ZSksXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7cXVlc3Rpb259XCIpLFxuXTtcbmV4cG9ydCBjb25zdCBDSEFUX1FVRVNUSU9OX1BST01QVCA9IFxuLyojX19QVVJFX18qLyBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKGNoYXRfbWVzc2FnZXMpO1xuZXhwb3J0IGNvbnN0IFFVRVNUSU9OX1BST01QVF9TRUxFQ1RPUiA9IFxuLyojX19QVVJFX18qLyBuZXcgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvcihERUZBVUxUX1RFWFRfUUFfUFJPTVBULCBbXG4gICAgW2lzQ2hhdE1vZGVsLCBDSEFUX1FVRVNUSU9OX1BST01QVF0sXG5dKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/question_answering/refine_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/question_answering/stuff_prompts.js":
/*!********************************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/question_answering/stuff_prompts.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_QA_PROMPT: () => (/* binding */ DEFAULT_QA_PROMPT),\n/* harmony export */   QA_PROMPT_SELECTOR: () => (/* binding */ QA_PROMPT_SELECTOR)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst DEFAULT_QA_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    template: \"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n{context}\\n\\nQuestion: {question}\\nHelpful Answer:\",\n    inputVariables: [\"context\", \"question\"],\n});\nconst system_template = `Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_PROMPT = /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst QA_PROMPT_SELECTOR = /*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_QA_PROMPT, [[_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_PROMPT]]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9zdHVmZl9wcm9tcHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUN1STtBQUMzQztBQUNyRiw0Q0FBNEMsbUVBQWM7QUFDakUsc0xBQXNMLFFBQVEsZUFBZSxTQUFTO0FBQ3ROO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUMsUUFBUTtBQUNUO0FBQ0Esa0JBQWtCLGdGQUEyQjtBQUM3QyxrQkFBa0IsK0VBQTBCLGdCQUFnQixTQUFTO0FBQ3JFO0FBQ0Esa0NBQWtDLHVFQUFrQjtBQUM3Qyw2Q0FBNkMsd0ZBQXlCLHNCQUFzQiwwRUFBVyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9zdHVmZl9wcm9tcHRzLmpzP2UyMDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgc3BhY2VkLWNvbW1lbnQgKi9cbmltcG9ydCB7IENoYXRQcm9tcHRUZW1wbGF0ZSwgU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLCBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yLCBpc0NoYXRNb2RlbCwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2V4YW1wbGVfc2VsZWN0b3JzXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9RQV9QUk9NUFQgPSAvKiNfX1BVUkVfXyovIG5ldyBQcm9tcHRUZW1wbGF0ZSh7XG4gICAgdGVtcGxhdGU6IFwiVXNlIHRoZSBmb2xsb3dpbmcgcGllY2VzIG9mIGNvbnRleHQgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbiBhdCB0aGUgZW5kLiBJZiB5b3UgZG9uJ3Qga25vdyB0aGUgYW5zd2VyLCBqdXN0IHNheSB0aGF0IHlvdSBkb24ndCBrbm93LCBkb24ndCB0cnkgdG8gbWFrZSB1cCBhbiBhbnN3ZXIuXFxuXFxue2NvbnRleHR9XFxuXFxuUXVlc3Rpb246IHtxdWVzdGlvbn1cXG5IZWxwZnVsIEFuc3dlcjpcIixcbiAgICBpbnB1dFZhcmlhYmxlczogW1wiY29udGV4dFwiLCBcInF1ZXN0aW9uXCJdLFxufSk7XG5jb25zdCBzeXN0ZW1fdGVtcGxhdGUgPSBgVXNlIHRoZSBmb2xsb3dpbmcgcGllY2VzIG9mIGNvbnRleHQgdG8gYW5zd2VyIHRoZSB1c2VycyBxdWVzdGlvbi4gXG5JZiB5b3UgZG9uJ3Qga25vdyB0aGUgYW5zd2VyLCBqdXN0IHNheSB0aGF0IHlvdSBkb24ndCBrbm93LCBkb24ndCB0cnkgdG8gbWFrZSB1cCBhbiBhbnN3ZXIuXG4tLS0tLS0tLS0tLS0tLS0tXG57Y29udGV4dH1gO1xuY29uc3QgbWVzc2FnZXMgPSBbXG4gICAgLyojX19QVVJFX18qLyBTeXN0ZW1NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKHN5c3RlbV90ZW1wbGF0ZSksXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7cXVlc3Rpb259XCIpLFxuXTtcbmNvbnN0IENIQVRfUFJPTVBUID0gLyojX19QVVJFX18qLyBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKG1lc3NhZ2VzKTtcbmV4cG9ydCBjb25zdCBRQV9QUk9NUFRfU0VMRUNUT1IgPSAvKiNfX1BVUkVfXyovIG5ldyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yKERFRkFVTFRfUUFfUFJPTVBULCBbW2lzQ2hhdE1vZGVsLCBDSEFUX1BST01QVF1dKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/question_answering/stuff_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/sequential_chain.js":
/*!****************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/sequential_chain.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SequentialChain: () => (/* binding */ SequentialChain),\n/* harmony export */   SimpleSequentialChain: () => (/* binding */ SimpleSequentialChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _util_set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/set.js */ \"(rsc)/./node_modules/langchain/dist/util/set.js\");\n\n\nfunction formatSet(input) {\n    return Array.from(input)\n        .map((i) => `\"${i}\"`)\n        .join(\", \");\n}\n/**\n * Chain where the outputs of one chain feed directly into next.\n * @example\n * ```typescript\n * const promptTemplate = new PromptTemplate({\n *   template: `You are a playwright. Given the title of play and the era it is set in, it is your job to write a synopsis for that title.\n * Title: {title}\n * Era: {era}\n * Playwright: This is a synopsis for the above play:`,\n *   inputVariables: [\"title\", \"era\"],\n * });\n\n * const reviewPromptTemplate = new PromptTemplate({\n *   template: `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n *     Play Synopsis:\n *     {synopsis}\n *     Review from a New York Times play critic of the above play:`,\n *   inputVariables: [\"synopsis\"],\n * });\n\n * const overallChain = new SequentialChain({\n *   chains: [\n *     new LLMChain({\n *       llm: new ChatOpenAI({ temperature: 0 }),\n *       prompt: promptTemplate,\n *       outputKey: \"synopsis\",\n *     }),\n *     new LLMChain({\n *       llm: new OpenAI({ temperature: 0 }),\n *       prompt: reviewPromptTemplate,\n *       outputKey: \"review\",\n *     }),\n *   ],\n *   inputVariables: [\"era\", \"title\"],\n *   outputVariables: [\"synopsis\", \"review\"],\n *   verbose: true,\n * });\n\n * const chainExecutionResult = await overallChain.call({\n *   title: \"Tragedy at sunset on the beach\",\n *   era: \"Victorian England\",\n * });\n * console.log(chainExecutionResult);\n * ```\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/expression_language/ | expression language}.\n * Will be removed in 0.2.0\n */\nclass SequentialChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"SequentialChain\";\n    }\n    get inputKeys() {\n        return this.inputVariables;\n    }\n    get outputKeys() {\n        return this.outputVariables;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnAll\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.inputVariables = fields.inputVariables;\n        this.outputVariables = fields.outputVariables ?? [];\n        if (this.outputVariables.length > 0 && fields.returnAll) {\n            throw new Error(\"Either specify variables to return using `outputVariables` or use `returnAll` param. Cannot apply both conditions at the same time.\");\n        }\n        this.returnAll = fields.returnAll ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        if (this.chains.length === 0) {\n            throw new Error(\"Sequential chain must have at least one chain.\");\n        }\n        const memoryKeys = this.memory?.memoryKeys ?? [];\n        const inputKeysSet = new Set(this.inputKeys);\n        const memoryKeysSet = new Set(memoryKeys);\n        const keysIntersection = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(inputKeysSet, memoryKeysSet);\n        if (keysIntersection.size > 0) {\n            throw new Error(`The following keys: ${formatSet(keysIntersection)} are overlapping between memory and input keys of the chain variables. This can lead to unexpected behaviour. Please use input and memory keys that don't overlap.`);\n        }\n        const availableKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.union)(inputKeysSet, memoryKeysSet);\n        for (const chain of this.chains) {\n            let missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(new Set(chain.inputKeys), availableKeys);\n            if (chain.memory) {\n                missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(missingKeys, new Set(chain.memory.memoryKeys));\n            }\n            if (missingKeys.size > 0) {\n                throw new Error(`Missing variables for chain \"${chain._chainType()}\": ${formatSet(missingKeys)}. Only got the following variables: ${formatSet(availableKeys)}.`);\n            }\n            const outputKeysSet = new Set(chain.outputKeys);\n            const overlappingOutputKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(availableKeys, outputKeysSet);\n            if (overlappingOutputKeys.size > 0) {\n                throw new Error(`The following output variables for chain \"${chain._chainType()}\" are overlapping: ${formatSet(overlappingOutputKeys)}. This can lead to unexpected behaviour.`);\n            }\n            for (const outputKey of outputKeysSet) {\n                availableKeys.add(outputKey);\n            }\n        }\n        if (this.outputVariables.length === 0) {\n            if (this.returnAll) {\n                const outputKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(availableKeys, inputKeysSet);\n                this.outputVariables = Array.from(outputKeys);\n            }\n            else {\n                this.outputVariables = this.chains[this.chains.length - 1].outputKeys;\n            }\n        }\n        else {\n            const missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(new Set(this.outputVariables), new Set(availableKeys));\n            if (missingKeys.size > 0) {\n                throw new Error(`The following output variables were expected to be in the final chain output but were not found: ${formatSet(missingKeys)}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = {};\n        const allChainValues = values;\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = await chain.call(allChainValues, runManager?.getChild(`step_${i}`));\n            for (const key of Object.keys(input)) {\n                allChainValues[key] = input[key];\n            }\n        }\n        const output = {};\n        for (const key of this.outputVariables) {\n            output[key] = allChainValues[key];\n        }\n        return output;\n    }\n    _chainType() {\n        return \"sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const inputVariables = data.input_variables;\n        const outputVariables = data.output_variables;\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SequentialChain({ chains, inputVariables, outputVariables });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            input_variables: this.inputVariables,\n            output_variables: this.outputVariables,\n            chains,\n        };\n    }\n}\n/**\n * @deprecated Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Simple chain where a single string output of one chain is fed directly into the next.\n * @augments BaseChain\n * @augments SimpleSequentialChainInput\n *\n * @example\n * ```ts\n * import { SimpleSequentialChain, LLMChain } from \"langchain/chains\";\n * import { OpenAI } from \"langchain/llms/openai\";\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * // This is an LLMChain to write a synopsis given a title of a play.\n * const llm = new OpenAI({ temperature: 0 });\n * const template = `You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\n *\n * Title: {title}\n * Playwright: This is a synopsis for the above play:`\n * const promptTemplate = new PromptTemplate({ template, inputVariables: [\"title\"] });\n * const synopsisChain = new LLMChain({ llm, prompt: promptTemplate });\n *\n *\n * // This is an LLMChain to write a review of a play given a synopsis.\n * const reviewLLM = new OpenAI({ temperature: 0 })\n * const reviewTemplate = `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n * Play Synopsis:\n * {synopsis}\n * Review from a New York Times play critic of the above play:`\n * const reviewPromptTemplate = new PromptTemplate({ template: reviewTemplate, inputVariables: [\"synopsis\"] });\n * const reviewChain = new LLMChain({ llm: reviewLLM, prompt: reviewPromptTemplate });\n *\n * const overallChain = new SimpleSequentialChain({chains: [synopsisChain, reviewChain], verbose:true})\n * const review = await overallChain.run(\"Tragedy at sunset on the beach\")\n * // the variable review contains resulting play review.\n * ```\n */\nclass SimpleSequentialChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"SimpleSequentialChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"trimOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.trimOutputs = fields.trimOutputs ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        for (const chain of this.chains) {\n            if (chain.inputKeys.filter((k) => !chain.memory?.memoryKeys.includes(k) ?? true).length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one input, got ${chain.inputKeys.length} for ${chain._chainType()}.`);\n            }\n            if (chain.outputKeys.length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one output, got ${chain.outputKeys.length} for ${chain._chainType()}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = values[this.inputKey];\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = (await chain.call({ [chain.inputKeys[0]]: input, signal: values.signal }, runManager?.getChild(`step_${i}`)))[chain.outputKeys[0]];\n            if (this.trimOutputs) {\n                input = input.trim();\n            }\n            await runManager?.handleText(input);\n        }\n        return { [this.outputKey]: input };\n    }\n    _chainType() {\n        return \"simple_sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SimpleSequentialChain({ chains });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            chains,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/sequential_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/chains/vector_db_qa.js":
/*!************************************************************!*\
  !*** ./node_modules/langchain/dist/chains/vector_db_qa.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorDBQAChain: () => (/* binding */ VectorDBQAChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _question_answering_load_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./question_answering/load.js */ \"(rsc)/./node_modules/langchain/dist/chains/question_answering/load.js\");\n\n\n/**\n * Class that represents a VectorDBQAChain. It extends the `BaseChain`\n * class and implements the `VectorDBQAChainInput` interface. It performs\n * a similarity search using a vector store and combines the search\n * results using a specified combine documents chain.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/modules/chains/ | createRetrievalChain}\n * Will be removed in 0.2.0\n */\nclass VectorDBQAChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"VectorDBQAChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.vectorstore = fields.vectorstore;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.k = fields.k ?? this.k;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.vectorstore.similaritySearch(question, this.k, values.filter, runManager?.getChild(\"vectorstore\"));\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"vector_db_qa\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"vectorstore\" in values)) {\n            throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n        }\n        const { vectorstore } = values;\n        if (!data.combine_documents_chain) {\n            throw new Error(`VectorDBQAChain must have combine_documents_chain in serialized data`);\n        }\n        return new VectorDBQAChain({\n            combineDocumentsChain: await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(data.combine_documents_chain),\n            k: data.k,\n            vectorstore,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_documents_chain: this.combineDocumentsChain.serialize(),\n            k: this.k,\n        };\n    }\n    /**\n     * Static method that creates a VectorDBQAChain instance from a\n     * BaseLanguageModel and a vector store. It also accepts optional options\n     * to customize the chain.\n     * @param llm The BaseLanguageModel instance.\n     * @param vectorstore The vector store used for similarity search.\n     * @param options Optional options to customize the chain.\n     * @returns A new instance of VectorDBQAChain.\n     */\n    static fromLLM(llm, vectorstore, options) {\n        const qaChain = (0,_question_answering_load_js__WEBPACK_IMPORTED_MODULE_1__.loadQAStuffChain)(llm);\n        return new this({\n            vectorstore,\n            combineDocumentsChain: qaChain,\n            ...options,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3ZlY3Rvcl9kYl9xYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDMEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNPLDhCQUE4QiwrQ0FBUztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGVBQWU7QUFDM0Q7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGNBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsK0NBQVM7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkVBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2NoYWlucy92ZWN0b3JfZGJfcWEuanM/MGQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlQ2hhaW4gfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5pbXBvcnQgeyBsb2FkUUFTdHVmZkNoYWluIH0gZnJvbSBcIi4vcXVlc3Rpb25fYW5zd2VyaW5nL2xvYWQuanNcIjtcbi8qKlxuICogQ2xhc3MgdGhhdCByZXByZXNlbnRzIGEgVmVjdG9yREJRQUNoYWluLiBJdCBleHRlbmRzIHRoZSBgQmFzZUNoYWluYFxuICogY2xhc3MgYW5kIGltcGxlbWVudHMgdGhlIGBWZWN0b3JEQlFBQ2hhaW5JbnB1dGAgaW50ZXJmYWNlLiBJdCBwZXJmb3Jtc1xuICogYSBzaW1pbGFyaXR5IHNlYXJjaCB1c2luZyBhIHZlY3RvciBzdG9yZSBhbmQgY29tYmluZXMgdGhlIHNlYXJjaFxuICogcmVzdWx0cyB1c2luZyBhIHNwZWNpZmllZCBjb21iaW5lIGRvY3VtZW50cyBjaGFpbi5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICogU3dpdGNoIHRvIHtAbGluayBodHRwczovL2pzLmxhbmdjaGFpbi5jb20vZG9jcy9tb2R1bGVzL2NoYWlucy8gfCBjcmVhdGVSZXRyaWV2YWxDaGFpbn1cbiAqIFdpbGwgYmUgcmVtb3ZlZCBpbiAwLjIuMFxuICovXG5leHBvcnQgY2xhc3MgVmVjdG9yREJRQUNoYWluIGV4dGVuZHMgQmFzZUNoYWluIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiVmVjdG9yREJRQUNoYWluXCI7XG4gICAgfVxuICAgIGdldCBpbnB1dEtleXMoKSB7XG4gICAgICAgIHJldHVybiBbdGhpcy5pbnB1dEtleV07XG4gICAgfVxuICAgIGdldCBvdXRwdXRLZXlzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21iaW5lRG9jdW1lbnRzQ2hhaW4ub3V0cHV0S2V5cy5jb25jYXQodGhpcy5yZXR1cm5Tb3VyY2VEb2N1bWVudHMgPyBbXCJzb3VyY2VEb2N1bWVudHNcIl0gOiBbXSk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJrXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiA0XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnB1dEtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJxdWVyeVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2ZWN0b3JzdG9yZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjb21iaW5lRG9jdW1lbnRzQ2hhaW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmV0dXJuU291cmNlRG9jdW1lbnRzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52ZWN0b3JzdG9yZSA9IGZpZWxkcy52ZWN0b3JzdG9yZTtcbiAgICAgICAgdGhpcy5jb21iaW5lRG9jdW1lbnRzQ2hhaW4gPSBmaWVsZHMuY29tYmluZURvY3VtZW50c0NoYWluO1xuICAgICAgICB0aGlzLmlucHV0S2V5ID0gZmllbGRzLmlucHV0S2V5ID8/IHRoaXMuaW5wdXRLZXk7XG4gICAgICAgIHRoaXMuayA9IGZpZWxkcy5rID8/IHRoaXMuaztcbiAgICAgICAgdGhpcy5yZXR1cm5Tb3VyY2VEb2N1bWVudHMgPVxuICAgICAgICAgICAgZmllbGRzLnJldHVyblNvdXJjZURvY3VtZW50cyA/PyB0aGlzLnJldHVyblNvdXJjZURvY3VtZW50cztcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbCh2YWx1ZXMsIHJ1bk1hbmFnZXIpIHtcbiAgICAgICAgaWYgKCEodGhpcy5pbnB1dEtleSBpbiB2YWx1ZXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFF1ZXN0aW9uIGtleSAke3RoaXMuaW5wdXRLZXl9IG5vdCBmb3VuZC5gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBxdWVzdGlvbiA9IHZhbHVlc1t0aGlzLmlucHV0S2V5XTtcbiAgICAgICAgY29uc3QgZG9jcyA9IGF3YWl0IHRoaXMudmVjdG9yc3RvcmUuc2ltaWxhcml0eVNlYXJjaChxdWVzdGlvbiwgdGhpcy5rLCB2YWx1ZXMuZmlsdGVyLCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcInZlY3RvcnN0b3JlXCIpKTtcbiAgICAgICAgY29uc3QgaW5wdXRzID0geyBxdWVzdGlvbiwgaW5wdXRfZG9jdW1lbnRzOiBkb2NzIH07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuY29tYmluZURvY3VtZW50c0NoYWluLmNhbGwoaW5wdXRzLCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcImNvbWJpbmVfZG9jdW1lbnRzXCIpKTtcbiAgICAgICAgaWYgKHRoaXMucmV0dXJuU291cmNlRG9jdW1lbnRzKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBzb3VyY2VEb2N1bWVudHM6IGRvY3MsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIF9jaGFpblR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcInZlY3Rvcl9kYl9xYVwiO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgZGVzZXJpYWxpemUoZGF0YSwgdmFsdWVzKSB7XG4gICAgICAgIGlmICghKFwidmVjdG9yc3RvcmVcIiBpbiB2YWx1ZXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5lZWQgdG8gcGFzcyBpbiBhIHZlY3RvcnN0b3JlIHRvIGRlc2VyaWFsaXplIFZlY3RvckRCUUFDaGFpbmApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgdmVjdG9yc3RvcmUgfSA9IHZhbHVlcztcbiAgICAgICAgaWYgKCFkYXRhLmNvbWJpbmVfZG9jdW1lbnRzX2NoYWluKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFZlY3RvckRCUUFDaGFpbiBtdXN0IGhhdmUgY29tYmluZV9kb2N1bWVudHNfY2hhaW4gaW4gc2VyaWFsaXplZCBkYXRhYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3JEQlFBQ2hhaW4oe1xuICAgICAgICAgICAgY29tYmluZURvY3VtZW50c0NoYWluOiBhd2FpdCBCYXNlQ2hhaW4uZGVzZXJpYWxpemUoZGF0YS5jb21iaW5lX2RvY3VtZW50c19jaGFpbiksXG4gICAgICAgICAgICBrOiBkYXRhLmssXG4gICAgICAgICAgICB2ZWN0b3JzdG9yZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIF90eXBlOiB0aGlzLl9jaGFpblR5cGUoKSxcbiAgICAgICAgICAgIGNvbWJpbmVfZG9jdW1lbnRzX2NoYWluOiB0aGlzLmNvbWJpbmVEb2N1bWVudHNDaGFpbi5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgIGs6IHRoaXMuayxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RhdGljIG1ldGhvZCB0aGF0IGNyZWF0ZXMgYSBWZWN0b3JEQlFBQ2hhaW4gaW5zdGFuY2UgZnJvbSBhXG4gICAgICogQmFzZUxhbmd1YWdlTW9kZWwgYW5kIGEgdmVjdG9yIHN0b3JlLiBJdCBhbHNvIGFjY2VwdHMgb3B0aW9uYWwgb3B0aW9uc1xuICAgICAqIHRvIGN1c3RvbWl6ZSB0aGUgY2hhaW4uXG4gICAgICogQHBhcmFtIGxsbSBUaGUgQmFzZUxhbmd1YWdlTW9kZWwgaW5zdGFuY2UuXG4gICAgICogQHBhcmFtIHZlY3RvcnN0b3JlIFRoZSB2ZWN0b3Igc3RvcmUgdXNlZCBmb3Igc2ltaWxhcml0eSBzZWFyY2guXG4gICAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9uYWwgb3B0aW9ucyB0byBjdXN0b21pemUgdGhlIGNoYWluLlxuICAgICAqIEByZXR1cm5zIEEgbmV3IGluc3RhbmNlIG9mIFZlY3RvckRCUUFDaGFpbi5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUxMTShsbG0sIHZlY3RvcnN0b3JlLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHFhQ2hhaW4gPSBsb2FkUUFTdHVmZkNoYWluKGxsbSk7XG4gICAgICAgIHJldHVybiBuZXcgdGhpcyh7XG4gICAgICAgICAgICB2ZWN0b3JzdG9yZSxcbiAgICAgICAgICAgIGNvbWJpbmVEb2N1bWVudHNDaGFpbjogcWFDaGFpbixcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/chains/vector_db_qa.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/memory/buffer_memory.js":
/*!*************************************************************!*\
  !*** ./node_modules/langchain/dist/memory/buffer_memory.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferMemory: () => (/* binding */ BufferMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_community_memory_chat_memory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/community/memory/chat_memory */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/memory/chat_memory.js\");\n\n\n/**\n * The `BufferMemory` class is a type of memory component used for storing\n * and managing previous chat messages. It is a wrapper around\n * `ChatMessageHistory` that extracts the messages into an input variable.\n * This class is particularly useful in applications like chatbots where\n * it is essential to remember previous interactions. Note: The memory\n * instance represents the history of a single conversation. Therefore, it\n * is not recommended to share the same history or memory instance between\n * two different chains. If you deploy your LangChain app on a serverless\n * environment, do not store memory instances in a variable, as your\n * hosting provider may reset it by the next time the function is called.\n * @example\n * ```typescript\n * // Initialize the memory to store chat history and set up the language model with a specific temperature.\n * const memory = new BufferMemory({ memoryKey: \"chat_history\" });\n * const model = new ChatOpenAI({ temperature: 0.9 });\n *\n * // Create a prompt template for a friendly conversation between a human and an AI.\n * const prompt =\n *   PromptTemplate.fromTemplate(`The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n *\n * Current conversation:\n * {chat_history}\n * Human: {input}\n * AI:`);\n *\n * // Set up the chain with the language model, prompt, and memory.\n * const chain = new LLMChain({ llm: model, prompt, memory });\n *\n * // Example usage of the chain to continue the conversation.\n * // The `call` method sends the input to the model and returns the AI's response.\n * const res = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({ res });\n *\n * ```\n */\nclass BufferMemory extends _langchain_community_memory_chat_memory__WEBPACK_IMPORTED_MODULE_1__.BaseChatMemory {\n    constructor(fields) {\n        super({\n            chatHistory: fields?.chatHistory,\n            returnMessages: fields?.returnMessages ?? false,\n            inputKey: fields?.inputKey,\n            outputKey: fields?.outputKey,\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        this.humanPrefix = fields?.humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = fields?.aiPrefix ?? this.aiPrefix;\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Loads the memory variables. It takes an `InputValues` object as a\n     * parameter and returns a `Promise` that resolves with a\n     * `MemoryVariables` object.\n     * @param _values `InputValues` object.\n     * @returns A `Promise` that resolves with a `MemoryVariables` object.\n     */\n    async loadMemoryVariables(_values) {\n        const messages = await this.chatHistory.getMessages();\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: messages,\n            };\n            return result;\n        }\n        const result = {\n            [this.memoryKey]: (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(messages, this.humanPrefix, this.aiPrefix),\n        };\n        return result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvbWVtb3J5L2J1ZmZlcl9tZW1vcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ2U7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQywyQkFBMkI7QUFDaEUsa0NBQWtDLGtCQUFrQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw0QkFBNEI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHVCQUF1QjtBQUN6RCxpQkFBaUIsS0FBSztBQUN0QjtBQUNBO0FBQ0E7QUFDTywyQkFBMkIsbUZBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUVBQWU7QUFDN0M7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L21lbW9yeS9idWZmZXJfbWVtb3J5LmpzP2JjYmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QnVmZmVyU3RyaW5nIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgQmFzZUNoYXRNZW1vcnksIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29tbXVuaXR5L21lbW9yeS9jaGF0X21lbW9yeVwiO1xuLyoqXG4gKiBUaGUgYEJ1ZmZlck1lbW9yeWAgY2xhc3MgaXMgYSB0eXBlIG9mIG1lbW9yeSBjb21wb25lbnQgdXNlZCBmb3Igc3RvcmluZ1xuICogYW5kIG1hbmFnaW5nIHByZXZpb3VzIGNoYXQgbWVzc2FnZXMuIEl0IGlzIGEgd3JhcHBlciBhcm91bmRcbiAqIGBDaGF0TWVzc2FnZUhpc3RvcnlgIHRoYXQgZXh0cmFjdHMgdGhlIG1lc3NhZ2VzIGludG8gYW4gaW5wdXQgdmFyaWFibGUuXG4gKiBUaGlzIGNsYXNzIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgaW4gYXBwbGljYXRpb25zIGxpa2UgY2hhdGJvdHMgd2hlcmVcbiAqIGl0IGlzIGVzc2VudGlhbCB0byByZW1lbWJlciBwcmV2aW91cyBpbnRlcmFjdGlvbnMuIE5vdGU6IFRoZSBtZW1vcnlcbiAqIGluc3RhbmNlIHJlcHJlc2VudHMgdGhlIGhpc3Rvcnkgb2YgYSBzaW5nbGUgY29udmVyc2F0aW9uLiBUaGVyZWZvcmUsIGl0XG4gKiBpcyBub3QgcmVjb21tZW5kZWQgdG8gc2hhcmUgdGhlIHNhbWUgaGlzdG9yeSBvciBtZW1vcnkgaW5zdGFuY2UgYmV0d2VlblxuICogdHdvIGRpZmZlcmVudCBjaGFpbnMuIElmIHlvdSBkZXBsb3kgeW91ciBMYW5nQ2hhaW4gYXBwIG9uIGEgc2VydmVybGVzc1xuICogZW52aXJvbm1lbnQsIGRvIG5vdCBzdG9yZSBtZW1vcnkgaW5zdGFuY2VzIGluIGEgdmFyaWFibGUsIGFzIHlvdXJcbiAqIGhvc3RpbmcgcHJvdmlkZXIgbWF5IHJlc2V0IGl0IGJ5IHRoZSBuZXh0IHRpbWUgdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZC5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiAvLyBJbml0aWFsaXplIHRoZSBtZW1vcnkgdG8gc3RvcmUgY2hhdCBoaXN0b3J5IGFuZCBzZXQgdXAgdGhlIGxhbmd1YWdlIG1vZGVsIHdpdGggYSBzcGVjaWZpYyB0ZW1wZXJhdHVyZS5cbiAqIGNvbnN0IG1lbW9yeSA9IG5ldyBCdWZmZXJNZW1vcnkoeyBtZW1vcnlLZXk6IFwiY2hhdF9oaXN0b3J5XCIgfSk7XG4gKiBjb25zdCBtb2RlbCA9IG5ldyBDaGF0T3BlbkFJKHsgdGVtcGVyYXR1cmU6IDAuOSB9KTtcbiAqXG4gKiAvLyBDcmVhdGUgYSBwcm9tcHQgdGVtcGxhdGUgZm9yIGEgZnJpZW5kbHkgY29udmVyc2F0aW9uIGJldHdlZW4gYSBodW1hbiBhbmQgYW4gQUkuXG4gKiBjb25zdCBwcm9tcHQgPVxuICogICBQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoYFRoZSBmb2xsb3dpbmcgaXMgYSBmcmllbmRseSBjb252ZXJzYXRpb24gYmV0d2VlbiBhIGh1bWFuIGFuZCBhbiBBSS4gVGhlIEFJIGlzIHRhbGthdGl2ZSBhbmQgcHJvdmlkZXMgbG90cyBvZiBzcGVjaWZpYyBkZXRhaWxzIGZyb20gaXRzIGNvbnRleHQuIElmIHRoZSBBSSBkb2VzIG5vdCBrbm93IHRoZSBhbnN3ZXIgdG8gYSBxdWVzdGlvbiwgaXQgdHJ1dGhmdWxseSBzYXlzIGl0IGRvZXMgbm90IGtub3cuXG4gKlxuICogQ3VycmVudCBjb252ZXJzYXRpb246XG4gKiB7Y2hhdF9oaXN0b3J5fVxuICogSHVtYW46IHtpbnB1dH1cbiAqIEFJOmApO1xuICpcbiAqIC8vIFNldCB1cCB0aGUgY2hhaW4gd2l0aCB0aGUgbGFuZ3VhZ2UgbW9kZWwsIHByb21wdCwgYW5kIG1lbW9yeS5cbiAqIGNvbnN0IGNoYWluID0gbmV3IExMTUNoYWluKHsgbGxtOiBtb2RlbCwgcHJvbXB0LCBtZW1vcnkgfSk7XG4gKlxuICogLy8gRXhhbXBsZSB1c2FnZSBvZiB0aGUgY2hhaW4gdG8gY29udGludWUgdGhlIGNvbnZlcnNhdGlvbi5cbiAqIC8vIFRoZSBgY2FsbGAgbWV0aG9kIHNlbmRzIHRoZSBpbnB1dCB0byB0aGUgbW9kZWwgYW5kIHJldHVybnMgdGhlIEFJJ3MgcmVzcG9uc2UuXG4gKiBjb25zdCByZXMgPSBhd2FpdCBjaGFpbi5jYWxsKHsgaW5wdXQ6IFwiSGkhIEknbSBKaW0uXCIgfSk7XG4gKiBjb25zb2xlLmxvZyh7IHJlcyB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEJ1ZmZlck1lbW9yeSBleHRlbmRzIEJhc2VDaGF0TWVtb3J5IHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgY2hhdEhpc3Rvcnk6IGZpZWxkcz8uY2hhdEhpc3RvcnksXG4gICAgICAgICAgICByZXR1cm5NZXNzYWdlczogZmllbGRzPy5yZXR1cm5NZXNzYWdlcyA/PyBmYWxzZSxcbiAgICAgICAgICAgIGlucHV0S2V5OiBmaWVsZHM/LmlucHV0S2V5LFxuICAgICAgICAgICAgb3V0cHV0S2V5OiBmaWVsZHM/Lm91dHB1dEtleSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImh1bWFuUHJlZml4XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcIkh1bWFuXCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFpUHJlZml4XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcIkFJXCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1lbW9yeUtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJoaXN0b3J5XCJcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuaHVtYW5QcmVmaXggPSBmaWVsZHM/Lmh1bWFuUHJlZml4ID8/IHRoaXMuaHVtYW5QcmVmaXg7XG4gICAgICAgIHRoaXMuYWlQcmVmaXggPSBmaWVsZHM/LmFpUHJlZml4ID8/IHRoaXMuYWlQcmVmaXg7XG4gICAgICAgIHRoaXMubWVtb3J5S2V5ID0gZmllbGRzPy5tZW1vcnlLZXkgPz8gdGhpcy5tZW1vcnlLZXk7XG4gICAgfVxuICAgIGdldCBtZW1vcnlLZXlzKCkge1xuICAgICAgICByZXR1cm4gW3RoaXMubWVtb3J5S2V5XTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTG9hZHMgdGhlIG1lbW9yeSB2YXJpYWJsZXMuIEl0IHRha2VzIGFuIGBJbnB1dFZhbHVlc2Agb2JqZWN0IGFzIGFcbiAgICAgKiBwYXJhbWV0ZXIgYW5kIHJldHVybnMgYSBgUHJvbWlzZWAgdGhhdCByZXNvbHZlcyB3aXRoIGFcbiAgICAgKiBgTWVtb3J5VmFyaWFibGVzYCBvYmplY3QuXG4gICAgICogQHBhcmFtIF92YWx1ZXMgYElucHV0VmFsdWVzYCBvYmplY3QuXG4gICAgICogQHJldHVybnMgQSBgUHJvbWlzZWAgdGhhdCByZXNvbHZlcyB3aXRoIGEgYE1lbW9yeVZhcmlhYmxlc2Agb2JqZWN0LlxuICAgICAqL1xuICAgIGFzeW5jIGxvYWRNZW1vcnlWYXJpYWJsZXMoX3ZhbHVlcykge1xuICAgICAgICBjb25zdCBtZXNzYWdlcyA9IGF3YWl0IHRoaXMuY2hhdEhpc3RvcnkuZ2V0TWVzc2FnZXMoKTtcbiAgICAgICAgaWYgKHRoaXMucmV0dXJuTWVzc2FnZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgICAgICAgICBbdGhpcy5tZW1vcnlLZXldOiBtZXNzYWdlcyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgICAgIFt0aGlzLm1lbW9yeUtleV06IGdldEJ1ZmZlclN0cmluZyhtZXNzYWdlcywgdGhpcy5odW1hblByZWZpeCwgdGhpcy5haVByZWZpeCksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/memory/buffer_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/memory/prompt.js":
/*!******************************************************!*\
  !*** ./node_modules/langchain/dist/memory/prompt.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENTITY_EXTRACTION_PROMPT: () => (/* binding */ ENTITY_EXTRACTION_PROMPT),\n/* harmony export */   ENTITY_MEMORY_CONVERSATION_TEMPLATE: () => (/* binding */ ENTITY_MEMORY_CONVERSATION_TEMPLATE),\n/* harmony export */   ENTITY_SUMMARIZATION_PROMPT: () => (/* binding */ ENTITY_SUMMARIZATION_PROMPT),\n/* harmony export */   SUMMARY_PROMPT: () => (/* binding */ SUMMARY_PROMPT),\n/* harmony export */   _DEFAULT_ENTITY_EXTRACTION_TEMPLATE: () => (/* binding */ _DEFAULT_ENTITY_EXTRACTION_TEMPLATE),\n/* harmony export */   _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE: () => (/* binding */ _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE),\n/* harmony export */   _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE: () => (/* binding */ _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n\nconst _DEFAULT_SUMMARIZER_TEMPLATE = `Progressively summarize the lines of conversation provided, adding onto the previous summary returning a new summary.\n\nEXAMPLE\nCurrent summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good.\n\nNew lines of conversation:\nHuman: Why do you think artificial intelligence is a force for good?\nAI: Because artificial intelligence will help humans reach their full potential.\n\nNew summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good because it will help humans reach their full potential.\nEND OF EXAMPLE\n\nCurrent summary:\n{summary}\n\nNew lines of conversation:\n{new_lines}\n\nNew summary:`;\n// eslint-disable-next-line spaced-comment\nconst SUMMARY_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"summary\", \"new_lines\"],\n    template: _DEFAULT_SUMMARIZER_TEMPLATE,\n});\nconst _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE = `You are an assistant to a human, powered by a large language model trained by OpenAI.\n\nYou are designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, you are able to generate human-like text based on the input you receive, allowing you to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nYou are constantly learning and improving, and your capabilities are constantly evolving. You are able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. You have access to some personalized information provided by the human in the Context section below. Additionally, you are able to generate your own text based on the input you receive, allowing you to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, you are a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether the human needs help with a specific question or just wants to have a conversation about a particular topic, you are here to assist.\n\nContext:\n{entities}\n\nCurrent conversation:\n{history}\nLast line:\nHuman: {input}\nYou:`;\nconst ENTITY_MEMORY_CONVERSATION_TEMPLATE = \n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"entities\", \"history\", \"input\"],\n    template: _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE,\n});\nconst _DEFAULT_ENTITY_EXTRACTION_TEMPLATE = `You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: my name is Jacob. how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Jacob,Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:`;\n// eslint-disable-next-line spaced-comment\nconst ENTITY_EXTRACTION_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"history\", \"input\"],\n    template: _DEFAULT_ENTITY_EXTRACTION_TEMPLATE,\n});\nconst _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE = `You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update and add to the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), output the exact string \"UNCHANGED\" below.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary (or the exact string \"UNCHANGED\" if there is no new information about {entity} above):`;\n// eslint-disable-next-line spaced-comment\nconst ENTITY_SUMMARIZATION_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"entity\", \"summary\", \"history\", \"input\"],\n    template: _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/memory/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/memory/summary.js":
/*!*******************************************************!*\
  !*** ./node_modules/langchain/dist/memory/summary.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConversationSummaryMemory: () => (/* binding */ BaseConversationSummaryMemory),\n/* harmony export */   ConversationSummaryMemory: () => (/* binding */ ConversationSummaryMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_community_memory_chat_memory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/community/memory/chat_memory */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/memory/chat_memory.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/dist/memory/prompt.js\");\n\n\n\n\n/**\n * Abstract class that provides a structure for storing and managing the\n * memory of a conversation. It includes methods for predicting a new\n * summary for the conversation given the existing messages and summary.\n */\nclass BaseConversationSummaryMemory extends _langchain_community_memory_chat_memory__WEBPACK_IMPORTED_MODULE_1__.BaseChatMemory {\n    constructor(fields) {\n        const { returnMessages, inputKey, outputKey, chatHistory, humanPrefix, aiPrefix, llm, prompt, summaryChatMessageClass, } = fields;\n        super({ returnMessages, inputKey, outputKey, chatHistory });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _prompt_js__WEBPACK_IMPORTED_MODULE_3__.SUMMARY_PROMPT\n        });\n        Object.defineProperty(this, \"summaryChatMessageClass\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.SystemMessage\n        });\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n        this.humanPrefix = humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = aiPrefix ?? this.aiPrefix;\n        this.llm = llm;\n        this.prompt = prompt ?? this.prompt;\n        this.summaryChatMessageClass =\n            summaryChatMessageClass ?? this.summaryChatMessageClass;\n    }\n    /**\n     * Predicts a new summary for the conversation given the existing messages\n     * and summary.\n     * @param messages Existing messages in the conversation.\n     * @param existingSummary Current summary of the conversation.\n     * @returns A promise that resolves to a new summary string.\n     */\n    async predictNewSummary(messages, existingSummary) {\n        const newLines = (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(messages, this.humanPrefix, this.aiPrefix);\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain({ llm: this.llm, prompt: this.prompt });\n        return await chain.predict({\n            summary: existingSummary,\n            new_lines: newLines,\n        });\n    }\n}\n/**\n * Class that provides a concrete implementation of the conversation\n * memory. It includes methods for loading memory variables, saving\n * context, and clearing the memory.\n * @example\n * ```typescript\n * const memory = new ConversationSummaryMemory({\n *   memoryKey: \"chat_history\",\n *   llm: new ChatOpenAI({ modelName: \"gpt-3.5-turbo\", temperature: 0 }),\n * });\n *\n * const model = new ChatOpenAI();\n * const prompt =\n *   PromptTemplate.fromTemplate(`The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n *\n * Current conversation:\n * {chat_history}\n * Human: {input}\n * AI:`);\n * const chain = new LLMChain({ llm: model, prompt, memory });\n *\n * const res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n * console.log({ res1, memory: await memory.loadMemoryVariables({}) });\n *\n * const res2 = await chain.call({ input: \"What's my name?\" });\n * console.log({ res2, memory: await memory.loadMemoryVariables({}) });\n *\n * ```\n */\nclass ConversationSummaryMemory extends BaseConversationSummaryMemory {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Loads the memory variables for the conversation memory.\n     * @returns A promise that resolves to an object containing the memory variables.\n     */\n    async loadMemoryVariables(_) {\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: [new this.summaryChatMessageClass(this.buffer)],\n            };\n            return result;\n        }\n        const result = { [this.memoryKey]: this.buffer };\n        return result;\n    }\n    /**\n     * Saves the context of the conversation memory.\n     * @param inputValues Input values for the conversation.\n     * @param outputValues Output values from the conversation.\n     * @returns A promise that resolves when the context has been saved.\n     */\n    async saveContext(inputValues, outputValues) {\n        await super.saveContext(inputValues, outputValues);\n        const messages = await this.chatHistory.getMessages();\n        this.buffer = await this.predictNewSummary(messages.slice(-2), this.buffer);\n    }\n    /**\n     * Clears the conversation memory.\n     * @returns A promise that resolves when the memory has been cleared.\n     */\n    async clear() {\n        await super.clear();\n        this.buffer = \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/memory/summary.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/memory/summary_buffer.js":
/*!**************************************************************!*\
  !*** ./node_modules/langchain/dist/memory/summary_buffer.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConversationSummaryBufferMemory: () => (/* binding */ ConversationSummaryBufferMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _summary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./summary.js */ \"(rsc)/./node_modules/langchain/dist/memory/summary.js\");\n\n\n/**\n * Class that extends BaseConversationSummaryMemory and implements\n * ConversationSummaryBufferMemoryInput. It manages the conversation\n * history in a LangChain application by maintaining a buffer of chat\n * messages and providing methods to load, save, prune, and clear the\n * memory.\n * @example\n * ```typescript\n * // Initialize the memory with a specific model and token limit\n * const memory = new ConversationSummaryBufferMemory({\n *   llm: new ChatOpenAI({ modelName: \"gpt-3.5-turbo-instruct\", temperature: 0 }),\n *   maxTokenLimit: 10,\n * });\n *\n * // Save conversation context to memory\n * await memory.saveContext({ input: \"hi\" }, { output: \"whats up\" });\n * await memory.saveContext({ input: \"not much you\" }, { output: \"not much\" });\n *\n * // Load the conversation history from memory\n * const history = await memory.loadMemoryVariables({});\n * console.log({ history });\n *\n * // Create a chat prompt using the conversation history\n * const chatPrompt = ChatPromptTemplate.fromMessages([\n *   SystemMessagePromptTemplate.fromTemplate(\n *     \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\",\n *   ),\n *   new MessagesPlaceholder(\"history\"),\n *   HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n * ]);\n *\n * // Initialize the conversation chain with the model, memory, and prompt\n * const chain = new ConversationChain({\n *   llm: new ChatOpenAI({ temperature: 0.9, verbose: true }),\n *   memory: memory,\n *   prompt: chatPrompt,\n * });\n * ```\n */\nclass ConversationSummaryBufferMemory extends _summary_js__WEBPACK_IMPORTED_MODULE_1__.BaseConversationSummaryMemory {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"movingSummaryBuffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"maxTokenLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2000\n        });\n        this.maxTokenLimit = fields?.maxTokenLimit ?? this.maxTokenLimit;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    /**\n     * Method that loads the chat messages from the memory and returns them as\n     * a string or as a list of messages, depending on the returnMessages\n     * property.\n     * @param _ InputValues object, not used in this method.\n     * @returns Promise that resolves with MemoryVariables object containing the loaded chat messages.\n     */\n    async loadMemoryVariables(_) {\n        let buffer = await this.chatHistory.getMessages();\n        if (this.movingSummaryBuffer) {\n            buffer = [\n                new this.summaryChatMessageClass(this.movingSummaryBuffer),\n                ...buffer,\n            ];\n        }\n        let finalBuffer;\n        if (this.returnMessages) {\n            finalBuffer = buffer;\n        }\n        else {\n            finalBuffer = (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix);\n        }\n        return { [this.memoryKey]: finalBuffer };\n    }\n    /**\n     * Method that saves the context of the conversation, including the input\n     * and output values, and prunes the memory if it exceeds the maximum\n     * token limit.\n     * @param inputValues InputValues object containing the input values of the conversation.\n     * @param outputValues OutputValues object containing the output values of the conversation.\n     * @returns Promise that resolves when the context is saved and the memory is pruned.\n     */\n    async saveContext(inputValues, outputValues) {\n        await super.saveContext(inputValues, outputValues);\n        await this.prune();\n    }\n    /**\n     * Method that prunes the memory if the total number of tokens in the\n     * buffer exceeds the maxTokenLimit. It removes messages from the\n     * beginning of the buffer until the total number of tokens is within the\n     * limit.\n     * @returns Promise that resolves when the memory is pruned.\n     */\n    async prune() {\n        // Prune buffer if it exceeds max token limit\n        let buffer = await this.chatHistory.getMessages();\n        if (this.movingSummaryBuffer) {\n            buffer = [\n                new this.summaryChatMessageClass(this.movingSummaryBuffer),\n                ...buffer,\n            ];\n        }\n        let currBufferLength = await this.llm.getNumTokens((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix));\n        if (currBufferLength > this.maxTokenLimit) {\n            const prunedMemory = [];\n            while (currBufferLength > this.maxTokenLimit) {\n                const poppedMessage = buffer.shift();\n                if (poppedMessage) {\n                    prunedMemory.push(poppedMessage);\n                    currBufferLength = await this.llm.getNumTokens((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(buffer, this.humanPrefix, this.aiPrefix));\n                }\n            }\n            this.movingSummaryBuffer = await this.predictNewSummary(prunedMemory, this.movingSummaryBuffer);\n        }\n    }\n    /**\n     * Method that clears the memory and resets the movingSummaryBuffer.\n     * @returns Promise that resolves when the memory is cleared.\n     */\n    async clear() {\n        await super.clear();\n        this.movingSummaryBuffer = \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/memory/summary_buffer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/output_parsers/fix.js":
/*!***********************************************************!*\
  !*** ./node_modules/langchain/dist/output_parsers/fix.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OutputFixingParser: () => (/* binding */ OutputFixingParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chains/llm_chain.js */ \"(rsc)/./node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompts.js */ \"(rsc)/./node_modules/langchain/dist/output_parsers/prompts.js\");\n\n\n\nfunction isLLMChain(x) {\n    return (x.prompt !== undefined && x.llm !== undefined);\n}\n/**\n * Class that extends the BaseOutputParser to handle situations where the\n * initial parsing attempt fails. It contains a retryChain for retrying\n * the parsing process in case of a failure.\n */\nclass OutputFixingParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n    static lc_name() {\n        return \"OutputFixingParser\";\n    }\n    /**\n     * Static method to create a new instance of OutputFixingParser using a\n     * given language model, parser, and optional fields.\n     * @param llm The language model to be used.\n     * @param parser The parser to be used.\n     * @param fields Optional fields which may contain a prompt.\n     * @returns A new instance of OutputFixingParser.\n     */\n    static fromLLM(llm, parser, fields) {\n        const prompt = fields?.prompt ?? _prompts_js__WEBPACK_IMPORTED_MODULE_2__.NAIVE_FIX_PROMPT;\n        const chain = new _chains_llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ llm, prompt });\n        return new OutputFixingParser({ parser, retryChain: chain });\n    }\n    constructor({ parser, retryChain, }) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"fix\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"parser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"retryChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.parser = parser;\n        this.retryChain = retryChain;\n    }\n    /**\n     * Method to parse the completion using the parser. If the initial parsing\n     * fails, it uses the retryChain to attempt to fix the output and retry\n     * the parsing process.\n     * @param completion The completion to be parsed.\n     * @param callbacks Optional callbacks to be used during parsing.\n     * @returns The parsed output.\n     */\n    async parse(completion, callbacks) {\n        try {\n            return await this.parser.parse(completion, callbacks);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (e instanceof _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.OutputParserException) {\n                const retryInput = {\n                    instructions: this.parser.getFormatInstructions(),\n                    completion,\n                    error: e,\n                };\n                if (isLLMChain(this.retryChain)) {\n                    const result = await this.retryChain.call(retryInput, callbacks);\n                    const newCompletion = result[this.retryChain.outputKey];\n                    return this.parser.parse(newCompletion, callbacks);\n                }\n                else {\n                    const result = await this.retryChain.invoke(retryInput, {\n                        callbacks,\n                    });\n                    return result;\n                }\n            }\n            throw e;\n        }\n    }\n    /**\n     * Method to get the format instructions for the parser.\n     * @returns The format instructions for the parser.\n     */\n    getFormatInstructions() {\n        return this.parser.getFormatInstructions();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3Qvb3V0cHV0X3BhcnNlcnMvZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEY7QUFDeEM7QUFDRjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUNBQWlDLDRFQUFnQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMseURBQWdCO0FBQ3pELDBCQUEwQiwwREFBUSxHQUFHLGFBQWE7QUFDbEQsd0NBQXdDLDJCQUEyQjtBQUNuRTtBQUNBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsaUZBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L291dHB1dF9wYXJzZXJzL2ZpeC5qcz80NjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPdXRwdXRQYXJzZXIsIE91dHB1dFBhcnNlckV4Y2VwdGlvbiwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG5pbXBvcnQgeyBMTE1DaGFpbiB9IGZyb20gXCIuLi9jaGFpbnMvbGxtX2NoYWluLmpzXCI7XG5pbXBvcnQgeyBOQUlWRV9GSVhfUFJPTVBUIH0gZnJvbSBcIi4vcHJvbXB0cy5qc1wiO1xuZnVuY3Rpb24gaXNMTE1DaGFpbih4KSB7XG4gICAgcmV0dXJuICh4LnByb21wdCAhPT0gdW5kZWZpbmVkICYmIHgubGxtICE9PSB1bmRlZmluZWQpO1xufVxuLyoqXG4gKiBDbGFzcyB0aGF0IGV4dGVuZHMgdGhlIEJhc2VPdXRwdXRQYXJzZXIgdG8gaGFuZGxlIHNpdHVhdGlvbnMgd2hlcmUgdGhlXG4gKiBpbml0aWFsIHBhcnNpbmcgYXR0ZW1wdCBmYWlscy4gSXQgY29udGFpbnMgYSByZXRyeUNoYWluIGZvciByZXRyeWluZ1xuICogdGhlIHBhcnNpbmcgcHJvY2VzcyBpbiBjYXNlIG9mIGEgZmFpbHVyZS5cbiAqL1xuZXhwb3J0IGNsYXNzIE91dHB1dEZpeGluZ1BhcnNlciBleHRlbmRzIEJhc2VPdXRwdXRQYXJzZXIge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJPdXRwdXRGaXhpbmdQYXJzZXJcIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RhdGljIG1ldGhvZCB0byBjcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgT3V0cHV0Rml4aW5nUGFyc2VyIHVzaW5nIGFcbiAgICAgKiBnaXZlbiBsYW5ndWFnZSBtb2RlbCwgcGFyc2VyLCBhbmQgb3B0aW9uYWwgZmllbGRzLlxuICAgICAqIEBwYXJhbSBsbG0gVGhlIGxhbmd1YWdlIG1vZGVsIHRvIGJlIHVzZWQuXG4gICAgICogQHBhcmFtIHBhcnNlciBUaGUgcGFyc2VyIHRvIGJlIHVzZWQuXG4gICAgICogQHBhcmFtIGZpZWxkcyBPcHRpb25hbCBmaWVsZHMgd2hpY2ggbWF5IGNvbnRhaW4gYSBwcm9tcHQuXG4gICAgICogQHJldHVybnMgQSBuZXcgaW5zdGFuY2Ugb2YgT3V0cHV0Rml4aW5nUGFyc2VyLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tTExNKGxsbSwgcGFyc2VyLCBmaWVsZHMpIHtcbiAgICAgICAgY29uc3QgcHJvbXB0ID0gZmllbGRzPy5wcm9tcHQgPz8gTkFJVkVfRklYX1BST01QVDtcbiAgICAgICAgY29uc3QgY2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBsbG0sIHByb21wdCB9KTtcbiAgICAgICAgcmV0dXJuIG5ldyBPdXRwdXRGaXhpbmdQYXJzZXIoeyBwYXJzZXIsIHJldHJ5Q2hhaW46IGNoYWluIH0pO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih7IHBhcnNlciwgcmV0cnlDaGFpbiwgfSkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcIm91dHB1dF9wYXJzZXJzXCIsIFwiZml4XCJdXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19zZXJpYWxpemFibGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInBhcnNlclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyZXRyeUNoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucGFyc2VyID0gcGFyc2VyO1xuICAgICAgICB0aGlzLnJldHJ5Q2hhaW4gPSByZXRyeUNoYWluO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gcGFyc2UgdGhlIGNvbXBsZXRpb24gdXNpbmcgdGhlIHBhcnNlci4gSWYgdGhlIGluaXRpYWwgcGFyc2luZ1xuICAgICAqIGZhaWxzLCBpdCB1c2VzIHRoZSByZXRyeUNoYWluIHRvIGF0dGVtcHQgdG8gZml4IHRoZSBvdXRwdXQgYW5kIHJldHJ5XG4gICAgICogdGhlIHBhcnNpbmcgcHJvY2Vzcy5cbiAgICAgKiBAcGFyYW0gY29tcGxldGlvbiBUaGUgY29tcGxldGlvbiB0byBiZSBwYXJzZWQuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrcyBPcHRpb25hbCBjYWxsYmFja3MgdG8gYmUgdXNlZCBkdXJpbmcgcGFyc2luZy5cbiAgICAgKiBAcmV0dXJucyBUaGUgcGFyc2VkIG91dHB1dC5cbiAgICAgKi9cbiAgICBhc3luYyBwYXJzZShjb21wbGV0aW9uLCBjYWxsYmFja3MpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcnNlci5wYXJzZShjb21wbGV0aW9uLCBjYWxsYmFja3MpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8taW5zdGFuY2VvZi9uby1pbnN0YW5jZW9mXG4gICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIE91dHB1dFBhcnNlckV4Y2VwdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJldHJ5SW5wdXQgPSB7XG4gICAgICAgICAgICAgICAgICAgIGluc3RydWN0aW9uczogdGhpcy5wYXJzZXIuZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCksXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRpb24sXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBlLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKGlzTExNQ2hhaW4odGhpcy5yZXRyeUNoYWluKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnJldHJ5Q2hhaW4uY2FsbChyZXRyeUlucHV0LCBjYWxsYmFja3MpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdDb21wbGV0aW9uID0gcmVzdWx0W3RoaXMucmV0cnlDaGFpbi5vdXRwdXRLZXldO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJzZXIucGFyc2UobmV3Q29tcGxldGlvbiwgY2FsbGJhY2tzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMucmV0cnlDaGFpbi5pbnZva2UocmV0cnlJbnB1dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tzLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBnZXQgdGhlIGZvcm1hdCBpbnN0cnVjdGlvbnMgZm9yIHRoZSBwYXJzZXIuXG4gICAgICogQHJldHVybnMgVGhlIGZvcm1hdCBpbnN0cnVjdGlvbnMgZm9yIHRoZSBwYXJzZXIuXG4gICAgICovXG4gICAgZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZXIuZ2V0Rm9ybWF0SW5zdHJ1Y3Rpb25zKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/output_parsers/fix.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/output_parsers/noop.js":
/*!************************************************************!*\
  !*** ./node_modules/langchain/dist/output_parsers/noop.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoOpOutputParser: () => (/* binding */ NoOpOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n\n/**\n * The NoOpOutputParser class is a type of output parser that does not\n * perform any operations on the output. It extends the BaseOutputParser\n * class and is part of the LangChain's output parsers module. This class\n * is useful in scenarios where the raw output of the Large Language\n * Models (LLMs) is required.\n */\nclass NoOpOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"default\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"NoOpOutputParser\";\n    }\n    /**\n     * This method takes a string as input and returns the same string as\n     * output. It does not perform any operations on the input string.\n     * @param text The input string to be parsed.\n     * @returns The same input string without any operations performed on it.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    /**\n     * This method returns an empty string. It does not provide any formatting\n     * instructions.\n     * @returns An empty string, indicating no formatting instructions.\n     */\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3Qvb3V0cHV0X3BhcnNlcnMvbm9vcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtCQUErQiw0RUFBZ0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3Qvb3V0cHV0X3BhcnNlcnMvbm9vcC5qcz9iYWVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPdXRwdXRQYXJzZXIgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG4vKipcbiAqIFRoZSBOb09wT3V0cHV0UGFyc2VyIGNsYXNzIGlzIGEgdHlwZSBvZiBvdXRwdXQgcGFyc2VyIHRoYXQgZG9lcyBub3RcbiAqIHBlcmZvcm0gYW55IG9wZXJhdGlvbnMgb24gdGhlIG91dHB1dC4gSXQgZXh0ZW5kcyB0aGUgQmFzZU91dHB1dFBhcnNlclxuICogY2xhc3MgYW5kIGlzIHBhcnQgb2YgdGhlIExhbmdDaGFpbidzIG91dHB1dCBwYXJzZXJzIG1vZHVsZS4gVGhpcyBjbGFzc1xuICogaXMgdXNlZnVsIGluIHNjZW5hcmlvcyB3aGVyZSB0aGUgcmF3IG91dHB1dCBvZiB0aGUgTGFyZ2UgTGFuZ3VhZ2VcbiAqIE1vZGVscyAoTExNcykgaXMgcmVxdWlyZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBOb09wT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZU91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwib3V0cHV0X3BhcnNlcnNcIiwgXCJkZWZhdWx0XCJdXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19zZXJpYWxpemFibGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJOb09wT3V0cHV0UGFyc2VyXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHRha2VzIGEgc3RyaW5nIGFzIGlucHV0IGFuZCByZXR1cm5zIHRoZSBzYW1lIHN0cmluZyBhc1xuICAgICAqIG91dHB1dC4gSXQgZG9lcyBub3QgcGVyZm9ybSBhbnkgb3BlcmF0aW9ucyBvbiB0aGUgaW5wdXQgc3RyaW5nLlxuICAgICAqIEBwYXJhbSB0ZXh0IFRoZSBpbnB1dCBzdHJpbmcgdG8gYmUgcGFyc2VkLlxuICAgICAqIEByZXR1cm5zIFRoZSBzYW1lIGlucHV0IHN0cmluZyB3aXRob3V0IGFueSBvcGVyYXRpb25zIHBlcmZvcm1lZCBvbiBpdC5cbiAgICAgKi9cbiAgICBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHJldHVybnMgYW4gZW1wdHkgc3RyaW5nLiBJdCBkb2VzIG5vdCBwcm92aWRlIGFueSBmb3JtYXR0aW5nXG4gICAgICogaW5zdHJ1Y3Rpb25zLlxuICAgICAqIEByZXR1cm5zIEFuIGVtcHR5IHN0cmluZywgaW5kaWNhdGluZyBubyBmb3JtYXR0aW5nIGluc3RydWN0aW9ucy5cbiAgICAgKi9cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/output_parsers/noop.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/output_parsers/prompts.js":
/*!***************************************************************!*\
  !*** ./node_modules/langchain/dist/output_parsers/prompts.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NAIVE_FIX_PROMPT: () => (/* binding */ NAIVE_FIX_PROMPT),\n/* harmony export */   NAIVE_FIX_TEMPLATE: () => (/* binding */ NAIVE_FIX_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n\nconst NAIVE_FIX_TEMPLATE = `Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:`;\nconst NAIVE_FIX_PROMPT = \n/* #__PURE__ */ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(NAIVE_FIX_TEMPLATE);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3Qvb3V0cHV0X3BhcnNlcnMvcHJvbXB0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUQ7QUFDbEQ7QUFDUDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBO0FBQ087QUFDUCxnQkFBZ0IsbUVBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L291dHB1dF9wYXJzZXJzL3Byb21wdHMuanM/ZmFmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcHJvbXB0c1wiO1xuZXhwb3J0IGNvbnN0IE5BSVZFX0ZJWF9URU1QTEFURSA9IGBJbnN0cnVjdGlvbnM6XG4tLS0tLS0tLS0tLS0tLVxue2luc3RydWN0aW9uc31cbi0tLS0tLS0tLS0tLS0tXG5Db21wbGV0aW9uOlxuLS0tLS0tLS0tLS0tLS1cbntjb21wbGV0aW9ufVxuLS0tLS0tLS0tLS0tLS1cblxuQWJvdmUsIHRoZSBDb21wbGV0aW9uIGRpZCBub3Qgc2F0aXNmeSB0aGUgY29uc3RyYWludHMgZ2l2ZW4gaW4gdGhlIEluc3RydWN0aW9ucy5cbkVycm9yOlxuLS0tLS0tLS0tLS0tLS1cbntlcnJvcn1cbi0tLS0tLS0tLS0tLS0tXG5cblBsZWFzZSB0cnkgYWdhaW4uIFBsZWFzZSBvbmx5IHJlc3BvbmQgd2l0aCBhbiBhbnN3ZXIgdGhhdCBzYXRpc2ZpZXMgdGhlIGNvbnN0cmFpbnRzIGxhaWQgb3V0IGluIHRoZSBJbnN0cnVjdGlvbnM6YDtcbmV4cG9ydCBjb25zdCBOQUlWRV9GSVhfUFJPTVBUID0gXG4vKiAjX19QVVJFX18gKi8gUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKE5BSVZFX0ZJWF9URU1QTEFURSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/output_parsers/prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/text_splitter.js":
/*!******************************************************!*\
  !*** ./node_modules/langchain/dist/text_splitter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CharacterTextSplitter: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.CharacterTextSplitter),\n/* harmony export */   LatexTextSplitter: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.LatexTextSplitter),\n/* harmony export */   MarkdownTextSplitter: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.MarkdownTextSplitter),\n/* harmony export */   RecursiveCharacterTextSplitter: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.RecursiveCharacterTextSplitter),\n/* harmony export */   SupportedTextSplitterLanguages: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.SupportedTextSplitterLanguages),\n/* harmony export */   TextSplitter: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.TextSplitter),\n/* harmony export */   TokenTextSplitter: () => (/* reexport safe */ _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__.TokenTextSplitter)\n/* harmony export */ });\n/* harmony import */ var _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/textsplitters */ \"(rsc)/./node_modules/@langchain/textsplitters/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdGV4dF9zcGxpdHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdGV4dF9zcGxpdHRlci5qcz9lNjliIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAbGFuZ2NoYWluL3RleHRzcGxpdHRlcnNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/text_splitter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/tools/json.js":
/*!***************************************************!*\
  !*** ./node_modules/langchain/dist/tools/json.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonGetValueTool: () => (/* binding */ JsonGetValueTool),\n/* harmony export */   JsonListKeysTool: () => (/* binding */ JsonListKeysTool),\n/* harmony export */   JsonSpec: () => (/* binding */ JsonSpec)\n/* harmony export */ });\n/* harmony import */ var jsonpointer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonpointer */ \"(rsc)/./node_modules/jsonpointer/jsonpointer.js\");\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n\n\n\n/**\n * Represents a JSON object in the LangChain framework. Provides methods\n * to get keys and values from the JSON object.\n */\nclass JsonSpec extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_1__.Serializable {\n    constructor(obj, max_value_length = 4000) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"tools\", \"json\"]\n        });\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxValueLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4000\n        });\n        this.obj = obj;\n        this.maxValueLength = max_value_length;\n    }\n    /**\n     * Retrieves all keys at a given path in the JSON object.\n     * @param input The path to the keys in the JSON object, provided as a string in JSON pointer syntax.\n     * @returns A string containing all keys at the given path, separated by commas.\n     */\n    getKeys(input) {\n        const pointer = jsonpointer__WEBPACK_IMPORTED_MODULE_0__.compile(input);\n        const res = pointer.get(this.obj);\n        if (typeof res === \"object\" && !Array.isArray(res) && res !== null) {\n            return Object.keys(res)\n                .map((i) => i.replaceAll(\"~\", \"~0\").replaceAll(\"/\", \"~1\"))\n                .join(\", \");\n        }\n        throw new Error(`Value at ${input} is not a dictionary, get the value directly instead.`);\n    }\n    /**\n     * Retrieves the value at a given path in the JSON object.\n     * @param input The path to the value in the JSON object, provided as a string in JSON pointer syntax.\n     * @returns The value at the given path in the JSON object, as a string. If the value is a large dictionary or exceeds the maximum length, a message is returned instead.\n     */\n    getValue(input) {\n        const pointer = jsonpointer__WEBPACK_IMPORTED_MODULE_0__.compile(input);\n        const res = pointer.get(this.obj);\n        if (res === null || res === undefined) {\n            throw new Error(`Value at ${input} is null or undefined.`);\n        }\n        const str = typeof res === \"object\" ? JSON.stringify(res) : res.toString();\n        if (typeof res === \"object\" &&\n            !Array.isArray(res) &&\n            str.length > this.maxValueLength) {\n            return `Value is a large dictionary, should explore its keys directly.`;\n        }\n        if (str.length > this.maxValueLength) {\n            return `${str.slice(0, this.maxValueLength)}...`;\n        }\n        return str;\n    }\n}\n/**\n * A tool in the LangChain framework that lists all keys at a given path\n * in a JSON object.\n */\nclass JsonListKeysTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__.Tool {\n    static lc_name() {\n        return \"JsonListKeysTool\";\n    }\n    constructor(fields) {\n        if (!(\"jsonSpec\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { jsonSpec: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_list_keys\"\n        });\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to list all keys at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n        this.jsonSpec = fields.jsonSpec;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getKeys(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n/**\n * A tool in the LangChain framework that retrieves the value at a given\n * path in a JSON object.\n */\nclass JsonGetValueTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__.Tool {\n    static lc_name() {\n        return \"JsonGetValueTool\";\n    }\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_get_value\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getValue(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/tools/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/tools/render.js":
/*!*****************************************************!*\
  !*** ./node_modules/langchain/dist/tools/render.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderTextDescription: () => (/* binding */ renderTextDescription),\n/* harmony export */   renderTextDescriptionAndArgs: () => (/* binding */ renderTextDescriptionAndArgs)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/zod-to-json-schema/dist/esm/index.js\");\n\n/**\n * Render the tool name and description in plain text.\n *\n * Output will be in the format of:\n * ```\n * search: This tool is used for search\n * calculator: This tool is used for math\n * ```\n * @param tools\n * @returns a string of all tools and their descriptions\n */\nfunction renderTextDescription(tools) {\n    return tools.map((tool) => `${tool.name}: ${tool.description}`).join(\"\\n\");\n}\n/**\n * Render the tool name, description, and args in plain text.\n * Output will be in the format of:'\n * ```\n * search: This tool is used for search, args: {\"query\": {\"type\": \"string\"}}\n * calculator: This tool is used for math,\n * args: {\"expression\": {\"type\": \"string\"}}\n * ```\n * @param tools\n * @returns a string of all tools, their descriptions and a stringified version of their schemas\n */\nfunction renderTextDescriptionAndArgs(tools) {\n    return tools\n        .map((tool) => `${tool.name}: ${tool.description}, args: ${JSON.stringify((0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(tool.schema).properties)}`)\n        .join(\"\\n\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvcmVuZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQ0FBa0MsVUFBVSxJQUFJLGlCQUFpQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELFVBQVU7QUFDMUQ7QUFDQSxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMEJBQTBCLFVBQVUsSUFBSSxpQkFBaUIsVUFBVSxlQUFlLG1FQUFlLDBCQUEwQjtBQUMzSDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9yZW5kZXIuanM/YjAzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6b2RUb0pzb25TY2hlbWEgfSBmcm9tIFwiem9kLXRvLWpzb24tc2NoZW1hXCI7XG4vKipcbiAqIFJlbmRlciB0aGUgdG9vbCBuYW1lIGFuZCBkZXNjcmlwdGlvbiBpbiBwbGFpbiB0ZXh0LlxuICpcbiAqIE91dHB1dCB3aWxsIGJlIGluIHRoZSBmb3JtYXQgb2Y6XG4gKiBgYGBcbiAqIHNlYXJjaDogVGhpcyB0b29sIGlzIHVzZWQgZm9yIHNlYXJjaFxuICogY2FsY3VsYXRvcjogVGhpcyB0b29sIGlzIHVzZWQgZm9yIG1hdGhcbiAqIGBgYFxuICogQHBhcmFtIHRvb2xzXG4gKiBAcmV0dXJucyBhIHN0cmluZyBvZiBhbGwgdG9vbHMgYW5kIHRoZWlyIGRlc2NyaXB0aW9uc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyVGV4dERlc2NyaXB0aW9uKHRvb2xzKSB7XG4gICAgcmV0dXJuIHRvb2xzLm1hcCgodG9vbCkgPT4gYCR7dG9vbC5uYW1lfTogJHt0b29sLmRlc2NyaXB0aW9ufWApLmpvaW4oXCJcXG5cIik7XG59XG4vKipcbiAqIFJlbmRlciB0aGUgdG9vbCBuYW1lLCBkZXNjcmlwdGlvbiwgYW5kIGFyZ3MgaW4gcGxhaW4gdGV4dC5cbiAqIE91dHB1dCB3aWxsIGJlIGluIHRoZSBmb3JtYXQgb2Y6J1xuICogYGBgXG4gKiBzZWFyY2g6IFRoaXMgdG9vbCBpcyB1c2VkIGZvciBzZWFyY2gsIGFyZ3M6IHtcInF1ZXJ5XCI6IHtcInR5cGVcIjogXCJzdHJpbmdcIn19XG4gKiBjYWxjdWxhdG9yOiBUaGlzIHRvb2wgaXMgdXNlZCBmb3IgbWF0aCxcbiAqIGFyZ3M6IHtcImV4cHJlc3Npb25cIjoge1widHlwZVwiOiBcInN0cmluZ1wifX1cbiAqIGBgYFxuICogQHBhcmFtIHRvb2xzXG4gKiBAcmV0dXJucyBhIHN0cmluZyBvZiBhbGwgdG9vbHMsIHRoZWlyIGRlc2NyaXB0aW9ucyBhbmQgYSBzdHJpbmdpZmllZCB2ZXJzaW9uIG9mIHRoZWlyIHNjaGVtYXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclRleHREZXNjcmlwdGlvbkFuZEFyZ3ModG9vbHMpIHtcbiAgICByZXR1cm4gdG9vbHNcbiAgICAgICAgLm1hcCgodG9vbCkgPT4gYCR7dG9vbC5uYW1lfTogJHt0b29sLmRlc2NyaXB0aW9ufSwgYXJnczogJHtKU09OLnN0cmluZ2lmeSh6b2RUb0pzb25TY2hlbWEodG9vbC5zY2hlbWEpLnByb3BlcnRpZXMpfWApXG4gICAgICAgIC5qb2luKFwiXFxuXCIpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/tools/render.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/tools/requests.js":
/*!*******************************************************!*\
  !*** ./node_modules/langchain/dist/tools/requests.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestsGetTool: () => (/* binding */ RequestsGetTool),\n/* harmony export */   RequestsPostTool: () => (/* binding */ RequestsPostTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n\n/**\n * Class for making GET requests. Extends the Tool class and implements\n * the RequestTool interface. The input should be a URL string, and the\n * output will be the text response of the GET request.\n */\nclass RequestsGetTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"RequestsGetTool\";\n    }\n    constructor(headers = {}, { maxOutputLength } = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"requests_get\"\n        });\n        Object.defineProperty(this, \"maxOutputLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2000\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `A portal to the internet. Use this when you need to get specific content from a website.\n  Input should be a url string (i.e. \"https://www.google.com\"). The output will be the text response of the GET request.`\n        });\n        this.maxOutputLength = maxOutputLength ?? this.maxOutputLength;\n    }\n    /** @ignore */\n    async _call(input) {\n        const res = await fetch(input, {\n            headers: this.headers,\n        });\n        const text = await res.text();\n        return text.slice(0, this.maxOutputLength);\n    }\n}\n/**\n * Class for making POST requests. Extends the Tool class and implements\n * the RequestTool interface. The input should be a JSON string with two\n * keys: 'url' and 'data'. The output will be the text response of the\n * POST request.\n */\nclass RequestsPostTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"RequestsPostTool\";\n    }\n    constructor(headers = {}, { maxOutputLength } = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"requests_post\"\n        });\n        Object.defineProperty(this, \"maxOutputLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: Infinity\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Use this when you want to POST to a website.\n  Input should be a json string with two keys: \"url\" and \"data\".\n  The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of\n  key-value pairs you want to POST to the url as a JSON body.\n  Be careful to always use double quotes for strings in the json string\n  The output will be the text response of the POST request.`\n        });\n        this.maxOutputLength = maxOutputLength ?? this.maxOutputLength;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            const { url, data } = JSON.parse(input);\n            const res = await fetch(url, {\n                method: \"POST\",\n                headers: this.headers,\n                body: JSON.stringify(data),\n            });\n            const text = await res.text();\n            return text.slice(0, this.maxOutputLength);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvcmVxdWVzdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw4QkFBOEIsdURBQUk7QUFDekM7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksa0JBQWtCLElBQUk7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLHVEQUFJO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixJQUFJLGtCQUFrQixJQUFJO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLE1BQU07QUFDNUI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9yZXF1ZXN0cy5qcz84NmJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvb2wgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG4vKipcbiAqIENsYXNzIGZvciBtYWtpbmcgR0VUIHJlcXVlc3RzLiBFeHRlbmRzIHRoZSBUb29sIGNsYXNzIGFuZCBpbXBsZW1lbnRzXG4gKiB0aGUgUmVxdWVzdFRvb2wgaW50ZXJmYWNlLiBUaGUgaW5wdXQgc2hvdWxkIGJlIGEgVVJMIHN0cmluZywgYW5kIHRoZVxuICogb3V0cHV0IHdpbGwgYmUgdGhlIHRleHQgcmVzcG9uc2Ugb2YgdGhlIEdFVCByZXF1ZXN0LlxuICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdHNHZXRUb29sIGV4dGVuZHMgVG9vbCB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlJlcXVlc3RzR2V0VG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzID0ge30sIHsgbWF4T3V0cHV0TGVuZ3RoIH0gPSB7fSkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJoZWFkZXJzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBoZWFkZXJzXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcInJlcXVlc3RzX2dldFwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtYXhPdXRwdXRMZW5ndGhcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDIwMDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBgQSBwb3J0YWwgdG8gdGhlIGludGVybmV0LiBVc2UgdGhpcyB3aGVuIHlvdSBuZWVkIHRvIGdldCBzcGVjaWZpYyBjb250ZW50IGZyb20gYSB3ZWJzaXRlLlxuICBJbnB1dCBzaG91bGQgYmUgYSB1cmwgc3RyaW5nIChpLmUuIFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbVwiKS4gVGhlIG91dHB1dCB3aWxsIGJlIHRoZSB0ZXh0IHJlc3BvbnNlIG9mIHRoZSBHRVQgcmVxdWVzdC5gXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1heE91dHB1dExlbmd0aCA9IG1heE91dHB1dExlbmd0aCA/PyB0aGlzLm1heE91dHB1dExlbmd0aDtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbChpbnB1dCkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChpbnB1dCwge1xuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKDAsIHRoaXMubWF4T3V0cHV0TGVuZ3RoKTtcbiAgICB9XG59XG4vKipcbiAqIENsYXNzIGZvciBtYWtpbmcgUE9TVCByZXF1ZXN0cy4gRXh0ZW5kcyB0aGUgVG9vbCBjbGFzcyBhbmQgaW1wbGVtZW50c1xuICogdGhlIFJlcXVlc3RUb29sIGludGVyZmFjZS4gVGhlIGlucHV0IHNob3VsZCBiZSBhIEpTT04gc3RyaW5nIHdpdGggdHdvXG4gKiBrZXlzOiAndXJsJyBhbmQgJ2RhdGEnLiBUaGUgb3V0cHV0IHdpbGwgYmUgdGhlIHRleHQgcmVzcG9uc2Ugb2YgdGhlXG4gKiBQT1NUIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBSZXF1ZXN0c1Bvc3RUb29sIGV4dGVuZHMgVG9vbCB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlJlcXVlc3RzUG9zdFRvb2xcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoaGVhZGVycyA9IHt9LCB7IG1heE91dHB1dExlbmd0aCB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogaGVhZGVyc1xuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJyZXF1ZXN0c19wb3N0XCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1heE91dHB1dExlbmd0aFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogSW5maW5pdHlcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBgVXNlIHRoaXMgd2hlbiB5b3Ugd2FudCB0byBQT1NUIHRvIGEgd2Vic2l0ZS5cbiAgSW5wdXQgc2hvdWxkIGJlIGEganNvbiBzdHJpbmcgd2l0aCB0d28ga2V5czogXCJ1cmxcIiBhbmQgXCJkYXRhXCIuXG4gIFRoZSB2YWx1ZSBvZiBcInVybFwiIHNob3VsZCBiZSBhIHN0cmluZywgYW5kIHRoZSB2YWx1ZSBvZiBcImRhdGFcIiBzaG91bGQgYmUgYSBkaWN0aW9uYXJ5IG9mXG4gIGtleS12YWx1ZSBwYWlycyB5b3Ugd2FudCB0byBQT1NUIHRvIHRoZSB1cmwgYXMgYSBKU09OIGJvZHkuXG4gIEJlIGNhcmVmdWwgdG8gYWx3YXlzIHVzZSBkb3VibGUgcXVvdGVzIGZvciBzdHJpbmdzIGluIHRoZSBqc29uIHN0cmluZ1xuICBUaGUgb3V0cHV0IHdpbGwgYmUgdGhlIHRleHQgcmVzcG9uc2Ugb2YgdGhlIFBPU1QgcmVxdWVzdC5gXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1heE91dHB1dExlbmd0aCA9IG1heE91dHB1dExlbmd0aCA/PyB0aGlzLm1heE91dHB1dExlbmd0aDtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbChpbnB1dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1cmwsIGRhdGEgfSA9IEpTT04ucGFyc2UoaW5wdXQpO1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRleHQuc2xpY2UoMCwgdGhpcy5tYXhPdXRwdXRMZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGAke2Vycm9yfWA7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/tools/requests.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/tools/vectorstore.js":
/*!**********************************************************!*\
  !*** ./node_modules/langchain/dist/tools/vectorstore.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStoreQATool: () => (/* binding */ VectorStoreQATool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _chains_vector_db_qa_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chains/vector_db_qa.js */ \"(rsc)/./node_modules/langchain/dist/chains/vector_db_qa.js\");\n\n\n/**\n * A tool for the VectorDBQA chain to interact with a Vector Store. It is\n * used to answer questions about a specific topic. The input to this tool\n * should be a fully formed question.\n */\nclass VectorStoreQATool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"VectorStoreQATool\";\n    }\n    constructor(name, description, fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n        this.description = description;\n        this.vectorStore = fields.vectorStore;\n        this.llm = fields.llm;\n        this.chain = _chains_vector_db_qa_js__WEBPACK_IMPORTED_MODULE_1__.VectorDBQAChain.fromLLM(this.llm, this.vectorStore);\n    }\n    /**\n     * Returns a string that describes what the tool does.\n     * @param name The name of the tool.\n     * @param description A description of what the tool does.\n     * @returns A string that describes what the tool does.\n     */\n    static getDescription(name, description) {\n        return `Useful for when you need to answer questions about ${name}. Whenever you need information about ${description} you should ALWAYS use this. Input should be a fully formed question.`;\n    }\n    /** @ignore */\n    async _call(input) {\n        return this.chain.run(input);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvdmVjdG9yc3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ2U7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdDQUFnQyx1REFBSTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG9FQUFlO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsS0FBSyx3Q0FBd0MsYUFBYTtBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L3Rvb2xzL3ZlY3RvcnN0b3JlLmpzPzZiYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9vbCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIjtcbmltcG9ydCB7IFZlY3RvckRCUUFDaGFpbiB9IGZyb20gXCIuLi9jaGFpbnMvdmVjdG9yX2RiX3FhLmpzXCI7XG4vKipcbiAqIEEgdG9vbCBmb3IgdGhlIFZlY3RvckRCUUEgY2hhaW4gdG8gaW50ZXJhY3Qgd2l0aCBhIFZlY3RvciBTdG9yZS4gSXQgaXNcbiAqIHVzZWQgdG8gYW5zd2VyIHF1ZXN0aW9ucyBhYm91dCBhIHNwZWNpZmljIHRvcGljLiBUaGUgaW5wdXQgdG8gdGhpcyB0b29sXG4gKiBzaG91bGQgYmUgYSBmdWxseSBmb3JtZWQgcXVlc3Rpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBWZWN0b3JTdG9yZVFBVG9vbCBleHRlbmRzIFRvb2wge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJWZWN0b3JTdG9yZVFBVG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBkZXNjcmlwdGlvbiwgZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInZlY3RvclN0b3JlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxsbVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy52ZWN0b3JTdG9yZSA9IGZpZWxkcy52ZWN0b3JTdG9yZTtcbiAgICAgICAgdGhpcy5sbG0gPSBmaWVsZHMubGxtO1xuICAgICAgICB0aGlzLmNoYWluID0gVmVjdG9yREJRQUNoYWluLmZyb21MTE0odGhpcy5sbG0sIHRoaXMudmVjdG9yU3RvcmUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc3RyaW5nIHRoYXQgZGVzY3JpYmVzIHdoYXQgdGhlIHRvb2wgZG9lcy5cbiAgICAgKiBAcGFyYW0gbmFtZSBUaGUgbmFtZSBvZiB0aGUgdG9vbC5cbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gQSBkZXNjcmlwdGlvbiBvZiB3aGF0IHRoZSB0b29sIGRvZXMuXG4gICAgICogQHJldHVybnMgQSBzdHJpbmcgdGhhdCBkZXNjcmliZXMgd2hhdCB0aGUgdG9vbCBkb2VzLlxuICAgICAqL1xuICAgIHN0YXRpYyBnZXREZXNjcmlwdGlvbihuYW1lLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gYFVzZWZ1bCBmb3Igd2hlbiB5b3UgbmVlZCB0byBhbnN3ZXIgcXVlc3Rpb25zIGFib3V0ICR7bmFtZX0uIFdoZW5ldmVyIHlvdSBuZWVkIGluZm9ybWF0aW9uIGFib3V0ICR7ZGVzY3JpcHRpb259IHlvdSBzaG91bGQgQUxXQVlTIHVzZSB0aGlzLiBJbnB1dCBzaG91bGQgYmUgYSBmdWxseSBmb3JtZWQgcXVlc3Rpb24uYDtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbChpbnB1dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGFpbi5ydW4oaW5wdXQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/tools/vectorstore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/tools/webbrowser.js":
/*!*********************************************************!*\
  !*** ./node_modules/langchain/dist/tools/webbrowser.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebBrowser: () => (/* binding */ WebBrowser),\n/* harmony export */   getText: () => (/* binding */ getText),\n/* harmony export */   parseInputs: () => (/* binding */ parseInputs)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_documents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/documents */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/documents.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/esm/index.js\");\n/* harmony import */ var _langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/utils/env */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/env.js\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js\");\n/* harmony import */ var _text_splitter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../text_splitter.js */ \"(rsc)/./node_modules/langchain/dist/text_splitter.js\");\n/* harmony import */ var _vectorstores_memory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../vectorstores/memory.js */ \"(rsc)/./node_modules/langchain/dist/vectorstores/memory.js\");\n/* harmony import */ var _util_axios_fetch_adapter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/axios-fetch-adapter.js */ \"(rsc)/./node_modules/langchain/dist/util/axios-fetch-adapter.js\");\n/* harmony import */ var _util_document_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/document.js */ \"(rsc)/./node_modules/langchain/dist/util/document.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst parseInputs = (inputs) => {\n    const [baseUrl, task] = inputs.split(\",\").map((input) => {\n        let t = input.trim();\n        t = t.startsWith('\"') ? t.slice(1) : t;\n        t = t.endsWith('\"') ? t.slice(0, -1) : t;\n        // it likes to put / at the end of urls, wont matter for task\n        t = t.endsWith(\"/\") ? t.slice(0, -1) : t;\n        return t.trim();\n    });\n    return [baseUrl, task];\n};\nconst getText = (html, baseUrl, summary) => {\n    // scriptingEnabled so noscript elements are parsed\n    const $ = cheerio__WEBPACK_IMPORTED_MODULE_1__.load(html, { scriptingEnabled: true });\n    let text = \"\";\n    // lets only get the body if its a summary, dont need to summarize header or footer etc\n    const rootElement = summary ? \"body \" : \"*\";\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    $(`${rootElement}:not(style):not(script):not(svg)`).each((_i, elem) => {\n        // we dont want duplicated content as we drill down so remove children\n        let content = $(elem).clone().children().remove().end().text().trim();\n        const $el = $(elem);\n        // if its an ahref, print the content and url\n        let href = $el.attr(\"href\");\n        if ($el.prop(\"tagName\")?.toLowerCase() === \"a\" && href) {\n            if (!href.startsWith(\"http\")) {\n                try {\n                    href = new URL(href, baseUrl).toString();\n                }\n                catch {\n                    // if this fails thats fine, just no url for this\n                    href = \"\";\n                }\n            }\n            const imgAlt = $el.find(\"img[alt]\").attr(\"alt\")?.trim();\n            if (imgAlt) {\n                content += ` ${imgAlt}`;\n            }\n            text += ` [${content}](${href})`;\n        }\n        // otherwise just print the content\n        else if (content !== \"\") {\n            text += ` ${content}`;\n        }\n    });\n    return text.trim().replace(/\\n+/g, \" \");\n};\nconst getHtml = async (baseUrl, h, config) => {\n    const axios = (\"default\" in axios__WEBPACK_IMPORTED_MODULE_10__[\"default\"] ? axios__WEBPACK_IMPORTED_MODULE_10__[\"default\"][\"default\"] : axios__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n    const domain = new URL(baseUrl).hostname;\n    const headers = { ...h };\n    // these appear to be positional, which means they have to exist in the headers passed in\n    headers.Host = domain;\n    headers[\"Alt-Used\"] = domain;\n    let htmlResponse;\n    try {\n        htmlResponse = await axios.get(baseUrl, {\n            ...config,\n            headers,\n        });\n    }\n    catch (e) {\n        if (axios.isAxiosError(e) && e.response && e.response.status) {\n            throw new Error(`http response ${e.response.status}`);\n        }\n        throw e;\n    }\n    const allowedContentTypes = [\n        \"text/html\",\n        \"application/json\",\n        \"application/xml\",\n        \"application/javascript\",\n        \"text/plain\",\n    ];\n    const contentType = htmlResponse.headers[\"content-type\"];\n    const contentTypeArray = contentType.split(\";\");\n    if (contentTypeArray[0] &&\n        !allowedContentTypes.includes(contentTypeArray[0])) {\n        throw new Error(\"returned page was not utf8\");\n    }\n    return htmlResponse.data;\n};\nconst DEFAULT_HEADERS = {\n    Accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Accept-Language\": \"en-US,en;q=0.5\",\n    \"Alt-Used\": \"LEAVE-THIS-KEY-SET-BY-TOOL\",\n    Connection: \"keep-alive\",\n    Host: \"LEAVE-THIS-KEY-SET-BY-TOOL\",\n    Referer: \"https://www.google.com/\",\n    \"Sec-Fetch-Dest\": \"document\",\n    \"Sec-Fetch-Mode\": \"navigate\",\n    \"Sec-Fetch-Site\": \"cross-site\",\n    \"Upgrade-Insecure-Requests\": \"1\",\n    \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/111.0\",\n};\n/**\n * A class designed to interact with web pages, either to extract\n * information from them or to summarize their content. It uses the axios\n * library to send HTTP requests and the cheerio library to parse the\n * returned HTML.\n * @example\n * ```typescript\n * const browser = new WebBrowser({\n *   model: new ChatOpenAI({ temperature: 0 }),\n *   embeddings: new OpenAIEmbeddings({}),\n * });\n * const result = await browser.invoke(\"https:exampleurl.com\");\n * ```\n */\nclass WebBrowser extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_3__.Tool {\n    static lc_name() {\n        return \"WebBrowser\";\n    }\n    get lc_namespace() {\n        return [...super.lc_namespace, \"webbrowser\"];\n    }\n    constructor({ model, headers, embeddings, axiosConfig, textSplitter, }) {\n        super(...arguments);\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"embeddings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"axiosConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textSplitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"web-browser\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `useful for when you need to find something on or summarize a webpage. input should be a comma separated list of \"ONE valid http URL including protocol\",\"what you want to find on the page or empty string for a summary\".`\n        });\n        this.model = model;\n        this.embeddings = embeddings;\n        this.headers = headers ?? DEFAULT_HEADERS;\n        this.axiosConfig = {\n            withCredentials: true,\n            adapter: (0,_langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_2__.isNode)() ? undefined : _util_axios_fetch_adapter_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n            ...axiosConfig,\n        };\n        this.textSplitter =\n            textSplitter ??\n                new _text_splitter_js__WEBPACK_IMPORTED_MODULE_6__.RecursiveCharacterTextSplitter({\n                    chunkSize: 2000,\n                    chunkOverlap: 200,\n                });\n    }\n    /** @ignore */\n    async _call(inputs, runManager) {\n        const [baseUrl, task] = parseInputs(inputs);\n        const doSummary = !task;\n        let text;\n        try {\n            const html = await getHtml(baseUrl, this.headers, this.axiosConfig);\n            text = getText(html, baseUrl, doSummary);\n        }\n        catch (e) {\n            if (e) {\n                return e.toString();\n            }\n            return \"There was a problem connecting to the site\";\n        }\n        const texts = await this.textSplitter.splitText(text);\n        let context;\n        // if we want a summary grab first 4\n        if (doSummary) {\n            context = texts.slice(0, 4).join(\"\\n\");\n        }\n        // search term well embed and grab top 4\n        else {\n            const docs = texts.map((pageContent) => new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_0__.Document({\n                pageContent,\n                metadata: [],\n            }));\n            const vectorStore = await _vectorstores_memory_js__WEBPACK_IMPORTED_MODULE_7__.MemoryVectorStore.fromDocuments(docs, this.embeddings);\n            const results = await vectorStore.similaritySearch(task, 4, undefined, runManager?.getChild(\"vectorstore\"));\n            context = (0,_util_document_js__WEBPACK_IMPORTED_MODULE_9__.formatDocumentsAsString)(results);\n        }\n        const input = `Text:${context}\\n\\nI need ${doSummary ? \"a summary\" : task} from the above text, also provide up to 5 markdown links from within that would be of interest (always including URL and text). Links should be provided, if present, in markdown syntax as a list under the heading \"Relevant Links:\".`;\n        const chain = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_4__.RunnableSequence.from([this.model, new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_5__.StringOutputParser()]);\n        return chain.invoke(input, runManager?.getChild());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/tools/webbrowser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/tools/zapier.js":
/*!*****************************************************!*\
  !*** ./node_modules/langchain/dist/tools/zapier.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZapierNLARunAction: () => (/* binding */ ZapierNLARunAction),\n/* harmony export */   ZapierNLAWrapper: () => (/* binding */ ZapierNLAWrapper)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_utils_async_caller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/utils/async_caller */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/async_caller.js\");\n/* harmony import */ var _langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/core/utils/env */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/env.js\");\n\n\n\n\n\nconst zapierNLABaseDescription = \"A wrapper around Zapier NLA actions. \" +\n    \"The input to this tool is a natural language instruction, \" +\n    'for example \"get the latest email from my bank\" or ' +\n    '\"send a slack message to the #general channel\". ' +\n    \"Each tool will have params associated with it that are specified as a list. You MUST take into account the params when creating the instruction. \" +\n    \"For example, if the params are ['Message_Text', 'Channel'], your instruction should be something like 'send a slack message to the #general channel with the text hello world'. \" +\n    \"Another example: if the params are ['Calendar', 'Search_Term'], your instruction should be something like 'find the meeting in my personal calendar at 3pm'. \" +\n    \"Do not make up params, they will be explicitly specified in the tool description. \" +\n    \"If you do not have enough information to fill in the params, just say 'not enough information provided in the instruction, missing <param>'. \" +\n    \"If you get a none or null response, STOP EXECUTION, do not try to another tool! \" +\n    \"This tool specifically used for: {zapier_description}, \" +\n    \"and has params: {params}\";\n/**\n * @deprecated Zapier has sunsetted the NLA API.\n * A wrapper class for Zapier's Natural Language Actions (NLA). It\n * provides an interface to interact with the 5k+ apps and 20k+ actions on\n * Zapier's platform through a natural language API interface. This\n * includes apps like Gmail, Salesforce, Trello, Slack, Asana, HubSpot,\n * Google Sheets, Microsoft Teams, and many more.\n */\nclass ZapierNLAWrapper extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    get lc_secrets() {\n        return {\n            apiKey: \"ZAPIER_NLA_API_KEY\",\n        };\n    }\n    constructor(params) {\n        super(params);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"tools\", \"zapier\"]\n        });\n        Object.defineProperty(this, \"zapierNlaApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"zapierNlaOAuthAccessToken\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"zapierNlaApiBase\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"https://nla.zapier.com/api/v1/\"\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const zapierNlaOAuthAccessToken = params?.oauthAccessToken;\n        const zapierNlaApiKey = params?.apiKey;\n        const oauthAccessToken = zapierNlaOAuthAccessToken ??\n            (0,_langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"ZAPIER_NLA_OAUTH_ACCESS_TOKEN\");\n        const apiKey = zapierNlaApiKey ?? (0,_langchain_core_utils_env__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"ZAPIER_NLA_API_KEY\");\n        if (!apiKey && !oauthAccessToken) {\n            throw new Error(\"Neither ZAPIER_NLA_OAUTH_ACCESS_TOKEN or ZAPIER_NLA_API_KEY are set\");\n        }\n        if (oauthAccessToken) {\n            this.zapierNlaOAuthAccessToken = oauthAccessToken;\n        }\n        else {\n            this.zapierNlaApiKey = apiKey;\n        }\n        this.caller = new _langchain_core_utils_async_caller__WEBPACK_IMPORTED_MODULE_3__.AsyncCaller(typeof params === \"string\" ? {} : params ?? {});\n    }\n    _getHeaders() {\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        if (this.zapierNlaOAuthAccessToken) {\n            headers.Authorization = `Bearer ${this.zapierNlaOAuthAccessToken}`;\n        }\n        else {\n            headers[\"x-api-key\"] = this.zapierNlaApiKey;\n        }\n        return headers;\n    }\n    async _getActionRequest(actionId, instructions, params) {\n        const data = params ?? {};\n        data.instructions = instructions;\n        const headers = this._getHeaders();\n        // add api key to params\n        const resp = await this.caller.call(fetch, `${this.zapierNlaApiBase}exposed/${actionId}/execute/`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(data),\n        });\n        if (!resp.ok) {\n            throw new Error(`Failed to execute action ${actionId} with instructions ${instructions}`);\n        }\n        const jsonResp = await resp.json();\n        if (jsonResp.status === \"error\") {\n            throw new Error(`Error from Zapier: ${jsonResp.error}`);\n        }\n        return jsonResp;\n    }\n    /**\n     * Executes an action that is identified by action_id, must be exposed\n     * (enabled) by the current user (associated with the set api_key or access token).\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async runAction(actionId, instructions, params) {\n        const resp = await this._getActionRequest(actionId, instructions, params);\n        return resp.status === \"error\" ? resp.error : resp.result;\n    }\n    /**\n     * Same as run, but instead of actually executing the action, will\n     * instead return a preview of params that have been guessed by the AI in\n     * case you need to explicitly review before executing.\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async previewAction(actionId, instructions, params) {\n        const data = params ?? {};\n        data.preview_only = true;\n        const resp = await this._getActionRequest(actionId, instructions, data);\n        return resp.input_params;\n    }\n    /**\n     * Returns a list of all exposed (enabled) actions associated with\n     * current user (associated with the set api_key or access token).\n     */\n    async listActions() {\n        const headers = this._getHeaders();\n        const resp = await this.caller.call(fetch, `${this.zapierNlaApiBase}exposed/`, {\n            method: \"GET\",\n            headers,\n        });\n        if (!resp.ok) {\n            if (resp.status === 401) {\n                if (this.zapierNlaOAuthAccessToken) {\n                    throw new Error(\"A 401 Unauthorized error was returned. Check that your access token is correct and doesn't need to be refreshed.\");\n                }\n                throw new Error(\"A 401 Unauthorized error was returned. Check that your API Key is correct.\");\n            }\n            throw new Error(\"Failed to list actions\");\n        }\n        return (await resp.json()).results;\n    }\n    /**\n     * Same as run, but returns a stringified version of the result.\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async runAsString(actionId, instructions, params) {\n        const result = await this.runAction(actionId, instructions, params);\n        return JSON.stringify(result);\n    }\n    /**\n     * Same as preview, but returns a stringified version of the result.\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async previewAsString(actionId, instructions, params) {\n        const result = await this.previewAction(actionId, instructions, params);\n        return JSON.stringify(result);\n    }\n    /**\n     * Same as list, but returns a stringified version of the result.\n     */\n    async listActionsAsString() {\n        const result = await this.listActions();\n        return JSON.stringify(result);\n    }\n}\n/**\n * @deprecated Zapier has sunsetted the NLA API.\n * A tool that uses the `ZapierNLAWrapper` to run a specific action. It\n * takes in the `ZapierNLAWrapper` instance, an action ID, a description,\n * a schema for the parameters, and optionally the parameters themselves.\n */\nclass ZapierNLARunAction extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_1__.Tool {\n    static lc_name() {\n        return \"ZapierNLARunAction\";\n    }\n    constructor(apiWrapper, actionId, zapierDescription, paramsSchema, params) {\n        super();\n        Object.defineProperty(this, \"apiWrapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"actionId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.apiWrapper = apiWrapper;\n        this.actionId = actionId;\n        this.params = params;\n        this.name = zapierDescription;\n        const paramsSchemaWithoutInstructions = { ...paramsSchema };\n        delete paramsSchemaWithoutInstructions.instructions;\n        const paramsSchemaKeysString = JSON.stringify(Object.keys(paramsSchemaWithoutInstructions));\n        this.description = (0,_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_2__.renderTemplate)(zapierNLABaseDescription, \"f-string\", {\n            zapier_description: zapierDescription,\n            params: paramsSchemaKeysString,\n        });\n    }\n    /** @ignore */\n    async _call(arg) {\n        return this.apiWrapper.runAsString(this.actionId, arg, this.params);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/tools/zapier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/util/axios-fetch-adapter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/langchain/dist/util/axios-fetch-adapter.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fetchAdapter)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event-source-parse.js */ \"(rsc)/./node_modules/langchain/dist/util/event-source-parse.js\");\n/* eslint-disable no-plusplus */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-arrow-callback */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-extraneous-dependencies */\n/**\n * This is copied from @vespaiach/axios-fetch-adapter, which exposes an ESM\n * module without setting the \"type\" field in package.json.\n */\n\n\nfunction tryJsonStringify(data) {\n    try {\n        return JSON.stringify(data);\n    }\n    catch (e) {\n        return data;\n    }\n}\n/**\n * In order to avoid import issues with axios 1.x, copying here the internal\n * utility functions that we used to import directly from axios.\n */\n// Copied from axios/lib/core/settle.js\nfunction settle(resolve, reject, response) {\n    const { validateStatus } = response.config;\n    if (!response.status || !validateStatus || validateStatus(response.status)) {\n        resolve(response);\n    }\n    else {\n        reject(createError(`Request failed with status code ${response.status} and body ${typeof response.data === \"string\"\n            ? response.data\n            : tryJsonStringify(response.data)}`, response.config, null, response.request, response));\n    }\n}\n// Copied from axios/lib/helpers/isAbsoluteURL.js\nfunction isAbsoluteURL(url) {\n    // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n    // by any combination of letters, digits, plus, period, or hyphen.\n    return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n// Copied from axios/lib/helpers/combineURLs.js\nfunction combineURLs(baseURL, relativeURL) {\n    return relativeURL\n        ? baseURL.replace(/\\/+$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\")\n        : baseURL;\n}\n// Copied from axios/lib/helpers/buildURL.js\nfunction encode(val) {\n    return encodeURIComponent(val)\n        .replace(/%3A/gi, \":\")\n        .replace(/%24/g, \"$\")\n        .replace(/%2C/gi, \",\")\n        .replace(/%20/g, \"+\")\n        .replace(/%5B/gi, \"[\")\n        .replace(/%5D/gi, \"]\");\n}\nfunction buildURL(url, params, paramsSerializer) {\n    if (!params) {\n        return url;\n    }\n    var serializedParams;\n    if (paramsSerializer) {\n        serializedParams = paramsSerializer(params);\n    }\n    else if (isURLSearchParams(params)) {\n        serializedParams = params.toString();\n    }\n    else {\n        var parts = [];\n        forEach(params, function serialize(val, key) {\n            if (val === null || typeof val === \"undefined\") {\n                return;\n            }\n            if (isArray(val)) {\n                key = `${key}[]`;\n            }\n            else {\n                val = [val];\n            }\n            forEach(val, function parseValue(v) {\n                if (isDate(v)) {\n                    v = v.toISOString();\n                }\n                else if (isObject(v)) {\n                    v = JSON.stringify(v);\n                }\n                parts.push(`${encode(key)}=${encode(v)}`);\n            });\n        });\n        serializedParams = parts.join(\"&\");\n    }\n    if (serializedParams) {\n        var hashmarkIndex = url.indexOf(\"#\");\n        if (hashmarkIndex !== -1) {\n            url = url.slice(0, hashmarkIndex);\n        }\n        url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + serializedParams;\n    }\n    return url;\n}\n// Copied from axios/lib/core/buildFullPath.js\nfunction buildFullPath(baseURL, requestedURL) {\n    if (baseURL && !isAbsoluteURL(requestedURL)) {\n        return combineURLs(baseURL, requestedURL);\n    }\n    return requestedURL;\n}\n// Copied from axios/lib/utils.js\nfunction isUndefined(val) {\n    return typeof val === \"undefined\";\n}\nfunction isObject(val) {\n    return val !== null && typeof val === \"object\";\n}\nfunction isDate(val) {\n    return toString.call(val) === \"[object Date]\";\n}\nfunction isURLSearchParams(val) {\n    return toString.call(val) === \"[object URLSearchParams]\";\n}\nfunction isArray(val) {\n    return Array.isArray(val);\n}\nfunction forEach(obj, fn) {\n    // Don't bother if no value provided\n    if (obj === null || typeof obj === \"undefined\") {\n        return;\n    }\n    // Force an array if not already something iterable\n    if (typeof obj !== \"object\") {\n        obj = [obj];\n    }\n    if (isArray(obj)) {\n        // Iterate over array values\n        for (var i = 0, l = obj.length; i < l; i++) {\n            fn.call(null, obj[i], i, obj);\n        }\n    }\n    else {\n        // Iterate over object keys\n        for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                fn.call(null, obj[key], key, obj);\n            }\n        }\n    }\n}\nfunction isFormData(val) {\n    return toString.call(val) === \"[object FormData]\";\n}\n// TODO this needs to be fixed to run in newer browser-like environments\n// https://github.com/vespaiach/axios-fetch-adapter/issues/20#issue-1396365322\nfunction isStandardBrowserEnv() {\n    if (typeof navigator !== \"undefined\" &&\n        // eslint-disable-next-line no-undef\n        (navigator.product === \"ReactNative\" ||\n            // eslint-disable-next-line no-undef\n            navigator.product === \"NativeScript\" ||\n            // eslint-disable-next-line no-undef\n            navigator.product === \"NS\")) {\n        return false;\n    }\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\";\n}\n/**\n * - Create a request object\n * - Get response body\n * - Check if timeout\n */\nasync function fetchAdapter(config) {\n    const request = createRequest(config);\n    const data = await getResponse(request, config);\n    return new Promise((resolve, reject) => {\n        if (data instanceof Error) {\n            reject(data);\n        }\n        else {\n            // eslint-disable-next-line no-unused-expressions\n            Object.prototype.toString.call(config.settle) === \"[object Function]\"\n                ? config.settle(resolve, reject, data)\n                : settle(resolve, reject, data);\n        }\n    });\n}\n/**\n * Fetch API stage two is to get response body. This funtion tries to retrieve\n * response body based on response's type\n */\nasync function getResponse(request, config) {\n    let stageOne;\n    try {\n        stageOne = await fetch(request);\n    }\n    catch (e) {\n        if (e && e.name === \"AbortError\") {\n            return createError(\"Request aborted\", config, \"ECONNABORTED\", request);\n        }\n        if (e && e.name === \"TimeoutError\") {\n            return createError(\"Request timeout\", config, \"ECONNABORTED\", request);\n        }\n        return createError(\"Network Error\", config, \"ERR_NETWORK\", request);\n    }\n    const headers = {};\n    stageOne.headers.forEach((value, key) => {\n        headers[key] = value;\n    });\n    const response = {\n        ok: stageOne.ok,\n        status: stageOne.status,\n        statusText: stageOne.statusText,\n        headers,\n        config,\n        request,\n    };\n    if (stageOne.status >= 200 && stageOne.status !== 204) {\n        if (config.responseType === \"stream\") {\n            const contentType = stageOne.headers.get(\"content-type\");\n            if (!contentType?.startsWith(_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.EventStreamContentType)) {\n                // If the content-type is not stream, response is most likely an error\n                if (stageOne.status >= 400) {\n                    // If the error is a JSON, parse it. Otherwise, return as text\n                    if (contentType?.startsWith(\"application/json\")) {\n                        response.data = await stageOne.json();\n                        return response;\n                    }\n                    else {\n                        response.data = await stageOne.text();\n                        return response;\n                    }\n                }\n                // If the non-stream response is also not an error, throw\n                throw new Error(`Expected content-type to be ${_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.EventStreamContentType}, Actual: ${contentType}`);\n            }\n            await (0,_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.getBytes)(stageOne.body, (0,_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.getLines)((0,_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.getMessages)(config.onmessage)));\n        }\n        else {\n            switch (config.responseType) {\n                case \"arraybuffer\":\n                    response.data = await stageOne.arrayBuffer();\n                    break;\n                case \"blob\":\n                    response.data = await stageOne.blob();\n                    break;\n                case \"json\":\n                    response.data = await stageOne.json();\n                    break;\n                case \"formData\":\n                    response.data = await stageOne.formData();\n                    break;\n                default:\n                    response.data = await stageOne.text();\n                    break;\n            }\n        }\n    }\n    return response;\n}\n/**\n * This function will create a Request object based on configuration's axios\n */\nfunction createRequest(config) {\n    const headers = new Headers(config.headers);\n    // HTTP basic authentication\n    if (config.auth) {\n        const username = config.auth.username || \"\";\n        const password = config.auth.password\n            ? decodeURI(encodeURIComponent(config.auth.password))\n            : \"\";\n        headers.set(\"Authorization\", `Basic ${btoa(`${username}:${password}`)}`);\n    }\n    const method = config.method.toUpperCase();\n    const options = {\n        headers,\n        method,\n    };\n    if (method !== \"GET\" && method !== \"HEAD\") {\n        options.body = config.data;\n        // In these cases the browser will automatically set the correct Content-Type,\n        // but only if that header hasn't been set yet. So that's why we're deleting it.\n        if (isFormData(options.body) && isStandardBrowserEnv()) {\n            headers.delete(\"Content-Type\");\n        }\n    }\n    // Some `fetch` implementations will override the Content-Type to text/plain\n    // when body is a string.\n    // See https://github.com/langchain-ai/langchainjs/issues/1010\n    if (typeof options.body === \"string\") {\n        options.body = new TextEncoder().encode(options.body);\n    }\n    if (config.mode) {\n        options.mode = config.mode;\n    }\n    if (config.cache) {\n        options.cache = config.cache;\n    }\n    if (config.integrity) {\n        options.integrity = config.integrity;\n    }\n    if (config.redirect) {\n        options.redirect = config.redirect;\n    }\n    if (config.referrer) {\n        options.referrer = config.referrer;\n    }\n    if (config.timeout && config.timeout > 0) {\n        options.signal = AbortSignal.timeout(config.timeout);\n    }\n    if (config.signal) {\n        // this overrides the timeout signal if both are set\n        options.signal = config.signal;\n    }\n    // This config is similar to XHR’s withCredentials flag, but with three available values instead of two.\n    // So if withCredentials is not set, default value 'same-origin' will be used\n    if (!isUndefined(config.withCredentials)) {\n        options.credentials = config.withCredentials ? \"include\" : \"omit\";\n    }\n    // for streaming\n    if (config.responseType === \"stream\") {\n        options.headers.set(\"Accept\", _event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.EventStreamContentType);\n    }\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const url = buildURL(fullPath, config.params, config.paramsSerializer);\n    // Expected browser to throw error if there is any wrong configuration value\n    return new Request(url, options);\n}\n/**\n * Note:\n *\n *   From version >= 0.27.0, createError function is replaced by AxiosError class.\n *   So I copy the old createError function here for backward compatible.\n *\n *\n *\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction createError(message, config, code, request, response) {\n    if (axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AxiosError && typeof axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AxiosError === \"function\") {\n        return new axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AxiosError(message, axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AxiosError[code], config, request, response);\n    }\n    const error = new Error(message);\n    return enhanceError(error, config, code, request, response);\n}\n/**\n *\n * Note:\n *\n *   This function is for backward compatible.\n *\n *\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nfunction enhanceError(error, config, code, request, response) {\n    error.config = config;\n    if (code) {\n        error.code = code;\n    }\n    error.request = request;\n    error.response = response;\n    error.isAxiosError = true;\n    error.toJSON = function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: this.description,\n            number: this.number,\n            // Mozilla\n            fileName: this.fileName,\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            stack: this.stack,\n            // Axios\n            config: this.config,\n            code: this.code,\n            status: this.response && this.response.status ? this.response.status : null,\n        };\n    };\n    return error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/util/axios-fetch-adapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/util/document.js":
/*!******************************************************!*\
  !*** ./node_modules/langchain/dist/util/document.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDocumentsAsString: () => (/* binding */ formatDocumentsAsString)\n/* harmony export */ });\n/**\n * Given a list of documents, this util formats their contents\n * into a string, separated by newlines.\n *\n * @param documents\n * @returns A string of the documents page content, separated by newlines.\n */\nconst formatDocumentsAsString = (documents) => documents.map((doc) => doc.pageContent).join(\"\\n\\n\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdXRpbC9kb2N1bWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdXRpbC9kb2N1bWVudC5qcz9jMzAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYSBsaXN0IG9mIGRvY3VtZW50cywgdGhpcyB1dGlsIGZvcm1hdHMgdGhlaXIgY29udGVudHNcbiAqIGludG8gYSBzdHJpbmcsIHNlcGFyYXRlZCBieSBuZXdsaW5lcy5cbiAqXG4gKiBAcGFyYW0gZG9jdW1lbnRzXG4gKiBAcmV0dXJucyBBIHN0cmluZyBvZiB0aGUgZG9jdW1lbnRzIHBhZ2UgY29udGVudCwgc2VwYXJhdGVkIGJ5IG5ld2xpbmVzLlxuICovXG5leHBvcnQgY29uc3QgZm9ybWF0RG9jdW1lbnRzQXNTdHJpbmcgPSAoZG9jdW1lbnRzKSA9PiBkb2N1bWVudHMubWFwKChkb2MpID0+IGRvYy5wYWdlQ29udGVudCkuam9pbihcIlxcblxcblwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/util/document.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/util/event-source-parse.js":
/*!****************************************************************!*\
  !*** ./node_modules/langchain/dist/util/event-source-parse.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventStreamContentType: () => (/* reexport safe */ _langchain_community_utils_event_source_parse__WEBPACK_IMPORTED_MODULE_0__.EventStreamContentType),\n/* harmony export */   convertEventStreamToIterableReadableDataStream: () => (/* reexport safe */ _langchain_community_utils_event_source_parse__WEBPACK_IMPORTED_MODULE_0__.convertEventStreamToIterableReadableDataStream),\n/* harmony export */   getBytes: () => (/* reexport safe */ _langchain_community_utils_event_source_parse__WEBPACK_IMPORTED_MODULE_0__.getBytes),\n/* harmony export */   getLines: () => (/* reexport safe */ _langchain_community_utils_event_source_parse__WEBPACK_IMPORTED_MODULE_0__.getLines),\n/* harmony export */   getMessages: () => (/* reexport safe */ _langchain_community_utils_event_source_parse__WEBPACK_IMPORTED_MODULE_0__.getMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_community_utils_event_source_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/community/utils/event_source_parse */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/utils/event_source_parse.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdXRpbC9ldmVudC1zb3VyY2UtcGFyc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC91dGlsL2V2ZW50LXNvdXJjZS1wYXJzZS5qcz8zZDNjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAbGFuZ2NoYWluL2NvbW11bml0eS91dGlscy9ldmVudF9zb3VyY2VfcGFyc2VcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/util/event-source-parse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/util/set.js":
/*!*************************************************!*\
  !*** ./node_modules/langchain/dist/util/set.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   difference: () => (/* binding */ difference),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#implementing_basic_set_operations\n */\n/**\n * returns intersection of two sets\n */\nfunction intersection(setA, setB) {\n    const _intersection = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem);\n        }\n    }\n    return _intersection;\n}\n/**\n * returns union of two sets\n */\nfunction union(setA, setB) {\n    const _union = new Set(setA);\n    for (const elem of setB) {\n        _union.add(elem);\n    }\n    return _union;\n}\n/**\n * returns difference of two sets\n */\nfunction difference(setA, setB) {\n    const _difference = new Set(setA);\n    for (const elem of setB) {\n        _difference.delete(elem);\n    }\n    return _difference;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdXRpbC9zZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdXRpbC9zZXQuanM/N2E1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNvdXJjZTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU2V0I2ltcGxlbWVudGluZ19iYXNpY19zZXRfb3BlcmF0aW9uc1xuICovXG4vKipcbiAqIHJldHVybnMgaW50ZXJzZWN0aW9uIG9mIHR3byBzZXRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnNlY3Rpb24oc2V0QSwgc2V0Qikge1xuICAgIGNvbnN0IF9pbnRlcnNlY3Rpb24gPSBuZXcgU2V0KCk7XG4gICAgZm9yIChjb25zdCBlbGVtIG9mIHNldEIpIHtcbiAgICAgICAgaWYgKHNldEEuaGFzKGVsZW0pKSB7XG4gICAgICAgICAgICBfaW50ZXJzZWN0aW9uLmFkZChlbGVtKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gX2ludGVyc2VjdGlvbjtcbn1cbi8qKlxuICogcmV0dXJucyB1bmlvbiBvZiB0d28gc2V0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gdW5pb24oc2V0QSwgc2V0Qikge1xuICAgIGNvbnN0IF91bmlvbiA9IG5ldyBTZXQoc2V0QSk7XG4gICAgZm9yIChjb25zdCBlbGVtIG9mIHNldEIpIHtcbiAgICAgICAgX3VuaW9uLmFkZChlbGVtKTtcbiAgICB9XG4gICAgcmV0dXJuIF91bmlvbjtcbn1cbi8qKlxuICogcmV0dXJucyBkaWZmZXJlbmNlIG9mIHR3byBzZXRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkaWZmZXJlbmNlKHNldEEsIHNldEIpIHtcbiAgICBjb25zdCBfZGlmZmVyZW5jZSA9IG5ldyBTZXQoc2V0QSk7XG4gICAgZm9yIChjb25zdCBlbGVtIG9mIHNldEIpIHtcbiAgICAgICAgX2RpZmZlcmVuY2UuZGVsZXRlKGVsZW0pO1xuICAgIH1cbiAgICByZXR1cm4gX2RpZmZlcmVuY2U7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/util/set.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/dist/vectorstores/memory.js":
/*!************************************************************!*\
  !*** ./node_modules/langchain/dist/vectorstores/memory.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryVectorStore: () => (/* binding */ MemoryVectorStore)\n/* harmony export */ });\n/* harmony import */ var ml_distance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ml-distance */ \"(rsc)/./node_modules/ml-distance/lib-esm/index.js\");\n/* harmony import */ var _langchain_core_vectorstores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/vectorstores */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/vectorstores.js\");\n/* harmony import */ var _langchain_core_documents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/documents */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/documents.js\");\n\n\n\n/**\n * Class that extends `VectorStore` to store vectors in memory. Provides\n * methods for adding documents, performing similarity searches, and\n * creating instances from texts, documents, or an existing index.\n */\nclass MemoryVectorStore extends _langchain_core_vectorstores__WEBPACK_IMPORTED_MODULE_1__.VectorStore {\n    _vectorstoreType() {\n        return \"memory\";\n    }\n    constructor(embeddings, { similarity, ...rest } = {}) {\n        super(embeddings, rest);\n        Object.defineProperty(this, \"memoryVectors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"similarity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.similarity = similarity ?? ml_distance__WEBPACK_IMPORTED_MODULE_0__.similarity.cosine;\n    }\n    /**\n     * Method to add documents to the memory vector store. It extracts the\n     * text from each document, generates embeddings for them, and adds the\n     * resulting vectors to the store.\n     * @param documents Array of `Document` instances to be added to the store.\n     * @returns Promise that resolves when all documents have been added.\n     */\n    async addDocuments(documents) {\n        const texts = documents.map(({ pageContent }) => pageContent);\n        return this.addVectors(await this.embeddings.embedDocuments(texts), documents);\n    }\n    /**\n     * Method to add vectors to the memory vector store. It creates\n     * `MemoryVector` instances for each vector and document pair and adds\n     * them to the store.\n     * @param vectors Array of vectors to be added to the store.\n     * @param documents Array of `Document` instances corresponding to the vectors.\n     * @returns Promise that resolves when all vectors have been added.\n     */\n    async addVectors(vectors, documents) {\n        const memoryVectors = vectors.map((embedding, idx) => ({\n            content: documents[idx].pageContent,\n            embedding,\n            metadata: documents[idx].metadata,\n        }));\n        this.memoryVectors = this.memoryVectors.concat(memoryVectors);\n    }\n    /**\n     * Method to perform a similarity search in the memory vector store. It\n     * calculates the similarity between the query vector and each vector in\n     * the store, sorts the results by similarity, and returns the top `k`\n     * results along with their scores.\n     * @param query Query vector to compare against the vectors in the store.\n     * @param k Number of top results to return.\n     * @param filter Optional filter function to apply to the vectors before performing the search.\n     * @returns Promise that resolves with an array of tuples, each containing a `Document` and its similarity score.\n     */\n    async similaritySearchVectorWithScore(query, k, filter) {\n        const filterFunction = (memoryVector) => {\n            if (!filter) {\n                return true;\n            }\n            const doc = new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_2__.Document({\n                metadata: memoryVector.metadata,\n                pageContent: memoryVector.content,\n            });\n            return filter(doc);\n        };\n        const filteredMemoryVectors = this.memoryVectors.filter(filterFunction);\n        const searches = filteredMemoryVectors\n            .map((vector, index) => ({\n            similarity: this.similarity(query, vector.embedding),\n            index,\n        }))\n            .sort((a, b) => (a.similarity > b.similarity ? -1 : 0))\n            .slice(0, k);\n        const result = searches.map((search) => [\n            new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_2__.Document({\n                metadata: filteredMemoryVectors[search.index].metadata,\n                pageContent: filteredMemoryVectors[search.index].content,\n            }),\n            search.similarity,\n        ]);\n        return result;\n    }\n    /**\n     * Static method to create a `MemoryVectorStore` instance from an array of\n     * texts. It creates a `Document` for each text and metadata pair, and\n     * adds them to the store.\n     * @param texts Array of texts to be added to the store.\n     * @param metadatas Array or single object of metadata corresponding to the texts.\n     * @param embeddings `Embeddings` instance used to generate embeddings for the texts.\n     * @param dbConfig Optional `MemoryVectorStoreArgs` to configure the `MemoryVectorStore` instance.\n     * @returns Promise that resolves with a new `MemoryVectorStore` instance.\n     */\n    static async fromTexts(texts, metadatas, embeddings, dbConfig) {\n        const docs = [];\n        for (let i = 0; i < texts.length; i += 1) {\n            const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n            const newDoc = new _langchain_core_documents__WEBPACK_IMPORTED_MODULE_2__.Document({\n                pageContent: texts[i],\n                metadata,\n            });\n            docs.push(newDoc);\n        }\n        return MemoryVectorStore.fromDocuments(docs, embeddings, dbConfig);\n    }\n    /**\n     * Static method to create a `MemoryVectorStore` instance from an array of\n     * `Document` instances. It adds the documents to the store.\n     * @param docs Array of `Document` instances to be added to the store.\n     * @param embeddings `Embeddings` instance used to generate embeddings for the documents.\n     * @param dbConfig Optional `MemoryVectorStoreArgs` to configure the `MemoryVectorStore` instance.\n     * @returns Promise that resolves with a new `MemoryVectorStore` instance.\n     */\n    static async fromDocuments(docs, embeddings, dbConfig) {\n        const instance = new this(embeddings, dbConfig);\n        await instance.addDocuments(docs);\n        return instance;\n    }\n    /**\n     * Static method to create a `MemoryVectorStore` instance from an existing\n     * index. It creates a new `MemoryVectorStore` instance without adding any\n     * documents or vectors.\n     * @param embeddings `Embeddings` instance used to generate embeddings for the documents.\n     * @param dbConfig Optional `MemoryVectorStoreArgs` to configure the `MemoryVectorStore` instance.\n     * @returns Promise that resolves with a new `MemoryVectorStore` instance.\n     */\n    static async fromExistingIndex(embeddings, dbConfig) {\n        const instance = new this(embeddings, dbConfig);\n        return instance;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/dist/vectorstores/memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/agents/toolkits/base.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Toolkit: () => (/* reexport safe */ _dist_agents_toolkits_base_js__WEBPACK_IMPORTED_MODULE_0__.Toolkit)
/* harmony export */ });
/* harmony import */ var _dist_agents_toolkits_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dist/agents/toolkits/base.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/agents/toolkits/base.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/agents/toolkits/base.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/dist/agents/toolkits/base.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toolkit: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L2FnZW50cy90b29sa2l0cy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29tbXVuaXR5L2Rpc3QvYWdlbnRzL3Rvb2xraXRzL2Jhc2UuanM/OGI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBCYXNlVG9vbGtpdCBhcyBUb29sa2l0IH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS90b29sc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/agents/toolkits/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/memory/chat_memory.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/dist/memory/chat_memory.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChatMemory: () => (/* binding */ BaseChatMemory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/memory */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/memory.js\");\n/* harmony import */ var _stores_message_in_memory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stores/message/in_memory.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/stores/message/in_memory.js\");\n\n\n/**\n * Abstract class that provides a base for implementing different types of\n * memory systems. It is designed to maintain the state of an application,\n * specifically the history of a conversation. This class is typically\n * extended by other classes to create specific types of memory systems.\n */\nclass BaseChatMemory extends _langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.BaseMemory {\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"chatHistory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chatHistory = fields?.chatHistory ?? new _stores_message_in_memory_js__WEBPACK_IMPORTED_MODULE_1__.ChatMessageHistory();\n        this.returnMessages = fields?.returnMessages ?? this.returnMessages;\n        this.inputKey = fields?.inputKey ?? this.inputKey;\n        this.outputKey = fields?.outputKey ?? this.outputKey;\n    }\n    /**\n     * Method to add user and AI messages to the chat history in sequence.\n     * @param inputValues The input values from the user.\n     * @param outputValues The output values from the AI.\n     * @returns Promise that resolves when the context has been saved.\n     */\n    async saveContext(inputValues, outputValues) {\n        // this is purposefully done in sequence so they're saved in order\n        await this.chatHistory.addUserMessage((0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getInputValue)(inputValues, this.inputKey));\n        await this.chatHistory.addAIChatMessage((0,_langchain_core_memory__WEBPACK_IMPORTED_MODULE_0__.getOutputValue)(outputValues, this.outputKey));\n    }\n    /**\n     * Method to clear the chat history.\n     * @returns Promise that resolves when the chat history has been cleared.\n     */\n    async clear() {\n        await this.chatHistory.clear();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L21lbW9yeS9jaGF0X21lbW9yeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Y7QUFDaEI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkJBQTZCLDhEQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHNEQUFzRCw0RUFBa0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHFFQUFhO0FBQzNELGdEQUFnRCxzRUFBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb21tdW5pdHkvZGlzdC9tZW1vcnkvY2hhdF9tZW1vcnkuanM/YmM5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlTWVtb3J5LCBnZXRJbnB1dFZhbHVlLCBnZXRPdXRwdXRWYWx1ZSwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lbW9yeVwiO1xuaW1wb3J0IHsgQ2hhdE1lc3NhZ2VIaXN0b3J5IH0gZnJvbSBcIi4uL3N0b3Jlcy9tZXNzYWdlL2luX21lbW9yeS5qc1wiO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyB0aGF0IHByb3ZpZGVzIGEgYmFzZSBmb3IgaW1wbGVtZW50aW5nIGRpZmZlcmVudCB0eXBlcyBvZlxuICogbWVtb3J5IHN5c3RlbXMuIEl0IGlzIGRlc2lnbmVkIHRvIG1haW50YWluIHRoZSBzdGF0ZSBvZiBhbiBhcHBsaWNhdGlvbixcbiAqIHNwZWNpZmljYWxseSB0aGUgaGlzdG9yeSBvZiBhIGNvbnZlcnNhdGlvbi4gVGhpcyBjbGFzcyBpcyB0eXBpY2FsbHlcbiAqIGV4dGVuZGVkIGJ5IG90aGVyIGNsYXNzZXMgdG8gY3JlYXRlIHNwZWNpZmljIHR5cGVzIG9mIG1lbW9yeSBzeXN0ZW1zLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZUNoYXRNZW1vcnkgZXh0ZW5kcyBCYXNlTWVtb3J5IHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY2hhdEhpc3RvcnlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmV0dXJuTWVzc2FnZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnB1dEtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvdXRwdXRLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jaGF0SGlzdG9yeSA9IGZpZWxkcz8uY2hhdEhpc3RvcnkgPz8gbmV3IENoYXRNZXNzYWdlSGlzdG9yeSgpO1xuICAgICAgICB0aGlzLnJldHVybk1lc3NhZ2VzID0gZmllbGRzPy5yZXR1cm5NZXNzYWdlcyA/PyB0aGlzLnJldHVybk1lc3NhZ2VzO1xuICAgICAgICB0aGlzLmlucHV0S2V5ID0gZmllbGRzPy5pbnB1dEtleSA/PyB0aGlzLmlucHV0S2V5O1xuICAgICAgICB0aGlzLm91dHB1dEtleSA9IGZpZWxkcz8ub3V0cHV0S2V5ID8/IHRoaXMub3V0cHV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gYWRkIHVzZXIgYW5kIEFJIG1lc3NhZ2VzIHRvIHRoZSBjaGF0IGhpc3RvcnkgaW4gc2VxdWVuY2UuXG4gICAgICogQHBhcmFtIGlucHV0VmFsdWVzIFRoZSBpbnB1dCB2YWx1ZXMgZnJvbSB0aGUgdXNlci5cbiAgICAgKiBAcGFyYW0gb3V0cHV0VmFsdWVzIFRoZSBvdXRwdXQgdmFsdWVzIGZyb20gdGhlIEFJLlxuICAgICAqIEByZXR1cm5zIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBjb250ZXh0IGhhcyBiZWVuIHNhdmVkLlxuICAgICAqL1xuICAgIGFzeW5jIHNhdmVDb250ZXh0KGlucHV0VmFsdWVzLCBvdXRwdXRWYWx1ZXMpIHtcbiAgICAgICAgLy8gdGhpcyBpcyBwdXJwb3NlZnVsbHkgZG9uZSBpbiBzZXF1ZW5jZSBzbyB0aGV5J3JlIHNhdmVkIGluIG9yZGVyXG4gICAgICAgIGF3YWl0IHRoaXMuY2hhdEhpc3RvcnkuYWRkVXNlck1lc3NhZ2UoZ2V0SW5wdXRWYWx1ZShpbnB1dFZhbHVlcywgdGhpcy5pbnB1dEtleSkpO1xuICAgICAgICBhd2FpdCB0aGlzLmNoYXRIaXN0b3J5LmFkZEFJQ2hhdE1lc3NhZ2UoZ2V0T3V0cHV0VmFsdWUob3V0cHV0VmFsdWVzLCB0aGlzLm91dHB1dEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gY2xlYXIgdGhlIGNoYXQgaGlzdG9yeS5cbiAgICAgKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgY2hhdCBoaXN0b3J5IGhhcyBiZWVuIGNsZWFyZWQuXG4gICAgICovXG4gICAgYXN5bmMgY2xlYXIoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuY2hhdEhpc3RvcnkuY2xlYXIoKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/memory/chat_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/stores/message/in_memory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/dist/stores/message/in_memory.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatMessageHistory: () => (/* reexport safe */ _langchain_core_chat_history__WEBPACK_IMPORTED_MODULE_0__.InMemoryChatMessageHistory)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_chat_history__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/chat_history */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/chat_history.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L3N0b3Jlcy9tZXNzYWdlL2luX21lbW9yeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvbW11bml0eS9kaXN0L3N0b3Jlcy9tZXNzYWdlL2luX21lbW9yeS5qcz8wMGQ3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEluTWVtb3J5Q2hhdE1lc3NhZ2VIaXN0b3J5IGFzIENoYXRNZXNzYWdlSGlzdG9yeSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvY2hhdF9oaXN0b3J5XCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/stores/message/in_memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/utils/event_source_parse.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/dist/utils/event_source_parse.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventStreamContentType: () => (/* binding */ EventStreamContentType),\n/* harmony export */   convertEventStreamToIterableReadableDataStream: () => (/* binding */ convertEventStreamToIterableReadableDataStream),\n/* harmony export */   getBytes: () => (/* binding */ getBytes),\n/* harmony export */   getLines: () => (/* binding */ getLines),\n/* harmony export */   getMessages: () => (/* binding */ getMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_utils_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/utils/stream */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/stream.js\");\n\nconst EventStreamContentType = \"text/event-stream\";\nfunction isNodeJSReadable(x) {\n    return x != null && typeof x === \"object\" && \"on\" in x;\n}\n/**\n * Converts a ReadableStream into a callback pattern.\n * @param stream The input ReadableStream.\n * @param onChunk A function that will be called on each new byte chunk in the stream.\n * @returns {Promise<void>} A promise that will be resolved when the stream closes.\n */\nasync function getBytes(stream, onChunk) {\n    // stream is a Node.js Readable / PassThrough stream\n    // this can happen if node-fetch is polyfilled\n    if (isNodeJSReadable(stream)) {\n        return new Promise((resolve) => {\n            stream.on(\"readable\", () => {\n                let chunk;\n                // eslint-disable-next-line no-constant-condition\n                while (true) {\n                    chunk = stream.read();\n                    if (chunk == null) {\n                        onChunk(new Uint8Array(), true);\n                        break;\n                    }\n                    onChunk(chunk);\n                }\n                resolve();\n            });\n        });\n    }\n    const reader = stream.getReader();\n    // CHANGED: Introduced a \"flush\" mechanism to process potential pending messages when the stream ends.\n    //          This change is essential to ensure that we capture every last piece of information from streams,\n    //          such as those from Azure OpenAI, which may not terminate with a blank line. Without this\n    //          mechanism, we risk ignoring a possibly significant last message.\n    //          See https://github.com/langchain-ai/langchainjs/issues/1299 for details.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const result = await reader.read();\n        if (result.done) {\n            onChunk(new Uint8Array(), true);\n            break;\n        }\n        onChunk(result.value);\n    }\n}\n/**\n * Parses arbitary byte chunks into EventSource line buffers.\n * Each line should be of the format \"field: value\" and ends with \\r, \\n, or \\r\\n.\n * @param onLine A function that will be called on each new EventSource line.\n * @returns A function that should be called for each incoming byte chunk.\n */\nfunction getLines(onLine) {\n    let buffer;\n    let position; // current read position\n    let fieldLength; // length of the `field` portion of the line\n    let discardTrailingNewline = false;\n    // return a function that can process each incoming byte chunk:\n    return function onChunk(arr, flush) {\n        if (flush) {\n            onLine(arr, 0, true);\n            return;\n        }\n        if (buffer === undefined) {\n            buffer = arr;\n            position = 0;\n            fieldLength = -1;\n        }\n        else {\n            // we're still parsing the old line. Append the new bytes into buffer:\n            buffer = concat(buffer, arr);\n        }\n        const bufLength = buffer.length;\n        let lineStart = 0; // index where the current line starts\n        while (position < bufLength) {\n            if (discardTrailingNewline) {\n                if (buffer[position] === 10 /* ControlChars.NewLine */) {\n                    lineStart = ++position; // skip to next char\n                }\n                discardTrailingNewline = false;\n            }\n            // start looking forward till the end of line:\n            let lineEnd = -1; // index of the \\r or \\n char\n            for (; position < bufLength && lineEnd === -1; ++position) {\n                switch (buffer[position]) {\n                    case 58 /* ControlChars.Colon */:\n                        if (fieldLength === -1) {\n                            // first colon in line\n                            fieldLength = position - lineStart;\n                        }\n                        break;\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore:7029 \\r case below should fallthrough to \\n:\n                    case 13 /* ControlChars.CarriageReturn */:\n                        discardTrailingNewline = true;\n                    // eslint-disable-next-line no-fallthrough\n                    case 10 /* ControlChars.NewLine */:\n                        lineEnd = position;\n                        break;\n                }\n            }\n            if (lineEnd === -1) {\n                // We reached the end of the buffer but the line hasn't ended.\n                // Wait for the next arr and then continue parsing:\n                break;\n            }\n            // we've reached the line end, send it out:\n            onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n            lineStart = position; // we're now on the next line\n            fieldLength = -1;\n        }\n        if (lineStart === bufLength) {\n            buffer = undefined; // we've finished reading it\n        }\n        else if (lineStart !== 0) {\n            // Create a new view into buffer beginning at lineStart so we don't\n            // need to copy over the previous lines when we get the new arr:\n            buffer = buffer.subarray(lineStart);\n            position -= lineStart;\n        }\n    };\n}\n/**\n * Parses line buffers into EventSourceMessages.\n * @param onId A function that will be called on each `id` field.\n * @param onRetry A function that will be called on each `retry` field.\n * @param onMessage A function that will be called on each message.\n * @returns A function that should be called for each incoming line buffer.\n */\nfunction getMessages(onMessage, onId, onRetry) {\n    let message = newMessage();\n    const decoder = new TextDecoder();\n    // return a function that can process each incoming line buffer:\n    return function onLine(line, fieldLength, flush) {\n        if (flush) {\n            if (!isEmpty(message)) {\n                onMessage?.(message);\n                message = newMessage();\n            }\n            return;\n        }\n        if (line.length === 0) {\n            // empty line denotes end of message. Trigger the callback and start a new message:\n            onMessage?.(message);\n            message = newMessage();\n        }\n        else if (fieldLength > 0) {\n            // exclude comments and lines with no values\n            // line is of format \"<field>:<value>\" or \"<field>: <value>\"\n            // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n            const field = decoder.decode(line.subarray(0, fieldLength));\n            const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* ControlChars.Space */ ? 2 : 1);\n            const value = decoder.decode(line.subarray(valueOffset));\n            switch (field) {\n                case \"data\":\n                    // if this message already has data, append the new value to the old.\n                    // otherwise, just set to the new value:\n                    message.data = message.data ? message.data + \"\\n\" + value : value; // otherwise,\n                    break;\n                case \"event\":\n                    message.event = value;\n                    break;\n                case \"id\":\n                    onId?.((message.id = value));\n                    break;\n                case \"retry\": {\n                    const retry = parseInt(value, 10);\n                    if (!Number.isNaN(retry)) {\n                        // per spec, ignore non-integers\n                        onRetry?.((message.retry = retry));\n                    }\n                    break;\n                }\n            }\n        }\n    };\n}\nfunction concat(a, b) {\n    const res = new Uint8Array(a.length + b.length);\n    res.set(a);\n    res.set(b, a.length);\n    return res;\n}\nfunction newMessage() {\n    // data, event, and id must be initialized to empty strings:\n    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n    // retry should be initialized to undefined so we return a consistent shape\n    // to the js engine all the time: https://mathiasbynens.be/notes/shapes-ics#takeaways\n    return {\n        data: \"\",\n        event: \"\",\n        id: \"\",\n        retry: undefined,\n    };\n}\nfunction convertEventStreamToIterableReadableDataStream(stream) {\n    const dataStream = new ReadableStream({\n        async start(controller) {\n            const enqueueLine = getMessages((msg) => {\n                if (msg.data)\n                    controller.enqueue(msg.data);\n            });\n            const onLine = (line, fieldLength, flush) => {\n                enqueueLine(line, fieldLength, flush);\n                if (flush)\n                    controller.close();\n            };\n            await getBytes(stream, getLines(onLine));\n        },\n    });\n    return _langchain_core_utils_stream__WEBPACK_IMPORTED_MODULE_0__.IterableReadableStream.fromReadableStream(dataStream);\n}\nfunction isEmpty(message) {\n    return (message.data === \"\" &&\n        message.event === \"\" &&\n        message.id === \"\" &&\n        message.retry === undefined);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/utils/event_source_parse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/memory/chat_memory.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/memory/chat_memory.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseChatMemory: () => (/* reexport safe */ _dist_memory_chat_memory_js__WEBPACK_IMPORTED_MODULE_0__.BaseChatMemory)
/* harmony export */ });
/* harmony import */ var _dist_memory_chat_memory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/memory/chat_memory.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/memory/chat_memory.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/utils/event_source_parse.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/community/utils/event_source_parse.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EventStreamContentType: () => (/* reexport safe */ _dist_utils_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.EventStreamContentType),
/* harmony export */   convertEventStreamToIterableReadableDataStream: () => (/* reexport safe */ _dist_utils_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.convertEventStreamToIterableReadableDataStream),
/* harmony export */   getBytes: () => (/* reexport safe */ _dist_utils_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.getBytes),
/* harmony export */   getLines: () => (/* reexport safe */ _dist_utils_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.getLines),
/* harmony export */   getMessages: () => (/* reexport safe */ _dist_utils_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__.getMessages)
/* harmony export */ });
/* harmony import */ var _dist_utils_event_source_parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/utils/event_source_parse.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/community/dist/utils/event_source_parse.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/callbacks/manager.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/callbacks/manager.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseCallbackManager: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.BaseCallbackManager),
/* harmony export */   CallbackManager: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManager),
/* harmony export */   CallbackManagerForChainRun: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManagerForChainRun),
/* harmony export */   CallbackManagerForLLMRun: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManagerForLLMRun),
/* harmony export */   CallbackManagerForRetrieverRun: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManagerForRetrieverRun),
/* harmony export */   CallbackManagerForToolRun: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManagerForToolRun),
/* harmony export */   TraceGroup: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.TraceGroup),
/* harmony export */   ensureHandler: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.ensureHandler),
/* harmony export */   parseCallbackConfigArg: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.parseCallbackConfigArg),
/* harmony export */   traceAsGroup: () => (/* reexport safe */ _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.traceAsGroup)
/* harmony export */ });
/* harmony import */ var _dist_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/callbacks/manager.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/chat_history.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/chat_history.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseChatMessageHistory: () => (/* reexport safe */ _dist_chat_history_js__WEBPACK_IMPORTED_MODULE_0__.BaseChatMessageHistory),
/* harmony export */   BaseListChatMessageHistory: () => (/* reexport safe */ _dist_chat_history_js__WEBPACK_IMPORTED_MODULE_0__.BaseListChatMessageHistory),
/* harmony export */   InMemoryChatMessageHistory: () => (/* reexport safe */ _dist_chat_history_js__WEBPACK_IMPORTED_MODULE_0__.InMemoryChatMessageHistory)
/* harmony export */ });
/* harmony import */ var _dist_chat_history_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/chat_history.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/chat_history.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/caches.js":
/*!****************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/caches.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseCache: () => (/* binding */ BaseCache),\n/* harmony export */   InMemoryCache: () => (/* binding */ InMemoryCache),\n/* harmony export */   deserializeStoredGeneration: () => (/* binding */ deserializeStoredGeneration),\n/* harmony export */   getCacheKey: () => (/* binding */ getCacheKey),\n/* harmony export */   serializeGeneration: () => (/* binding */ serializeGeneration)\n/* harmony export */ });\n/* harmony import */ var _utils_hash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/hash.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/hash.js\");\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n\n\n/**\n * This cache key should be consistent across all versions of langchain.\n * It is currently NOT consistent across versions of langchain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * seperate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of langchain.\n */\nconst getCacheKey = (...strings) => (0,_utils_hash_js__WEBPACK_IMPORTED_MODULE_0__.insecureHash)(strings.join(\"_\"));\nfunction deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_1__.mapStoredMessageToChatMessage)(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nfunction serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nclass BaseCache {\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nclass InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jYWNoZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQztBQUNzQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9DQUFvQyw0REFBWTtBQUNoRDtBQUNQO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpRkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jYWNoZXMuanM/NDVjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNlY3VyZUhhc2ggfSBmcm9tIFwiLi91dGlscy9oYXNoLmpzXCI7XG5pbXBvcnQgeyBtYXBTdG9yZWRNZXNzYWdlVG9DaGF0TWVzc2FnZSwgfSBmcm9tIFwiLi9tZXNzYWdlcy9pbmRleC5qc1wiO1xuLyoqXG4gKiBUaGlzIGNhY2hlIGtleSBzaG91bGQgYmUgY29uc2lzdGVudCBhY3Jvc3MgYWxsIHZlcnNpb25zIG9mIGxhbmdjaGFpbi5cbiAqIEl0IGlzIGN1cnJlbnRseSBOT1QgY29uc2lzdGVudCBhY3Jvc3MgdmVyc2lvbnMgb2YgbGFuZ2NoYWluLlxuICpcbiAqIEEgaHVnZSBiZW5lZml0IG9mIGhhdmluZyBhIHJlbW90ZSBjYWNoZSAobGlrZSByZWRpcykgaXMgdGhhdCB5b3UgY2FuXG4gKiBhY2Nlc3MgdGhlIGNhY2hlIGZyb20gZGlmZmVyZW50IHByb2Nlc3Nlcy9tYWNoaW5lcy4gVGhlIGFsbG93cyB5b3UgdG9cbiAqIHNlcGVyYXRlIGNvbmNlcm5zIGFuZCBzY2FsZSBob3Jpem9udGFsbHkuXG4gKlxuICogVE9ETzogTWFrZSBjYWNoZSBrZXkgY29uc2lzdGVudCBhY3Jvc3MgdmVyc2lvbnMgb2YgbGFuZ2NoYWluLlxuICovXG5leHBvcnQgY29uc3QgZ2V0Q2FjaGVLZXkgPSAoLi4uc3RyaW5ncykgPT4gaW5zZWN1cmVIYXNoKHN0cmluZ3Muam9pbihcIl9cIikpO1xuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplU3RvcmVkR2VuZXJhdGlvbihzdG9yZWRHZW5lcmF0aW9uKSB7XG4gICAgaWYgKHN0b3JlZEdlbmVyYXRpb24ubWVzc2FnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0ZXh0OiBzdG9yZWRHZW5lcmF0aW9uLnRleHQsXG4gICAgICAgICAgICBtZXNzYWdlOiBtYXBTdG9yZWRNZXNzYWdlVG9DaGF0TWVzc2FnZShzdG9yZWRHZW5lcmF0aW9uLm1lc3NhZ2UpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgdGV4dDogc3RvcmVkR2VuZXJhdGlvbi50ZXh0IH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUdlbmVyYXRpb24oZ2VuZXJhdGlvbikge1xuICAgIGNvbnN0IHNlcmlhbGl6ZWRWYWx1ZSA9IHtcbiAgICAgICAgdGV4dDogZ2VuZXJhdGlvbi50ZXh0LFxuICAgIH07XG4gICAgaWYgKGdlbmVyYXRpb24ubWVzc2FnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHNlcmlhbGl6ZWRWYWx1ZS5tZXNzYWdlID0gZ2VuZXJhdGlvbi5tZXNzYWdlLnRvRGljdCgpO1xuICAgIH1cbiAgICByZXR1cm4gc2VyaWFsaXplZFZhbHVlO1xufVxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBhbGwgY2FjaGVzLiBBbGwgY2FjaGVzIHNob3VsZCBleHRlbmQgdGhpcyBjbGFzcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJhc2VDYWNoZSB7XG59XG5jb25zdCBHTE9CQUxfTUFQID0gbmV3IE1hcCgpO1xuLyoqXG4gKiBBIGNhY2hlIGZvciBzdG9yaW5nIExMTSBnZW5lcmF0aW9ucyB0aGF0IHN0b3JlcyBkYXRhIGluIG1lbW9yeS5cbiAqL1xuZXhwb3J0IGNsYXNzIEluTWVtb3J5Q2FjaGUgZXh0ZW5kcyBCYXNlQ2FjaGUge1xuICAgIGNvbnN0cnVjdG9yKG1hcCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjYWNoZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNhY2hlID0gbWFwID8/IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGRhdGEgZnJvbSB0aGUgY2FjaGUgdXNpbmcgYSBwcm9tcHQgYW5kIGFuIExMTSBrZXkuIElmIHRoZVxuICAgICAqIGRhdGEgaXMgbm90IGZvdW5kLCBpdCByZXR1cm5zIG51bGwuXG4gICAgICogQHBhcmFtIHByb21wdCBUaGUgcHJvbXB0IHVzZWQgdG8gZmluZCB0aGUgZGF0YS5cbiAgICAgKiBAcGFyYW0gbGxtS2V5IFRoZSBMTE0ga2V5IHVzZWQgdG8gZmluZCB0aGUgZGF0YS5cbiAgICAgKiBAcmV0dXJucyBUaGUgZGF0YSBjb3JyZXNwb25kaW5nIHRvIHRoZSBwcm9tcHQgYW5kIExMTSBrZXksIG9yIG51bGwgaWYgbm90IGZvdW5kLlxuICAgICAqL1xuICAgIGxvb2t1cChwcm9tcHQsIGxsbUtleSkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuY2FjaGUuZ2V0KGdldENhY2hlS2V5KHByb21wdCwgbGxtS2V5KSkgPz8gbnVsbCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdGhlIGNhY2hlIHdpdGggbmV3IGRhdGEgdXNpbmcgYSBwcm9tcHQgYW5kIGFuIExMTSBrZXkuXG4gICAgICogQHBhcmFtIHByb21wdCBUaGUgcHJvbXB0IHVzZWQgdG8gc3RvcmUgdGhlIGRhdGEuXG4gICAgICogQHBhcmFtIGxsbUtleSBUaGUgTExNIGtleSB1c2VkIHRvIHN0b3JlIHRoZSBkYXRhLlxuICAgICAqIEBwYXJhbSB2YWx1ZSBUaGUgZGF0YSB0byBiZSBzdG9yZWQuXG4gICAgICovXG4gICAgYXN5bmMgdXBkYXRlKHByb21wdCwgbGxtS2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmNhY2hlLnNldChnZXRDYWNoZUtleShwcm9tcHQsIGxsbUtleSksIHZhbHVlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGdsb2JhbCBpbnN0YW5jZSBvZiBJbk1lbW9yeUNhY2hlIHVzaW5nIGEgcHJlZGVmaW5lZCBnbG9iYWxcbiAgICAgKiBtYXAgYXMgdGhlIGluaXRpYWwgY2FjaGUuXG4gICAgICogQHJldHVybnMgQSBnbG9iYWwgaW5zdGFuY2Ugb2YgSW5NZW1vcnlDYWNoZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgZ2xvYmFsKCkge1xuICAgICAgICByZXR1cm4gbmV3IEluTWVtb3J5Q2FjaGUoR0xPQkFMX01BUCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/caches.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/base.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseCallbackHandler: () => (/* binding */ BaseCallbackHandler)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/env.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js\");\n\n\n\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nclass BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            (0,_load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.get_lc_unique_name)(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_1__.getEnvironmentVariable)(\"LANGCHAIN_CALLBACKS_BACKGROUND\") !== \"true\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.awaitHandlers = input._awaitHandler ?? this.awaitHandlers;\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"]()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jYWxsYmFja3MvYmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZCO0FBQytDO0FBQ25CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlFQUFrQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFFQUFzQjtBQUN6QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtEQUFZO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLCtEQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw0Q0FBTztBQUNsQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L2NhbGxiYWNrcy9iYXNlLmpzP2ZkNTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdXVpZCBmcm9tIFwidXVpZFwiO1xuaW1wb3J0IHsgU2VyaWFsaXphYmxlLCBnZXRfbGNfdW5pcXVlX25hbWUsIH0gZnJvbSBcIi4uL2xvYWQvc2VyaWFsaXphYmxlLmpzXCI7XG5pbXBvcnQgeyBnZXRFbnZpcm9ubWVudFZhcmlhYmxlIH0gZnJvbSBcIi4uL3V0aWxzL2Vudi5qc1wiO1xuLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyB0aGF0IHByb3ZpZGVzIGEgc2V0IG9mIG9wdGlvbmFsIG1ldGhvZHMgdGhhdCBjYW4gYmVcbiAqIG92ZXJyaWRkZW4gaW4gZGVyaXZlZCBjbGFzc2VzIHRvIGhhbmRsZSB2YXJpb3VzIGV2ZW50cyBkdXJpbmcgdGhlXG4gKiBleGVjdXRpb24gb2YgYSBMYW5nQ2hhaW4gYXBwbGljYXRpb24uXG4gKi9cbmNsYXNzIEJhc2VDYWxsYmFja0hhbmRsZXJNZXRob2RzQ2xhc3Mge1xufVxuLyoqXG4gKiBBYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBjcmVhdGluZyBjYWxsYmFjayBoYW5kbGVycyBpbiB0aGUgTGFuZ0NoYWluXG4gKiBmcmFtZXdvcmsuIEl0IHByb3ZpZGVzIGEgc2V0IG9mIG9wdGlvbmFsIG1ldGhvZHMgdGhhdCBjYW4gYmUgb3ZlcnJpZGRlblxuICogaW4gZGVyaXZlZCBjbGFzc2VzIHRvIGhhbmRsZSB2YXJpb3VzIGV2ZW50cyBkdXJpbmcgdGhlIGV4ZWN1dGlvbiBvZiBhXG4gKiBMYW5nQ2hhaW4gYXBwbGljYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlQ2FsbGJhY2tIYW5kbGVyIGV4dGVuZHMgQmFzZUNhbGxiYWNrSGFuZGxlck1ldGhvZHNDbGFzcyB7XG4gICAgZ2V0IGxjX25hbWVzcGFjZSgpIHtcbiAgICAgICAgcmV0dXJuIFtcImxhbmdjaGFpbl9jb3JlXCIsIFwiY2FsbGJhY2tzXCIsIHRoaXMubmFtZV07XG4gICAgfVxuICAgIGdldCBsY19zZWNyZXRzKCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBnZXQgbGNfYXR0cmlidXRlcygpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IGxjX2FsaWFzZXMoKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBuYW1lIG9mIHRoZSBzZXJpYWxpemFibGUuIE92ZXJyaWRlIHRvIHByb3ZpZGUgYW4gYWxpYXMgb3JcbiAgICAgKiB0byBwcmVzZXJ2ZSB0aGUgc2VyaWFsaXplZCBtb2R1bGUgbmFtZSBpbiBtaW5pZmllZCBlbnZpcm9ubWVudHMuXG4gICAgICpcbiAgICAgKiBJbXBsZW1lbnRlZCBhcyBhIHN0YXRpYyBtZXRob2QgdG8gc3VwcG9ydCBsb2FkaW5nIGxvZ2ljLlxuICAgICAqL1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5uYW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZmluYWwgc2VyaWFsaXplZCBpZGVudGlmaWVyIGZvciB0aGUgbW9kdWxlLlxuICAgICAqL1xuICAgIGdldCBsY19pZCgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIC4uLnRoaXMubGNfbmFtZXNwYWNlLFxuICAgICAgICAgICAgZ2V0X2xjX3VuaXF1ZV9uYW1lKHRoaXMuY29uc3RydWN0b3IpLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19zZXJpYWxpemFibGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19rd2FyZ3NcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaWdub3JlTExNXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaWdub3JlQ2hhaW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZ25vcmVBZ2VudFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlnbm9yZVJldHJpZXZlclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImF3YWl0SGFuZGxlcnNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGdldEVudmlyb25tZW50VmFyaWFibGUoXCJMQU5HQ0hBSU5fQ0FMTEJBQ0tTX0JBQ0tHUk9VTkRcIikgIT09IFwidHJ1ZVwiXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmxjX2t3YXJncyA9IGlucHV0IHx8IHt9O1xuICAgICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlTExNID0gaW5wdXQuaWdub3JlTExNID8/IHRoaXMuaWdub3JlTExNO1xuICAgICAgICAgICAgdGhpcy5pZ25vcmVDaGFpbiA9IGlucHV0Lmlnbm9yZUNoYWluID8/IHRoaXMuaWdub3JlQ2hhaW47XG4gICAgICAgICAgICB0aGlzLmlnbm9yZUFnZW50ID0gaW5wdXQuaWdub3JlQWdlbnQgPz8gdGhpcy5pZ25vcmVBZ2VudDtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlUmV0cmlldmVyID0gaW5wdXQuaWdub3JlUmV0cmlldmVyID8/IHRoaXMuaWdub3JlUmV0cmlldmVyO1xuICAgICAgICAgICAgdGhpcy5hd2FpdEhhbmRsZXJzID0gaW5wdXQuX2F3YWl0SGFuZGxlciA/PyB0aGlzLmF3YWl0SGFuZGxlcnM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29weSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMpO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiBTZXJpYWxpemFibGUucHJvdG90eXBlLnRvSlNPTi5jYWxsKHRoaXMpO1xuICAgIH1cbiAgICB0b0pTT05Ob3RJbXBsZW1lbnRlZCgpIHtcbiAgICAgICAgcmV0dXJuIFNlcmlhbGl6YWJsZS5wcm90b3R5cGUudG9KU09OTm90SW1wbGVtZW50ZWQuY2FsbCh0aGlzKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21NZXRob2RzKG1ldGhvZHMpIHtcbiAgICAgICAgY2xhc3MgSGFuZGxlciBleHRlbmRzIEJhc2VDYWxsYmFja0hhbmRsZXIge1xuICAgICAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHV1aWQudjQoKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgbWV0aG9kcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBIYW5kbGVyKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseCallbackManager: () => (/* binding */ BaseCallbackManager),\n/* harmony export */   CallbackManager: () => (/* binding */ CallbackManager),\n/* harmony export */   CallbackManagerForChainRun: () => (/* binding */ CallbackManagerForChainRun),\n/* harmony export */   CallbackManagerForLLMRun: () => (/* binding */ CallbackManagerForLLMRun),\n/* harmony export */   CallbackManagerForRetrieverRun: () => (/* binding */ CallbackManagerForRetrieverRun),\n/* harmony export */   CallbackManagerForToolRun: () => (/* binding */ CallbackManagerForToolRun),\n/* harmony export */   TraceGroup: () => (/* binding */ TraceGroup),\n/* harmony export */   ensureHandler: () => (/* binding */ ensureHandler),\n/* harmony export */   parseCallbackConfigArg: () => (/* binding */ parseCallbackConfigArg),\n/* harmony export */   traceAsGroup: () => (/* binding */ traceAsGroup)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/base.js\");\n/* harmony import */ var _tracers_console_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tracers/console.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/console.js\");\n/* harmony import */ var _tracers_initialize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tracers/initialize.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/initialize.js\");\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/env.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js\");\n/* harmony import */ var _tracers_tracer_langchain_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tracers/tracer_langchain.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain.js\");\n/* harmony import */ var _promises_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./promises.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/promises.js\");\n\n\n\n\n\n\n\n\nif (\n/* #__PURE__ */ (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"LANGCHAIN_TRACING_V2\") === \"true\" &&\n    /* #__PURE__ */ (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"LANGCHAIN_CALLBACKS_BACKGROUND\") !==\n        \"true\") {\n    /* #__PURE__ */ console.warn([\n        \"[WARN]: You have enabled LangSmith tracing without backgrounding callbacks.\",\n        \"[WARN]: If you are not using a serverless environment where you must wait for tracing calls to finish,\",\n        `[WARN]: we suggest setting \"process.env.LANGCHAIN_CALLBACKS_BACKGROUND=true\" to avoid additional latency.`,\n    ].join(\"\\n\"));\n}\nfunction parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nclass BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nclass BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nclass CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nclass CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nclass CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nclass CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nclass CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n            await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n            await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_3__.getBufferString)(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => (0,_promises_js__WEBPACK_IMPORTED_MODULE_6__.consumeCallback)(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"LANGCHAIN_TRACING_V2\") === \"true\";\n        const tracingEnabled = tracingV2Enabled ||\n            ((0,_utils_env_js__WEBPACK_IMPORTED_MODULE_4__.getEnvironmentVariable)(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === _tracers_console_js__WEBPACK_IMPORTED_MODULE_1__.ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new _tracers_console_js__WEBPACK_IMPORTED_MODULE_1__.ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    callbackManager.addHandler(await (0,_tracers_initialize_js__WEBPACK_IMPORTED_MODULE_2__.getTracingV2CallbackHandler)(), true);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nfunction ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(`What is the answer to {question}?`);\n *\n * // Example of using LLMChain to process a series of questions\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Process questions using the chain\n * const processQuestions = async (questions) => {\n *   for (const question of questions) {\n *     const result = await chain.call({ question });\n *     console.log(result);\n *   }\n * };\n *\n * // Example questions\n * const questions = [\n *   \"What is your name?\",\n *   \"What is your quest?\",\n *   \"What is your favorite color?\",\n * ];\n *\n * // Run the example\n * processQuestions(questions).catch(console.error);\n *\n * ```\n */\nclass TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new _tracers_tracer_langchain_js__WEBPACK_IMPORTED_MODULE_5__.LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/promises.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/promises.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awaitAllCallbacks: () => (/* binding */ awaitAllCallbacks),\n/* harmony export */   consumeCallback: () => (/* binding */ consumeCallback)\n/* harmony export */ });\n/* harmony import */ var p_queue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p-queue */ \"(rsc)/./node_modules/p-queue/dist/index.js\");\n\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue =  true ? p_queue__WEBPACK_IMPORTED_MODULE_0__[\"default\"] : p_queue__WEBPACK_IMPORTED_MODULE_0__;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promise Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nasync function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        await promiseFn();\n    }\n    else {\n        if (typeof queue === \"undefined\") {\n            queue = createQueue();\n        }\n        void queue.add(promiseFn);\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nfunction awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jYWxsYmFja3MvcHJvbWlzZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEtBQXNCLEdBQUcsK0NBQWlCLEdBQUcsb0NBQVM7QUFDekU7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jYWxsYmFja3MvcHJvbWlzZXMuanM/NzA4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUFF1ZXVlTW9kIGZyb20gXCJwLXF1ZXVlXCI7XG5sZXQgcXVldWU7XG4vKipcbiAqIENyZWF0ZXMgYSBxdWV1ZSB1c2luZyB0aGUgcC1xdWV1ZSBsaWJyYXJ5LiBUaGUgcXVldWUgaXMgY29uZmlndXJlZCB0b1xuICogYXV0by1zdGFydCBhbmQgaGFzIGEgY29uY3VycmVuY3kgb2YgMSwgbWVhbmluZyBpdCB3aWxsIHByb2Nlc3MgdGFza3NcbiAqIG9uZSBhdCBhIHRpbWUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVF1ZXVlKCkge1xuICAgIGNvbnN0IFBRdWV1ZSA9IFwiZGVmYXVsdFwiIGluIFBRdWV1ZU1vZCA/IFBRdWV1ZU1vZC5kZWZhdWx0IDogUFF1ZXVlTW9kO1xuICAgIHJldHVybiBuZXcgUFF1ZXVlKHtcbiAgICAgICAgYXV0b1N0YXJ0OiB0cnVlLFxuICAgICAgICBjb25jdXJyZW5jeTogMSxcbiAgICB9KTtcbn1cbi8qKlxuICogQ29uc3VtZSBhIHByb21pc2UsIGVpdGhlciBhZGRpbmcgaXQgdG8gdGhlIHF1ZXVlIG9yIHdhaXRpbmcgZm9yIGl0IHRvIHJlc29sdmVcbiAqIEBwYXJhbSBwcm9taXNlIFByb21pc2UgdG8gY29uc3VtZVxuICogQHBhcmFtIHdhaXQgV2hldGhlciB0byB3YWl0IGZvciB0aGUgcHJvbWlzZSB0byByZXNvbHZlIG9yIHJlc29sdmUgaW1tZWRpYXRlbHlcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbnN1bWVDYWxsYmFjayhwcm9taXNlRm4sIHdhaXQpIHtcbiAgICBpZiAod2FpdCA9PT0gdHJ1ZSkge1xuICAgICAgICBhd2FpdCBwcm9taXNlRm4oKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmICh0eXBlb2YgcXVldWUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHF1ZXVlID0gY3JlYXRlUXVldWUoKTtcbiAgICAgICAgfVxuICAgICAgICB2b2lkIHF1ZXVlLmFkZChwcm9taXNlRm4pO1xuICAgIH1cbn1cbi8qKlxuICogV2FpdHMgZm9yIGFsbCBwcm9taXNlcyBpbiB0aGUgcXVldWUgdG8gcmVzb2x2ZS4gSWYgdGhlIHF1ZXVlIGlzXG4gKiB1bmRlZmluZWQsIGl0IGltbWVkaWF0ZWx5IHJlc29sdmVzIGEgcHJvbWlzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGF3YWl0QWxsQ2FsbGJhY2tzKCkge1xuICAgIHJldHVybiB0eXBlb2YgcXVldWUgIT09IFwidW5kZWZpbmVkXCIgPyBxdWV1ZS5vbklkbGUoKSA6IFByb21pc2UucmVzb2x2ZSgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/promises.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/chat_history.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/chat_history.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChatMessageHistory: () => (/* binding */ BaseChatMessageHistory),\n/* harmony export */   BaseListChatMessageHistory: () => (/* binding */ BaseListChatMessageHistory),\n/* harmony export */   InMemoryChatMessageHistory: () => (/* binding */ InMemoryChatMessageHistory)\n/* harmony export */ });\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n\n\n// TODO: Combine into one class for 0.2\n/**\n * Base class for all chat message histories. All chat message histories\n * should extend this class.\n */\nclass BaseChatMessageHistory extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n}\n/**\n * Base class for all list chat message histories. All list chat message\n * histories should extend this class.\n */\nclass BaseListChatMessageHistory extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    /**\n     * This is a convenience method for adding a human message string to the store.\n     * Please note that this is a convenience method. Code should favor the\n     * bulk addMessages interface instead to save on round-trips to the underlying\n     * persistence layer.\n     * This method may be deprecated in a future release.\n     */\n    addUserMessage(message) {\n        return this.addMessage(new _messages_index_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(message));\n    }\n    /** @deprecated Use addAIMessage instead */\n    addAIChatMessage(message) {\n        return this.addMessage(new _messages_index_js__WEBPACK_IMPORTED_MODULE_1__.AIMessage(message));\n    }\n    /**\n     * This is a convenience method for adding an AI message string to the store.\n     * Please note that this is a convenience method. Code should favor the bulk\n     * addMessages interface instead to save on round-trips to the underlying\n     * persistence layer.\n     * This method may be deprecated in a future release.\n     */\n    addAIMessage(message) {\n        return this.addMessage(new _messages_index_js__WEBPACK_IMPORTED_MODULE_1__.AIMessage(message));\n    }\n    /**\n     * Add a list of messages.\n     *\n     * Implementations should override this method to handle bulk addition of messages\n     * in an efficient manner to avoid unnecessary round-trips to the underlying store.\n     *\n     * @param messages - A list of BaseMessage objects to store.\n     */\n    async addMessages(messages) {\n        for (const message of messages) {\n            await this.addMessage(message);\n        }\n    }\n    /**\n     * Remove all messages from the store.\n     */\n    clear() {\n        throw new Error(\"Not implemented.\");\n    }\n}\n/**\n * Class for storing chat message history in-memory. It extends the\n * BaseListChatMessageHistory class and provides methods to get, add, and\n * clear messages.\n */\nclass InMemoryChatMessageHistory extends BaseListChatMessageHistory {\n    constructor(messages) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"stores\", \"message\", \"in_memory\"]\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.messages = messages ?? [];\n    }\n    /**\n     * Method to get all the messages stored in the ChatMessageHistory\n     * instance.\n     * @returns Array of stored BaseMessage instances.\n     */\n    async getMessages() {\n        return this.messages;\n    }\n    /**\n     * Method to add a new message to the ChatMessageHistory instance.\n     * @param message The BaseMessage instance to add.\n     * @returns A promise that resolves when the message has been added.\n     */\n    async addMessage(message) {\n        this.messages.push(message);\n    }\n    /**\n     * Method to clear all the messages from the ChatMessageHistory instance.\n     * @returns A promise that resolves when all messages have been cleared.\n     */\n    async clear() {\n        this.messages = [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jaGF0X2hpc3RvcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0Q7QUFDUTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUNBQXFDLCtEQUFZO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5Q0FBeUMsK0RBQVk7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw0REFBWTtBQUMvQztBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMseURBQVM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHlEQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9jaGF0X2hpc3RvcnkuanM/ZmE1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJpYWxpemFibGUgfSBmcm9tIFwiLi9sb2FkL3NlcmlhbGl6YWJsZS5qc1wiO1xuaW1wb3J0IHsgSHVtYW5NZXNzYWdlLCBBSU1lc3NhZ2UgfSBmcm9tIFwiLi9tZXNzYWdlcy9pbmRleC5qc1wiO1xuLy8gVE9ETzogQ29tYmluZSBpbnRvIG9uZSBjbGFzcyBmb3IgMC4yXG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIGFsbCBjaGF0IG1lc3NhZ2UgaGlzdG9yaWVzLiBBbGwgY2hhdCBtZXNzYWdlIGhpc3Rvcmllc1xuICogc2hvdWxkIGV4dGVuZCB0aGlzIGNsYXNzLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZUNoYXRNZXNzYWdlSGlzdG9yeSBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XG59XG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIGFsbCBsaXN0IGNoYXQgbWVzc2FnZSBoaXN0b3JpZXMuIEFsbCBsaXN0IGNoYXQgbWVzc2FnZVxuICogaGlzdG9yaWVzIHNob3VsZCBleHRlbmQgdGhpcyBjbGFzcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJhc2VMaXN0Q2hhdE1lc3NhZ2VIaXN0b3J5IGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIGEgY29udmVuaWVuY2UgbWV0aG9kIGZvciBhZGRpbmcgYSBodW1hbiBtZXNzYWdlIHN0cmluZyB0byB0aGUgc3RvcmUuXG4gICAgICogUGxlYXNlIG5vdGUgdGhhdCB0aGlzIGlzIGEgY29udmVuaWVuY2UgbWV0aG9kLiBDb2RlIHNob3VsZCBmYXZvciB0aGVcbiAgICAgKiBidWxrIGFkZE1lc3NhZ2VzIGludGVyZmFjZSBpbnN0ZWFkIHRvIHNhdmUgb24gcm91bmQtdHJpcHMgdG8gdGhlIHVuZGVybHlpbmdcbiAgICAgKiBwZXJzaXN0ZW5jZSBsYXllci5cbiAgICAgKiBUaGlzIG1ldGhvZCBtYXkgYmUgZGVwcmVjYXRlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLlxuICAgICAqL1xuICAgIGFkZFVzZXJNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWRkTWVzc2FnZShuZXcgSHVtYW5NZXNzYWdlKG1lc3NhZ2UpKTtcbiAgICB9XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSBhZGRBSU1lc3NhZ2UgaW5zdGVhZCAqL1xuICAgIGFkZEFJQ2hhdE1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGRNZXNzYWdlKG5ldyBBSU1lc3NhZ2UobWVzc2FnZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIGEgY29udmVuaWVuY2UgbWV0aG9kIGZvciBhZGRpbmcgYW4gQUkgbWVzc2FnZSBzdHJpbmcgdG8gdGhlIHN0b3JlLlxuICAgICAqIFBsZWFzZSBub3RlIHRoYXQgdGhpcyBpcyBhIGNvbnZlbmllbmNlIG1ldGhvZC4gQ29kZSBzaG91bGQgZmF2b3IgdGhlIGJ1bGtcbiAgICAgKiBhZGRNZXNzYWdlcyBpbnRlcmZhY2UgaW5zdGVhZCB0byBzYXZlIG9uIHJvdW5kLXRyaXBzIHRvIHRoZSB1bmRlcmx5aW5nXG4gICAgICogcGVyc2lzdGVuY2UgbGF5ZXIuXG4gICAgICogVGhpcyBtZXRob2QgbWF5IGJlIGRlcHJlY2F0ZWQgaW4gYSBmdXR1cmUgcmVsZWFzZS5cbiAgICAgKi9cbiAgICBhZGRBSU1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGRNZXNzYWdlKG5ldyBBSU1lc3NhZ2UobWVzc2FnZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGQgYSBsaXN0IG9mIG1lc3NhZ2VzLlxuICAgICAqXG4gICAgICogSW1wbGVtZW50YXRpb25zIHNob3VsZCBvdmVycmlkZSB0aGlzIG1ldGhvZCB0byBoYW5kbGUgYnVsayBhZGRpdGlvbiBvZiBtZXNzYWdlc1xuICAgICAqIGluIGFuIGVmZmljaWVudCBtYW5uZXIgdG8gYXZvaWQgdW5uZWNlc3Nhcnkgcm91bmQtdHJpcHMgdG8gdGhlIHVuZGVybHlpbmcgc3RvcmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbWVzc2FnZXMgLSBBIGxpc3Qgb2YgQmFzZU1lc3NhZ2Ugb2JqZWN0cyB0byBzdG9yZS5cbiAgICAgKi9cbiAgICBhc3luYyBhZGRNZXNzYWdlcyhtZXNzYWdlcykge1xuICAgICAgICBmb3IgKGNvbnN0IG1lc3NhZ2Ugb2YgbWVzc2FnZXMpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuYWRkTWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYWxsIG1lc3NhZ2VzIGZyb20gdGhlIHN0b3JlLlxuICAgICAqL1xuICAgIGNsZWFyKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQuXCIpO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIHN0b3JpbmcgY2hhdCBtZXNzYWdlIGhpc3RvcnkgaW4tbWVtb3J5LiBJdCBleHRlbmRzIHRoZVxuICogQmFzZUxpc3RDaGF0TWVzc2FnZUhpc3RvcnkgY2xhc3MgYW5kIHByb3ZpZGVzIG1ldGhvZHMgdG8gZ2V0LCBhZGQsIGFuZFxuICogY2xlYXIgbWVzc2FnZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbk1lbW9yeUNoYXRNZXNzYWdlSGlzdG9yeSBleHRlbmRzIEJhc2VMaXN0Q2hhdE1lc3NhZ2VIaXN0b3J5IHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlcykge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpblwiLCBcInN0b3Jlc1wiLCBcIm1lc3NhZ2VcIiwgXCJpbl9tZW1vcnlcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1lc3NhZ2VzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tZXNzYWdlcyA9IG1lc3NhZ2VzID8/IFtdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gZ2V0IGFsbCB0aGUgbWVzc2FnZXMgc3RvcmVkIGluIHRoZSBDaGF0TWVzc2FnZUhpc3RvcnlcbiAgICAgKiBpbnN0YW5jZS5cbiAgICAgKiBAcmV0dXJucyBBcnJheSBvZiBzdG9yZWQgQmFzZU1lc3NhZ2UgaW5zdGFuY2VzLlxuICAgICAqL1xuICAgIGFzeW5jIGdldE1lc3NhZ2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHRvIGFkZCBhIG5ldyBtZXNzYWdlIHRvIHRoZSBDaGF0TWVzc2FnZUhpc3RvcnkgaW5zdGFuY2UuXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIEJhc2VNZXNzYWdlIGluc3RhbmNlIHRvIGFkZC5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBtZXNzYWdlIGhhcyBiZWVuIGFkZGVkLlxuICAgICAqL1xuICAgIGFzeW5jIGFkZE1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBjbGVhciBhbGwgdGhlIG1lc3NhZ2VzIGZyb20gdGhlIENoYXRNZXNzYWdlSGlzdG9yeSBpbnN0YW5jZS5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIGFsbCBtZXNzYWdlcyBoYXZlIGJlZW4gY2xlYXJlZC5cbiAgICAgKi9cbiAgICBhc3luYyBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtdO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/chat_history.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/document.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/documents/document.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Document: () => (/* binding */ Document)\n/* harmony export */ });\n/**\n * Interface for interacting with a document.\n */\nclass Document {\n    constructor(fields) {\n        Object.defineProperty(this, \"pageContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pageContent = fields.pageContent\n            ? fields.pageContent.toString()\n            : this.pageContent;\n        this.metadata = fields.metadata ?? {};\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9kb2N1bWVudHMvZG9jdW1lbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L2RvY3VtZW50cy9kb2N1bWVudC5qcz85NDUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW50ZXJmYWNlIGZvciBpbnRlcmFjdGluZyB3aXRoIGEgZG9jdW1lbnQuXG4gKi9cbmV4cG9ydCBjbGFzcyBEb2N1bWVudCB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInBhZ2VDb250ZW50XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1ldGFkYXRhXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucGFnZUNvbnRlbnQgPSBmaWVsZHMucGFnZUNvbnRlbnRcbiAgICAgICAgICAgID8gZmllbGRzLnBhZ2VDb250ZW50LnRvU3RyaW5nKClcbiAgICAgICAgICAgIDogdGhpcy5wYWdlQ29udGVudDtcbiAgICAgICAgdGhpcy5tZXRhZGF0YSA9IGZpZWxkcy5tZXRhZGF0YSA/PyB7fTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/document.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/documents/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseDocumentTransformer: () => (/* reexport safe */ _transformers_js__WEBPACK_IMPORTED_MODULE_1__.BaseDocumentTransformer),\n/* harmony export */   Document: () => (/* reexport safe */ _document_js__WEBPACK_IMPORTED_MODULE_0__.Document),\n/* harmony export */   MappingDocumentTransformer: () => (/* reexport safe */ _transformers_js__WEBPACK_IMPORTED_MODULE_1__.MappingDocumentTransformer)\n/* harmony export */ });\n/* harmony import */ var _document_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./document.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/document.js\");\n/* harmony import */ var _transformers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transformers.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/transformers.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9kb2N1bWVudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEI7QUFDSSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9kb2N1bWVudHMvaW5kZXguanM/YjFlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9kb2N1bWVudC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHJhbnNmb3JtZXJzLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/transformers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/documents/transformers.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseDocumentTransformer: () => (/* binding */ BaseDocumentTransformer),\n/* harmony export */   MappingDocumentTransformer: () => (/* binding */ MappingDocumentTransformer)\n/* harmony export */ });\n/* harmony import */ var _runnables_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runnables/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nclass BaseDocumentTransformer extends _runnables_base_js__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"documents\", \"transformers\"]\n        });\n    }\n    /**\n     * Method to invoke the document transformation. This method calls the\n     * transformDocuments method with the provided input.\n     * @param input The input documents to be transformed.\n     * @param _options Optional configuration object to customize the behavior of callbacks.\n     * @returns A Promise that resolves to the transformed documents.\n     */\n    invoke(input, _options) {\n        return this.transformDocuments(input);\n    }\n}\n/**\n * Class for document transformers that return exactly one transformed document\n * for each input document.\n */\nclass MappingDocumentTransformer extends BaseDocumentTransformer {\n    async transformDocuments(documents) {\n        const newDocuments = [];\n        for (const document of documents) {\n            const transformedDocument = await this._transformDocument(document);\n            newDocuments.push(transformedDocument);\n        }\n        return newDocuments;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9kb2N1bWVudHMvdHJhbnNmb3JtZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNDQUFzQyx3REFBUTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L2RvY3VtZW50cy90cmFuc2Zvcm1lcnMuanM/Yzc2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdW5uYWJsZSB9IGZyb20gXCIuLi9ydW5uYWJsZXMvYmFzZS5qc1wiO1xuLyoqXG4gKiBBYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBkb2N1bWVudCB0cmFuc2Zvcm1hdGlvbiBzeXN0ZW1zLlxuICpcbiAqIEEgZG9jdW1lbnQgdHJhbnNmb3JtYXRpb24gc3lzdGVtIHRha2VzIGFuIGFycmF5IG9mIERvY3VtZW50cyBhbmQgcmV0dXJucyBhblxuICogYXJyYXkgb2YgdHJhbnNmb3JtZWQgRG9jdW1lbnRzLiBUaGVzZSBhcnJheXMgZG8gbm90IG5lY2Vzc2FyaWx5IGhhdmUgdG8gaGF2ZVxuICogdGhlIHNhbWUgbGVuZ3RoLlxuICpcbiAqIE9uZSBleGFtcGxlIG9mIHRoaXMgaXMgYSB0ZXh0IHNwbGl0dGVyIHRoYXQgc3BsaXRzIGEgbGFyZ2UgZG9jdW1lbnQgaW50b1xuICogbWFueSBzbWFsbGVyIGRvY3VtZW50cy5cbiAqL1xuZXhwb3J0IGNsYXNzIEJhc2VEb2N1bWVudFRyYW5zZm9ybWVyIGV4dGVuZHMgUnVubmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpbl9jb3JlXCIsIFwiZG9jdW1lbnRzXCIsIFwidHJhbnNmb3JtZXJzXCJdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gaW52b2tlIHRoZSBkb2N1bWVudCB0cmFuc2Zvcm1hdGlvbi4gVGhpcyBtZXRob2QgY2FsbHMgdGhlXG4gICAgICogdHJhbnNmb3JtRG9jdW1lbnRzIG1ldGhvZCB3aXRoIHRoZSBwcm92aWRlZCBpbnB1dC5cbiAgICAgKiBAcGFyYW0gaW5wdXQgVGhlIGlucHV0IGRvY3VtZW50cyB0byBiZSB0cmFuc2Zvcm1lZC5cbiAgICAgKiBAcGFyYW0gX29wdGlvbnMgT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvYmplY3QgdG8gY3VzdG9taXplIHRoZSBiZWhhdmlvciBvZiBjYWxsYmFja3MuXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHRyYW5zZm9ybWVkIGRvY3VtZW50cy5cbiAgICAgKi9cbiAgICBpbnZva2UoaW5wdXQsIF9vcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybURvY3VtZW50cyhpbnB1dCk7XG4gICAgfVxufVxuLyoqXG4gKiBDbGFzcyBmb3IgZG9jdW1lbnQgdHJhbnNmb3JtZXJzIHRoYXQgcmV0dXJuIGV4YWN0bHkgb25lIHRyYW5zZm9ybWVkIGRvY3VtZW50XG4gKiBmb3IgZWFjaCBpbnB1dCBkb2N1bWVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIE1hcHBpbmdEb2N1bWVudFRyYW5zZm9ybWVyIGV4dGVuZHMgQmFzZURvY3VtZW50VHJhbnNmb3JtZXIge1xuICAgIGFzeW5jIHRyYW5zZm9ybURvY3VtZW50cyhkb2N1bWVudHMpIHtcbiAgICAgICAgY29uc3QgbmV3RG9jdW1lbnRzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgZG9jdW1lbnQgb2YgZG9jdW1lbnRzKSB7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZERvY3VtZW50ID0gYXdhaXQgdGhpcy5fdHJhbnNmb3JtRG9jdW1lbnQoZG9jdW1lbnQpO1xuICAgICAgICAgICAgbmV3RG9jdW1lbnRzLnB1c2godHJhbnNmb3JtZWREb2N1bWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0RvY3VtZW50cztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/transformers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/base.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/base.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseExampleSelector: () => (/* binding */ BaseExampleSelector)\n/* harmony export */ });\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n\n/**\n * Base class for example selectors.\n */\nclass BaseExampleSelector extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"example_selectors\", \"base\"]\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9leGFtcGxlX3NlbGVjdG9ycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQywrREFBWTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L2V4YW1wbGVfc2VsZWN0b3JzL2Jhc2UuanM/YjAwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vbG9hZC9zZXJpYWxpemFibGUuanNcIjtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgZXhhbXBsZSBzZWxlY3RvcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlRXhhbXBsZVNlbGVjdG9yIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5fY29yZVwiLCBcImV4YW1wbGVfc2VsZWN0b3JzXCIsIFwiYmFzZVwiXVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/conditional.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/conditional.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePromptSelector: () => (/* binding */ BasePromptSelector),\n/* harmony export */   ConditionalPromptSelector: () => (/* binding */ ConditionalPromptSelector),\n/* harmony export */   isChatModel: () => (/* binding */ isChatModel),\n/* harmony export */   isLLM: () => (/* binding */ isLLM)\n/* harmony export */ });\n/**\n * Abstract class that defines the interface for selecting a prompt for a\n * given language model.\n */\nclass BasePromptSelector {\n    /**\n     * Asynchronous version of `getPrompt` that also accepts an options object\n     * for partial variables.\n     * @param llm The language model for which to get a prompt.\n     * @param options Optional object for partial variables.\n     * @returns A Promise that resolves to a prompt template.\n     */\n    async getPromptAsync(llm, options) {\n        const prompt = this.getPrompt(llm);\n        return prompt.partial(options?.partialVariables ?? {});\n    }\n}\n/**\n * Concrete implementation of `BasePromptSelector` that selects a prompt\n * based on a set of conditions. It has a default prompt that it returns\n * if none of the conditions are met.\n */\nclass ConditionalPromptSelector extends BasePromptSelector {\n    constructor(default_prompt, conditionals = []) {\n        super();\n        Object.defineProperty(this, \"defaultPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"conditionals\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.defaultPrompt = default_prompt;\n        this.conditionals = conditionals;\n    }\n    /**\n     * Method that selects a prompt based on a set of conditions. If none of\n     * the conditions are met, it returns the default prompt.\n     * @param llm The language model for which to get a prompt.\n     * @returns A prompt template.\n     */\n    getPrompt(llm) {\n        for (const [condition, prompt] of this.conditionals) {\n            if (condition(llm)) {\n                return prompt;\n            }\n        }\n        return this.defaultPrompt;\n    }\n}\n/**\n * Type guard function that checks if a given language model is of type\n * `BaseLLM`.\n */\nfunction isLLM(llm) {\n    return llm._modelType() === \"base_llm\";\n}\n/**\n * Type guard function that checks if a given language model is of type\n * `BaseChatModel`.\n */\nfunction isChatModel(llm) {\n    return llm._modelType() === \"base_chat_model\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9leGFtcGxlX3NlbGVjdG9ycy9jb25kaXRpb25hbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L2V4YW1wbGVfc2VsZWN0b3JzL2NvbmRpdGlvbmFsLmpzPzFjZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBYnN0cmFjdCBjbGFzcyB0aGF0IGRlZmluZXMgdGhlIGludGVyZmFjZSBmb3Igc2VsZWN0aW5nIGEgcHJvbXB0IGZvciBhXG4gKiBnaXZlbiBsYW5ndWFnZSBtb2RlbC5cbiAqL1xuZXhwb3J0IGNsYXNzIEJhc2VQcm9tcHRTZWxlY3RvciB7XG4gICAgLyoqXG4gICAgICogQXN5bmNocm9ub3VzIHZlcnNpb24gb2YgYGdldFByb21wdGAgdGhhdCBhbHNvIGFjY2VwdHMgYW4gb3B0aW9ucyBvYmplY3RcbiAgICAgKiBmb3IgcGFydGlhbCB2YXJpYWJsZXMuXG4gICAgICogQHBhcmFtIGxsbSBUaGUgbGFuZ3VhZ2UgbW9kZWwgZm9yIHdoaWNoIHRvIGdldCBhIHByb21wdC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbCBvYmplY3QgZm9yIHBhcnRpYWwgdmFyaWFibGVzLlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGEgcHJvbXB0IHRlbXBsYXRlLlxuICAgICAqL1xuICAgIGFzeW5jIGdldFByb21wdEFzeW5jKGxsbSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBwcm9tcHQgPSB0aGlzLmdldFByb21wdChsbG0pO1xuICAgICAgICByZXR1cm4gcHJvbXB0LnBhcnRpYWwob3B0aW9ucz8ucGFydGlhbFZhcmlhYmxlcyA/PyB7fSk7XG4gICAgfVxufVxuLyoqXG4gKiBDb25jcmV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBgQmFzZVByb21wdFNlbGVjdG9yYCB0aGF0IHNlbGVjdHMgYSBwcm9tcHRcbiAqIGJhc2VkIG9uIGEgc2V0IG9mIGNvbmRpdGlvbnMuIEl0IGhhcyBhIGRlZmF1bHQgcHJvbXB0IHRoYXQgaXQgcmV0dXJuc1xuICogaWYgbm9uZSBvZiB0aGUgY29uZGl0aW9ucyBhcmUgbWV0LlxuICovXG5leHBvcnQgY2xhc3MgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvciBleHRlbmRzIEJhc2VQcm9tcHRTZWxlY3RvciB7XG4gICAgY29uc3RydWN0b3IoZGVmYXVsdF9wcm9tcHQsIGNvbmRpdGlvbmFscyA9IFtdKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlZmF1bHRQcm9tcHRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY29uZGl0aW9uYWxzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZGVmYXVsdFByb21wdCA9IGRlZmF1bHRfcHJvbXB0O1xuICAgICAgICB0aGlzLmNvbmRpdGlvbmFscyA9IGNvbmRpdGlvbmFscztcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHRoYXQgc2VsZWN0cyBhIHByb21wdCBiYXNlZCBvbiBhIHNldCBvZiBjb25kaXRpb25zLiBJZiBub25lIG9mXG4gICAgICogdGhlIGNvbmRpdGlvbnMgYXJlIG1ldCwgaXQgcmV0dXJucyB0aGUgZGVmYXVsdCBwcm9tcHQuXG4gICAgICogQHBhcmFtIGxsbSBUaGUgbGFuZ3VhZ2UgbW9kZWwgZm9yIHdoaWNoIHRvIGdldCBhIHByb21wdC5cbiAgICAgKiBAcmV0dXJucyBBIHByb21wdCB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBnZXRQcm9tcHQobGxtKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2NvbmRpdGlvbiwgcHJvbXB0XSBvZiB0aGlzLmNvbmRpdGlvbmFscykge1xuICAgICAgICAgICAgaWYgKGNvbmRpdGlvbihsbG0pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb21wdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0UHJvbXB0O1xuICAgIH1cbn1cbi8qKlxuICogVHlwZSBndWFyZCBmdW5jdGlvbiB0aGF0IGNoZWNrcyBpZiBhIGdpdmVuIGxhbmd1YWdlIG1vZGVsIGlzIG9mIHR5cGVcbiAqIGBCYXNlTExNYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTExNKGxsbSkge1xuICAgIHJldHVybiBsbG0uX21vZGVsVHlwZSgpID09PSBcImJhc2VfbGxtXCI7XG59XG4vKipcbiAqIFR5cGUgZ3VhcmQgZnVuY3Rpb24gdGhhdCBjaGVja3MgaWYgYSBnaXZlbiBsYW5ndWFnZSBtb2RlbCBpcyBvZiB0eXBlXG4gKiBgQmFzZUNoYXRNb2RlbGAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0NoYXRNb2RlbChsbG0pIHtcbiAgICByZXR1cm4gbGxtLl9tb2RlbFR5cGUoKSA9PT0gXCJiYXNlX2NoYXRfbW9kZWxcIjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/conditional.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseExampleSelector: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseExampleSelector),\n/* harmony export */   BasePromptSelector: () => (/* reexport safe */ _conditional_js__WEBPACK_IMPORTED_MODULE_1__.BasePromptSelector),\n/* harmony export */   ConditionalPromptSelector: () => (/* reexport safe */ _conditional_js__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector),\n/* harmony export */   LengthBasedExampleSelector: () => (/* reexport safe */ _length_based_js__WEBPACK_IMPORTED_MODULE_2__.LengthBasedExampleSelector),\n/* harmony export */   SemanticSimilarityExampleSelector: () => (/* reexport safe */ _semantic_similarity_js__WEBPACK_IMPORTED_MODULE_3__.SemanticSimilarityExampleSelector),\n/* harmony export */   isChatModel: () => (/* reexport safe */ _conditional_js__WEBPACK_IMPORTED_MODULE_1__.isChatModel),\n/* harmony export */   isLLM: () => (/* reexport safe */ _conditional_js__WEBPACK_IMPORTED_MODULE_1__.isLLM)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/base.js\");\n/* harmony import */ var _conditional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conditional.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/conditional.js\");\n/* harmony import */ var _length_based_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./length_based.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/length_based.js\");\n/* harmony import */ var _semantic_similarity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./semantic_similarity.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/semantic_similarity.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9leGFtcGxlX3NlbGVjdG9ycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUNPO0FBQ0M7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9leGFtcGxlX3NlbGVjdG9ycy9pbmRleC5qcz8xN2RiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Jhc2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbmRpdGlvbmFsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9sZW5ndGhfYmFzZWQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NlbWFudGljX3NpbWlsYXJpdHkuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/length_based.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/length_based.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LengthBasedExampleSelector: () => (/* binding */ LengthBasedExampleSelector)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/base.js\");\n\n/**\n * Calculates the length of a text based on the number of words and lines.\n */\nfunction getLengthBased(text) {\n    return text.split(/\\n| /).length;\n}\n/**\n * A specialized example selector that selects examples based on their\n * length, ensuring that the total length of the selected examples does\n * not exceed a specified maximum length.\n * @example\n * ```typescript\n * const exampleSelector = new LengthBasedExampleSelector(\n *   [\n *     { input: \"happy\", output: \"sad\" },\n *     { input: \"tall\", output: \"short\" },\n *     { input: \"energetic\", output: \"lethargic\" },\n *     { input: \"sunny\", output: \"gloomy\" },\n *     { input: \"windy\", output: \"calm\" },\n *   ],\n *   {\n *     examplePrompt: new PromptTemplate({\n *       inputVariables: [\"input\", \"output\"],\n *       template: \"Input: {input}\\nOutput: {output}\",\n *     }),\n *     maxLength: 25,\n *   },\n * );\n * const dynamicPrompt = new FewShotPromptTemplate({\n *   exampleSelector,\n *   examplePrompt: new PromptTemplate({\n *     inputVariables: [\"input\", \"output\"],\n *     template: \"Input: {input}\\nOutput: {output}\",\n *   }),\n *   prefix: \"Give the antonym of every input\",\n *   suffix: \"Input: {adjective}\\nOutput:\",\n *   inputVariables: [\"adjective\"],\n * });\n * console.log(dynamicPrompt.format({ adjective: \"big\" }));\n * console.log(\n *   dynamicPrompt.format({\n *     adjective:\n *       \"big and huge and massive and large and gigantic and tall and much much much much much bigger than everything else\",\n *   }),\n * );\n * ```\n */\nclass LengthBasedExampleSelector extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseExampleSelector {\n    constructor(data) {\n        super(data);\n        Object.defineProperty(this, \"examples\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"examplePrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"getTextLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getLengthBased\n        });\n        Object.defineProperty(this, \"maxLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2048\n        });\n        Object.defineProperty(this, \"exampleTextLengths\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.examplePrompt = data.examplePrompt;\n        this.maxLength = data.maxLength ?? 2048;\n        this.getTextLength = data.getTextLength ?? getLengthBased;\n    }\n    /**\n     * Adds an example to the list of examples and calculates its length.\n     * @param example The example to be added.\n     * @returns Promise that resolves when the example has been added and its length calculated.\n     */\n    async addExample(example) {\n        this.examples.push(example);\n        const stringExample = await this.examplePrompt.format(example);\n        this.exampleTextLengths.push(this.getTextLength(stringExample));\n    }\n    /**\n     * Calculates the lengths of the examples.\n     * @param v Array of lengths of the examples.\n     * @param values Instance of LengthBasedExampleSelector.\n     * @returns Promise that resolves with an array of lengths of the examples.\n     */\n    async calculateExampleTextLengths(v, values) {\n        if (v.length > 0) {\n            return v;\n        }\n        const { examples, examplePrompt } = values;\n        const stringExamples = await Promise.all(examples.map((eg) => examplePrompt.format(eg)));\n        return stringExamples.map((eg) => this.getTextLength(eg));\n    }\n    /**\n     * Selects examples until the total length of the selected examples\n     * reaches the maxLength.\n     * @param inputVariables The input variables for the examples.\n     * @returns Promise that resolves with an array of selected examples.\n     */\n    async selectExamples(inputVariables) {\n        const inputs = Object.values(inputVariables).join(\" \");\n        let remainingLength = this.maxLength - this.getTextLength(inputs);\n        let i = 0;\n        const examples = [];\n        while (remainingLength > 0 && i < this.examples.length) {\n            const newLength = remainingLength - this.exampleTextLengths[i];\n            if (newLength < 0) {\n                break;\n            }\n            else {\n                examples.push(this.examples[i]);\n                remainingLength = newLength;\n            }\n            i += 1;\n        }\n        return examples;\n    }\n    /**\n     * Creates a new instance of LengthBasedExampleSelector and adds a list of\n     * examples to it.\n     * @param examples Array of examples to be added.\n     * @param args Input parameters for the LengthBasedExampleSelector.\n     * @returns Promise that resolves with a new instance of LengthBasedExampleSelector with the examples added.\n     */\n    static async fromExamples(examples, args) {\n        const selector = new LengthBasedExampleSelector(args);\n        await Promise.all(examples.map((eg) => selector.addExample(eg)));\n        return selector;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/length_based.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/semantic_similarity.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/semantic_similarity.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SemanticSimilarityExampleSelector: () => (/* binding */ SemanticSimilarityExampleSelector)\n/* harmony export */ });\n/* harmony import */ var _documents_document_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../documents/document.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/document.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/base.js\");\n\n\nfunction sortedValues(values) {\n    return Object.keys(values)\n        .sort()\n        .map((key) => values[key]);\n}\n/**\n * Class that selects examples based on semantic similarity. It extends\n * the BaseExampleSelector class.\n * @example\n * ```typescript\n * const exampleSelector = await SemanticSimilarityExampleSelector.fromExamples(\n *   [\n *     { input: \"happy\", output: \"sad\" },\n *     { input: \"tall\", output: \"short\" },\n *     { input: \"energetic\", output: \"lethargic\" },\n *     { input: \"sunny\", output: \"gloomy\" },\n *     { input: \"windy\", output: \"calm\" },\n *   ],\n *   new OpenAIEmbeddings(),\n *   HNSWLib,\n *   { k: 1 },\n * );\n * const dynamicPrompt = new FewShotPromptTemplate({\n *   exampleSelector,\n *   examplePrompt: PromptTemplate.fromTemplate(\n *     \"Input: {input}\\nOutput: {output}\",\n *   ),\n *   prefix: \"Give the antonym of every input\",\n *   suffix: \"Input: {adjective}\\nOutput:\",\n *   inputVariables: [\"adjective\"],\n * });\n * console.log(await dynamicPrompt.format({ adjective: \"rainy\" }));\n * ```\n */\nclass SemanticSimilarityExampleSelector extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseExampleSelector {\n    constructor(data) {\n        super(data);\n        Object.defineProperty(this, \"vectorStoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.exampleKeys = data.exampleKeys;\n        this.inputKeys = data.inputKeys;\n        if (data.vectorStore !== undefined) {\n            this.vectorStoreRetriever = data.vectorStore.asRetriever({\n                k: data.k ?? 4,\n                filter: data.filter,\n            });\n        }\n        else if (data.vectorStoreRetriever) {\n            this.vectorStoreRetriever = data.vectorStoreRetriever;\n        }\n        else {\n            throw new Error(`You must specify one of \"vectorStore\" and \"vectorStoreRetriever\".`);\n        }\n    }\n    /**\n     * Method that adds a new example to the vectorStore. The example is\n     * converted to a string and added to the vectorStore as a document.\n     * @param example The example to be added to the vectorStore.\n     * @returns Promise that resolves when the example has been added to the vectorStore.\n     */\n    async addExample(example) {\n        const inputKeys = this.inputKeys ?? Object.keys(example);\n        const stringExample = sortedValues(inputKeys.reduce((acc, key) => ({ ...acc, [key]: example[key] }), {})).join(\" \");\n        await this.vectorStoreRetriever.addDocuments([\n            new _documents_document_js__WEBPACK_IMPORTED_MODULE_0__.Document({\n                pageContent: stringExample,\n                metadata: example,\n            }),\n        ]);\n    }\n    /**\n     * Method that selects which examples to use based on semantic similarity.\n     * It performs a similarity search in the vectorStore using the input\n     * variables and returns the examples with the highest similarity.\n     * @param inputVariables The input variables used for the similarity search.\n     * @returns Promise that resolves with an array of the selected examples.\n     */\n    async selectExamples(inputVariables) {\n        const inputKeys = this.inputKeys ?? Object.keys(inputVariables);\n        const query = sortedValues(inputKeys.reduce((acc, key) => ({ ...acc, [key]: inputVariables[key] }), {})).join(\" \");\n        const exampleDocs = await this.vectorStoreRetriever.invoke(query);\n        const examples = exampleDocs.map((doc) => doc.metadata);\n        if (this.exampleKeys) {\n            // If example keys are provided, filter examples to those keys.\n            return examples.map((example) => this.exampleKeys.reduce((acc, key) => ({ ...acc, [key]: example[key] }), {}));\n        }\n        return examples;\n    }\n    /**\n     * Static method that creates a new instance of\n     * SemanticSimilarityExampleSelector. It takes a list of examples, an\n     * instance of Embeddings, a VectorStore class, and an options object as\n     * parameters. It converts the examples to strings, creates a VectorStore\n     * from the strings and the embeddings, and returns a new\n     * SemanticSimilarityExampleSelector with the created VectorStore and the\n     * options provided.\n     * @param examples The list of examples to be used.\n     * @param embeddings The instance of Embeddings to be used.\n     * @param vectorStoreCls The VectorStore class to be used.\n     * @param options The options object for the SemanticSimilarityExampleSelector.\n     * @returns Promise that resolves with a new instance of SemanticSimilarityExampleSelector.\n     */\n    static async fromExamples(examples, embeddings, vectorStoreCls, options = {}) {\n        const inputKeys = options.inputKeys ?? null;\n        const stringExamples = examples.map((example) => sortedValues(inputKeys\n            ? inputKeys.reduce((acc, key) => ({ ...acc, [key]: example[key] }), {})\n            : example).join(\" \"));\n        const vectorStore = await vectorStoreCls.fromTexts(stringExamples, examples, // metadatas\n        embeddings, options);\n        return new SemanticSimilarityExampleSelector({\n            vectorStore,\n            k: options.k ?? 4,\n            exampleKeys: options.exampleKeys,\n            inputKeys: options.inputKeys,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9leGFtcGxlX3NlbGVjdG9ycy9zZW1hbnRpY19zaW1pbGFyaXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDtBQUNKO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsK0JBQStCO0FBQ3hDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMseUNBQXlDO0FBQ2xELFNBQVMsa0NBQWtDO0FBQzNDLFNBQVMsZ0NBQWdDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLE9BQU8sTUFBTTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU0sV0FBVyxPQUFPO0FBQ3hDO0FBQ0E7QUFDQSxzQkFBc0IsVUFBVTtBQUNoQztBQUNBLElBQUk7QUFDSiw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDTyxnREFBZ0QseURBQW1CO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsNkJBQTZCLEtBQUs7QUFDL0c7QUFDQSxnQkFBZ0IsNERBQVE7QUFDeEI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFLG9DQUFvQyxLQUFLO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLDZCQUE2QixLQUFLO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0Y7QUFDaEY7QUFDQTtBQUNBLGdEQUFnRCw2QkFBNkIsS0FBSztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvZXhhbXBsZV9zZWxlY3RvcnMvc2VtYW50aWNfc2ltaWxhcml0eS5qcz9iYzE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERvY3VtZW50IH0gZnJvbSBcIi4uL2RvY3VtZW50cy9kb2N1bWVudC5qc1wiO1xuaW1wb3J0IHsgQmFzZUV4YW1wbGVTZWxlY3RvciB9IGZyb20gXCIuL2Jhc2UuanNcIjtcbmZ1bmN0aW9uIHNvcnRlZFZhbHVlcyh2YWx1ZXMpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXModmFsdWVzKVxuICAgICAgICAuc29ydCgpXG4gICAgICAgIC5tYXAoKGtleSkgPT4gdmFsdWVzW2tleV0pO1xufVxuLyoqXG4gKiBDbGFzcyB0aGF0IHNlbGVjdHMgZXhhbXBsZXMgYmFzZWQgb24gc2VtYW50aWMgc2ltaWxhcml0eS4gSXQgZXh0ZW5kc1xuICogdGhlIEJhc2VFeGFtcGxlU2VsZWN0b3IgY2xhc3MuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgZXhhbXBsZVNlbGVjdG9yID0gYXdhaXQgU2VtYW50aWNTaW1pbGFyaXR5RXhhbXBsZVNlbGVjdG9yLmZyb21FeGFtcGxlcyhcbiAqICAgW1xuICogICAgIHsgaW5wdXQ6IFwiaGFwcHlcIiwgb3V0cHV0OiBcInNhZFwiIH0sXG4gKiAgICAgeyBpbnB1dDogXCJ0YWxsXCIsIG91dHB1dDogXCJzaG9ydFwiIH0sXG4gKiAgICAgeyBpbnB1dDogXCJlbmVyZ2V0aWNcIiwgb3V0cHV0OiBcImxldGhhcmdpY1wiIH0sXG4gKiAgICAgeyBpbnB1dDogXCJzdW5ueVwiLCBvdXRwdXQ6IFwiZ2xvb215XCIgfSxcbiAqICAgICB7IGlucHV0OiBcIndpbmR5XCIsIG91dHB1dDogXCJjYWxtXCIgfSxcbiAqICAgXSxcbiAqICAgbmV3IE9wZW5BSUVtYmVkZGluZ3MoKSxcbiAqICAgSE5TV0xpYixcbiAqICAgeyBrOiAxIH0sXG4gKiApO1xuICogY29uc3QgZHluYW1pY1Byb21wdCA9IG5ldyBGZXdTaG90UHJvbXB0VGVtcGxhdGUoe1xuICogICBleGFtcGxlU2VsZWN0b3IsXG4gKiAgIGV4YW1wbGVQcm9tcHQ6IFByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShcbiAqICAgICBcIklucHV0OiB7aW5wdXR9XFxuT3V0cHV0OiB7b3V0cHV0fVwiLFxuICogICApLFxuICogICBwcmVmaXg6IFwiR2l2ZSB0aGUgYW50b255bSBvZiBldmVyeSBpbnB1dFwiLFxuICogICBzdWZmaXg6IFwiSW5wdXQ6IHthZGplY3RpdmV9XFxuT3V0cHV0OlwiLFxuICogICBpbnB1dFZhcmlhYmxlczogW1wiYWRqZWN0aXZlXCJdLFxuICogfSk7XG4gKiBjb25zb2xlLmxvZyhhd2FpdCBkeW5hbWljUHJvbXB0LmZvcm1hdCh7IGFkamVjdGl2ZTogXCJyYWlueVwiIH0pKTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgU2VtYW50aWNTaW1pbGFyaXR5RXhhbXBsZVNlbGVjdG9yIGV4dGVuZHMgQmFzZUV4YW1wbGVTZWxlY3RvciB7XG4gICAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmVjdG9yU3RvcmVSZXRyaWV2ZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZXhhbXBsZUtleXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5wdXRLZXlzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZXhhbXBsZUtleXMgPSBkYXRhLmV4YW1wbGVLZXlzO1xuICAgICAgICB0aGlzLmlucHV0S2V5cyA9IGRhdGEuaW5wdXRLZXlzO1xuICAgICAgICBpZiAoZGF0YS52ZWN0b3JTdG9yZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnZlY3RvclN0b3JlUmV0cmlldmVyID0gZGF0YS52ZWN0b3JTdG9yZS5hc1JldHJpZXZlcih7XG4gICAgICAgICAgICAgICAgazogZGF0YS5rID8/IDQsXG4gICAgICAgICAgICAgICAgZmlsdGVyOiBkYXRhLmZpbHRlcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRhdGEudmVjdG9yU3RvcmVSZXRyaWV2ZXIpIHtcbiAgICAgICAgICAgIHRoaXMudmVjdG9yU3RvcmVSZXRyaWV2ZXIgPSBkYXRhLnZlY3RvclN0b3JlUmV0cmlldmVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBzcGVjaWZ5IG9uZSBvZiBcInZlY3RvclN0b3JlXCIgYW5kIFwidmVjdG9yU3RvcmVSZXRyaWV2ZXJcIi5gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdGhhdCBhZGRzIGEgbmV3IGV4YW1wbGUgdG8gdGhlIHZlY3RvclN0b3JlLiBUaGUgZXhhbXBsZSBpc1xuICAgICAqIGNvbnZlcnRlZCB0byBhIHN0cmluZyBhbmQgYWRkZWQgdG8gdGhlIHZlY3RvclN0b3JlIGFzIGEgZG9jdW1lbnQuXG4gICAgICogQHBhcmFtIGV4YW1wbGUgVGhlIGV4YW1wbGUgdG8gYmUgYWRkZWQgdG8gdGhlIHZlY3RvclN0b3JlLlxuICAgICAqIEByZXR1cm5zIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBleGFtcGxlIGhhcyBiZWVuIGFkZGVkIHRvIHRoZSB2ZWN0b3JTdG9yZS5cbiAgICAgKi9cbiAgICBhc3luYyBhZGRFeGFtcGxlKGV4YW1wbGUpIHtcbiAgICAgICAgY29uc3QgaW5wdXRLZXlzID0gdGhpcy5pbnB1dEtleXMgPz8gT2JqZWN0LmtleXMoZXhhbXBsZSk7XG4gICAgICAgIGNvbnN0IHN0cmluZ0V4YW1wbGUgPSBzb3J0ZWRWYWx1ZXMoaW5wdXRLZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+ICh7IC4uLmFjYywgW2tleV06IGV4YW1wbGVba2V5XSB9KSwge30pKS5qb2luKFwiIFwiKTtcbiAgICAgICAgYXdhaXQgdGhpcy52ZWN0b3JTdG9yZVJldHJpZXZlci5hZGREb2N1bWVudHMoW1xuICAgICAgICAgICAgbmV3IERvY3VtZW50KHtcbiAgICAgICAgICAgICAgICBwYWdlQ29udGVudDogc3RyaW5nRXhhbXBsZSxcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogZXhhbXBsZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBdKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHRoYXQgc2VsZWN0cyB3aGljaCBleGFtcGxlcyB0byB1c2UgYmFzZWQgb24gc2VtYW50aWMgc2ltaWxhcml0eS5cbiAgICAgKiBJdCBwZXJmb3JtcyBhIHNpbWlsYXJpdHkgc2VhcmNoIGluIHRoZSB2ZWN0b3JTdG9yZSB1c2luZyB0aGUgaW5wdXRcbiAgICAgKiB2YXJpYWJsZXMgYW5kIHJldHVybnMgdGhlIGV4YW1wbGVzIHdpdGggdGhlIGhpZ2hlc3Qgc2ltaWxhcml0eS5cbiAgICAgKiBAcGFyYW0gaW5wdXRWYXJpYWJsZXMgVGhlIGlucHV0IHZhcmlhYmxlcyB1c2VkIGZvciB0aGUgc2ltaWxhcml0eSBzZWFyY2guXG4gICAgICogQHJldHVybnMgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYW4gYXJyYXkgb2YgdGhlIHNlbGVjdGVkIGV4YW1wbGVzLlxuICAgICAqL1xuICAgIGFzeW5jIHNlbGVjdEV4YW1wbGVzKGlucHV0VmFyaWFibGVzKSB7XG4gICAgICAgIGNvbnN0IGlucHV0S2V5cyA9IHRoaXMuaW5wdXRLZXlzID8/IE9iamVjdC5rZXlzKGlucHV0VmFyaWFibGVzKTtcbiAgICAgICAgY29uc3QgcXVlcnkgPSBzb3J0ZWRWYWx1ZXMoaW5wdXRLZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+ICh7IC4uLmFjYywgW2tleV06IGlucHV0VmFyaWFibGVzW2tleV0gfSksIHt9KSkuam9pbihcIiBcIik7XG4gICAgICAgIGNvbnN0IGV4YW1wbGVEb2NzID0gYXdhaXQgdGhpcy52ZWN0b3JTdG9yZVJldHJpZXZlci5pbnZva2UocXVlcnkpO1xuICAgICAgICBjb25zdCBleGFtcGxlcyA9IGV4YW1wbGVEb2NzLm1hcCgoZG9jKSA9PiBkb2MubWV0YWRhdGEpO1xuICAgICAgICBpZiAodGhpcy5leGFtcGxlS2V5cykge1xuICAgICAgICAgICAgLy8gSWYgZXhhbXBsZSBrZXlzIGFyZSBwcm92aWRlZCwgZmlsdGVyIGV4YW1wbGVzIHRvIHRob3NlIGtleXMuXG4gICAgICAgICAgICByZXR1cm4gZXhhbXBsZXMubWFwKChleGFtcGxlKSA9PiB0aGlzLmV4YW1wbGVLZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+ICh7IC4uLmFjYywgW2tleV06IGV4YW1wbGVba2V5XSB9KSwge30pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXhhbXBsZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QgdGhhdCBjcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mXG4gICAgICogU2VtYW50aWNTaW1pbGFyaXR5RXhhbXBsZVNlbGVjdG9yLiBJdCB0YWtlcyBhIGxpc3Qgb2YgZXhhbXBsZXMsIGFuXG4gICAgICogaW5zdGFuY2Ugb2YgRW1iZWRkaW5ncywgYSBWZWN0b3JTdG9yZSBjbGFzcywgYW5kIGFuIG9wdGlvbnMgb2JqZWN0IGFzXG4gICAgICogcGFyYW1ldGVycy4gSXQgY29udmVydHMgdGhlIGV4YW1wbGVzIHRvIHN0cmluZ3MsIGNyZWF0ZXMgYSBWZWN0b3JTdG9yZVxuICAgICAqIGZyb20gdGhlIHN0cmluZ3MgYW5kIHRoZSBlbWJlZGRpbmdzLCBhbmQgcmV0dXJucyBhIG5ld1xuICAgICAqIFNlbWFudGljU2ltaWxhcml0eUV4YW1wbGVTZWxlY3RvciB3aXRoIHRoZSBjcmVhdGVkIFZlY3RvclN0b3JlIGFuZCB0aGVcbiAgICAgKiBvcHRpb25zIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSBleGFtcGxlcyBUaGUgbGlzdCBvZiBleGFtcGxlcyB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSBlbWJlZGRpbmdzIFRoZSBpbnN0YW5jZSBvZiBFbWJlZGRpbmdzIHRvIGJlIHVzZWQuXG4gICAgICogQHBhcmFtIHZlY3RvclN0b3JlQ2xzIFRoZSBWZWN0b3JTdG9yZSBjbGFzcyB0byBiZSB1c2VkLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIFRoZSBvcHRpb25zIG9iamVjdCBmb3IgdGhlIFNlbWFudGljU2ltaWxhcml0eUV4YW1wbGVTZWxlY3Rvci5cbiAgICAgKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIG5ldyBpbnN0YW5jZSBvZiBTZW1hbnRpY1NpbWlsYXJpdHlFeGFtcGxlU2VsZWN0b3IuXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGZyb21FeGFtcGxlcyhleGFtcGxlcywgZW1iZWRkaW5ncywgdmVjdG9yU3RvcmVDbHMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBpbnB1dEtleXMgPSBvcHRpb25zLmlucHV0S2V5cyA/PyBudWxsO1xuICAgICAgICBjb25zdCBzdHJpbmdFeGFtcGxlcyA9IGV4YW1wbGVzLm1hcCgoZXhhbXBsZSkgPT4gc29ydGVkVmFsdWVzKGlucHV0S2V5c1xuICAgICAgICAgICAgPyBpbnB1dEtleXMucmVkdWNlKChhY2MsIGtleSkgPT4gKHsgLi4uYWNjLCBba2V5XTogZXhhbXBsZVtrZXldIH0pLCB7fSlcbiAgICAgICAgICAgIDogZXhhbXBsZSkuam9pbihcIiBcIikpO1xuICAgICAgICBjb25zdCB2ZWN0b3JTdG9yZSA9IGF3YWl0IHZlY3RvclN0b3JlQ2xzLmZyb21UZXh0cyhzdHJpbmdFeGFtcGxlcywgZXhhbXBsZXMsIC8vIG1ldGFkYXRhc1xuICAgICAgICBlbWJlZGRpbmdzLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIG5ldyBTZW1hbnRpY1NpbWlsYXJpdHlFeGFtcGxlU2VsZWN0b3Ioe1xuICAgICAgICAgICAgdmVjdG9yU3RvcmUsXG4gICAgICAgICAgICBrOiBvcHRpb25zLmsgPz8gNCxcbiAgICAgICAgICAgIGV4YW1wbGVLZXlzOiBvcHRpb25zLmV4YW1wbGVLZXlzLFxuICAgICAgICAgICAgaW5wdXRLZXlzOiBvcHRpb25zLmlucHV0S2V5cyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/semantic_similarity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/language_models/base.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/language_models/base.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseLangChain: () => (/* binding */ BaseLangChain),\n/* harmony export */   BaseLanguageModel: () => (/* binding */ BaseLanguageModel),\n/* harmony export */   calculateMaxTokens: () => (/* binding */ calculateMaxTokens),\n/* harmony export */   getEmbeddingContextSize: () => (/* binding */ getEmbeddingContextSize),\n/* harmony export */   getModelContextSize: () => (/* binding */ getModelContextSize),\n/* harmony export */   getModelNameForTiktoken: () => (/* binding */ getModelNameForTiktoken)\n/* harmony export */ });\n/* harmony import */ var _caches_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../caches.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/caches.js\");\n/* harmony import */ var _prompt_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../prompt_values.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js\");\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n/* harmony import */ var _utils_async_caller_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/async_caller.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js\");\n/* harmony import */ var _utils_tiktoken_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/tiktoken.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/tiktoken.js\");\n/* harmony import */ var _runnables_base_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../runnables/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n\n\n\n\n\n\n// https://www.npmjs.com/package/js-tiktoken\nconst getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nconst getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nconst getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\nconst calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await (0,_utils_tiktoken_js__WEBPACK_IMPORTED_MODULE_4__.encodingForModel)(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nclass BaseLangChain extends _runnables_base_js__WEBPACK_IMPORTED_MODULE_5__.Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nclass BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...params,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof params.cache === \"object\") {\n            this.cache = params.cache;\n        }\n        else if (params.cache) {\n            this.cache = _caches_js__WEBPACK_IMPORTED_MODULE_0__.InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new _utils_async_caller_js__WEBPACK_IMPORTED_MODULE_3__.AsyncCaller(params ?? {});\n    }\n    async getNumTokens(content) {\n        // TODO: Figure out correct value.\n        if (typeof content !== \"string\") {\n            return 0;\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(content.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await (0,_utils_tiktoken_js__WEBPACK_IMPORTED_MODULE_4__.encodingForModel)(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(content).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new _prompt_values_js__WEBPACK_IMPORTED_MODULE_1__.StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new _prompt_values_js__WEBPACK_IMPORTED_MODULE_1__.ChatPromptValue(input.map(_messages_index_js__WEBPACK_IMPORTED_MODULE_2__.coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/language_models/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/map_keys.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/load/map_keys.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyFromJson: () => (/* binding */ keyFromJson),\n/* harmony export */   keyToJson: () => (/* binding */ keyToJson),\n/* harmony export */   mapKeys: () => (/* binding */ mapKeys)\n/* harmony export */ });\n/* harmony import */ var decamelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decamelize */ \"(rsc)/./node_modules/decamelize/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! camelcase */ \"(rsc)/./node_modules/camelcase/index.js\");\n\n\nfunction keyToJson(key, map) {\n    return map?.[key] || decamelize__WEBPACK_IMPORTED_MODULE_0__(key);\n}\nfunction keyFromJson(key, map) {\n    return map?.[key] || camelcase__WEBPACK_IMPORTED_MODULE_1__(key);\n}\nfunction mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9sb2FkL21hcF9rZXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1DO0FBQ0Q7QUFDM0I7QUFDUCx5QkFBeUIsdUNBQVM7QUFDbEM7QUFDTztBQUNQLHlCQUF5QixzQ0FBUztBQUNsQztBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9sb2FkL21hcF9rZXlzLmpzP2U4NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNuYWtlQ2FzZSBmcm9tIFwiZGVjYW1lbGl6ZVwiO1xuaW1wb3J0IGNhbWVsQ2FzZSBmcm9tIFwiY2FtZWxjYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24ga2V5VG9Kc29uKGtleSwgbWFwKSB7XG4gICAgcmV0dXJuIG1hcD8uW2tleV0gfHwgc25ha2VDYXNlKGtleSk7XG59XG5leHBvcnQgZnVuY3Rpb24ga2V5RnJvbUpzb24oa2V5LCBtYXApIHtcbiAgICByZXR1cm4gbWFwPy5ba2V5XSB8fCBjYW1lbENhc2Uoa2V5KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYXBLZXlzKGZpZWxkcywgbWFwcGVyLCBtYXApIHtcbiAgICBjb25zdCBtYXBwZWQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBmaWVsZHMpIHtcbiAgICAgICAgaWYgKE9iamVjdC5oYXNPd24oZmllbGRzLCBrZXkpKSB7XG4gICAgICAgICAgICBtYXBwZWRbbWFwcGVyKGtleSwgbWFwKV0gPSBmaWVsZHNba2V5XTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWFwcGVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/map_keys.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Serializable: () => (/* binding */ Serializable),\n/* harmony export */   get_lc_unique_name: () => (/* binding */ get_lc_unique_name)\n/* harmony export */ });\n/* harmony import */ var _map_keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map_keys.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/map_keys.js\");\n\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nfunction get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nclass Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lc_kwargs = kwargs || {};\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: (0,_map_keys_js__WEBPACK_IMPORTED_MODULE_0__.mapKeys)(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, _map_keys_js__WEBPACK_IMPORTED_MODULE_0__.keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/memory.js":
/*!****************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/memory.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMemory: () => (/* binding */ BaseMemory),\n/* harmony export */   getInputValue: () => (/* binding */ getInputValue),\n/* harmony export */   getOutputValue: () => (/* binding */ getOutputValue),\n/* harmony export */   getPromptInputKey: () => (/* binding */ getPromptInputKey)\n/* harmony export */ });\n/**\n * Abstract base class for memory in LangChain's Chains. Memory refers to\n * the state in Chains. It can be used to store information about past\n * executions of a Chain and inject that information into the inputs of\n * future executions of the Chain.\n */\nclass BaseMemory {\n}\nconst getValue = (values, key) => {\n    if (key !== undefined) {\n        return values[key];\n    }\n    const keys = Object.keys(values);\n    if (keys.length === 1) {\n        return values[keys[0]];\n    }\n};\n/**\n * This function is used by memory classes to select the input value\n * to use for the memory. If there is only one input value, it is used.\n * If there are multiple input values, the inputKey must be specified.\n */\nconst getInputValue = (inputValues, inputKey) => {\n    const value = getValue(inputValues, inputKey);\n    if (!value) {\n        const keys = Object.keys(inputValues);\n        throw new Error(`input values have ${keys.length} keys, you must specify an input key or pass only 1 key as input`);\n    }\n    return value;\n};\n/**\n * This function is used by memory classes to select the output value\n * to use for the memory. If there is only one output value, it is used.\n * If there are multiple output values, the outputKey must be specified.\n * If no outputKey is specified, an error is thrown.\n */\nconst getOutputValue = (outputValues, outputKey) => {\n    const value = getValue(outputValues, outputKey);\n    if (!value) {\n        const keys = Object.keys(outputValues);\n        throw new Error(`output values have ${keys.length} keys, you must specify an output key or pass only 1 key as output`);\n    }\n    return value;\n};\n/**\n * Function used by memory classes to get the key of the prompt input,\n * excluding any keys that are memory variables or the \"stop\" key. If\n * there is not exactly one prompt input key, an error is thrown.\n */\nfunction getPromptInputKey(inputs, memoryVariables) {\n    const promptInputKeys = Object.keys(inputs).filter((key) => !memoryVariables.includes(key) && key !== \"stop\");\n    if (promptInputKeys.length !== 1) {\n        throw new Error(`One input key expected, but got ${promptInputKeys.length}`);\n    }\n    return promptInputKeys[0];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZW1vcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsYUFBYTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxhQUFhO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwyREFBMkQsdUJBQXVCO0FBQ2xGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZW1vcnkuanM/MDMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIG1lbW9yeSBpbiBMYW5nQ2hhaW4ncyBDaGFpbnMuIE1lbW9yeSByZWZlcnMgdG9cbiAqIHRoZSBzdGF0ZSBpbiBDaGFpbnMuIEl0IGNhbiBiZSB1c2VkIHRvIHN0b3JlIGluZm9ybWF0aW9uIGFib3V0IHBhc3RcbiAqIGV4ZWN1dGlvbnMgb2YgYSBDaGFpbiBhbmQgaW5qZWN0IHRoYXQgaW5mb3JtYXRpb24gaW50byB0aGUgaW5wdXRzIG9mXG4gKiBmdXR1cmUgZXhlY3V0aW9ucyBvZiB0aGUgQ2hhaW4uXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlTWVtb3J5IHtcbn1cbmNvbnN0IGdldFZhbHVlID0gKHZhbHVlcywga2V5KSA9PiB7XG4gICAgaWYgKGtleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXNba2V5XTtcbiAgICB9XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlcyk7XG4gICAgaWYgKGtleXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXNba2V5c1swXV07XG4gICAgfVxufTtcbi8qKlxuICogVGhpcyBmdW5jdGlvbiBpcyB1c2VkIGJ5IG1lbW9yeSBjbGFzc2VzIHRvIHNlbGVjdCB0aGUgaW5wdXQgdmFsdWVcbiAqIHRvIHVzZSBmb3IgdGhlIG1lbW9yeS4gSWYgdGhlcmUgaXMgb25seSBvbmUgaW5wdXQgdmFsdWUsIGl0IGlzIHVzZWQuXG4gKiBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgaW5wdXQgdmFsdWVzLCB0aGUgaW5wdXRLZXkgbXVzdCBiZSBzcGVjaWZpZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRJbnB1dFZhbHVlID0gKGlucHV0VmFsdWVzLCBpbnB1dEtleSkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZ2V0VmFsdWUoaW5wdXRWYWx1ZXMsIGlucHV0S2V5KTtcbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhpbnB1dFZhbHVlcyk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgaW5wdXQgdmFsdWVzIGhhdmUgJHtrZXlzLmxlbmd0aH0ga2V5cywgeW91IG11c3Qgc3BlY2lmeSBhbiBpbnB1dCBrZXkgb3IgcGFzcyBvbmx5IDEga2V5IGFzIGlucHV0YCk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbn07XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCBieSBtZW1vcnkgY2xhc3NlcyB0byBzZWxlY3QgdGhlIG91dHB1dCB2YWx1ZVxuICogdG8gdXNlIGZvciB0aGUgbWVtb3J5LiBJZiB0aGVyZSBpcyBvbmx5IG9uZSBvdXRwdXQgdmFsdWUsIGl0IGlzIHVzZWQuXG4gKiBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgb3V0cHV0IHZhbHVlcywgdGhlIG91dHB1dEtleSBtdXN0IGJlIHNwZWNpZmllZC5cbiAqIElmIG5vIG91dHB1dEtleSBpcyBzcGVjaWZpZWQsIGFuIGVycm9yIGlzIHRocm93bi5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldE91dHB1dFZhbHVlID0gKG91dHB1dFZhbHVlcywgb3V0cHV0S2V5KSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSBnZXRWYWx1ZShvdXRwdXRWYWx1ZXMsIG91dHB1dEtleSk7XG4gICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob3V0cHV0VmFsdWVzKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBvdXRwdXQgdmFsdWVzIGhhdmUgJHtrZXlzLmxlbmd0aH0ga2V5cywgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQga2V5IG9yIHBhc3Mgb25seSAxIGtleSBhcyBvdXRwdXRgKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcbi8qKlxuICogRnVuY3Rpb24gdXNlZCBieSBtZW1vcnkgY2xhc3NlcyB0byBnZXQgdGhlIGtleSBvZiB0aGUgcHJvbXB0IGlucHV0LFxuICogZXhjbHVkaW5nIGFueSBrZXlzIHRoYXQgYXJlIG1lbW9yeSB2YXJpYWJsZXMgb3IgdGhlIFwic3RvcFwiIGtleS4gSWZcbiAqIHRoZXJlIGlzIG5vdCBleGFjdGx5IG9uZSBwcm9tcHQgaW5wdXQga2V5LCBhbiBlcnJvciBpcyB0aHJvd24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9tcHRJbnB1dEtleShpbnB1dHMsIG1lbW9yeVZhcmlhYmxlcykge1xuICAgIGNvbnN0IHByb21wdElucHV0S2V5cyA9IE9iamVjdC5rZXlzKGlucHV0cykuZmlsdGVyKChrZXkpID0+ICFtZW1vcnlWYXJpYWJsZXMuaW5jbHVkZXMoa2V5KSAmJiBrZXkgIT09IFwic3RvcFwiKTtcbiAgICBpZiAocHJvbXB0SW5wdXRLZXlzLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE9uZSBpbnB1dCBrZXkgZXhwZWN0ZWQsIGJ1dCBnb3QgJHtwcm9tcHRJbnB1dEtleXMubGVuZ3RofWApO1xuICAgIH1cbiAgICByZXR1cm4gcHJvbXB0SW5wdXRLZXlzWzBdO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/memory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/ai.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/ai.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIMessage: () => (/* binding */ AIMessage),\n/* harmony export */   AIMessageChunk: () => (/* binding */ AIMessageChunk),\n/* harmony export */   isAIMessage: () => (/* binding */ isAIMessage)\n/* harmony export */ });\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/json.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n/* harmony import */ var _tool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tool.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/tool.js\");\n\n\n\n/**\n * Represents an AI message in a conversation.\n */\nclass AIMessage extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseMessage {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                additional_kwargs: kwargs ?? {},\n            };\n        }\n        else {\n            initParams = fields;\n            const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n            const toolCalls = initParams.tool_calls;\n            if (!(rawToolCalls == null) &&\n                rawToolCalls.length > 0 &&\n                (toolCalls === undefined || toolCalls.length === 0)) {\n                console.warn([\n                    \"New LangChain packages are available that more efficiently handle\",\n                    \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n                    \"message tool calls. e.g., `yarn add @langchain/anthropic`,\",\n                    \"yarn add @langchain/openai`, etc.\",\n                ].join(\" \"));\n            }\n            try {\n                if (!(rawToolCalls == null) && toolCalls === undefined) {\n                    const [toolCalls, invalidToolCalls] = (0,_tool_js__WEBPACK_IMPORTED_MODULE_2__.defaultToolCallParser)(rawToolCalls);\n                    initParams.tool_calls = toolCalls ?? [];\n                    initParams.invalid_tool_calls = invalidToolCalls ?? [];\n                }\n                else {\n                    initParams.tool_calls = initParams.tool_calls ?? [];\n                    initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n                }\n            }\n            catch (e) {\n                // Do nothing if parsing fails\n                initParams.tool_calls = [];\n                initParams.invalid_tool_calls = [];\n            }\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        if (typeof initParams !== \"string\") {\n            this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n            this.invalid_tool_calls =\n                initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        }\n    }\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n}\nfunction isAIMessage(x) {\n    return x._getType() === \"ai\";\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nclass AIMessageChunk extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseMessageChunk {\n    constructor(fields) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else if (fields.tool_call_chunks === undefined) {\n            initParams = {\n                ...fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else {\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const toolCallChunk of fields.tool_call_chunks) {\n                let parsedArgs = {};\n                try {\n                    parsedArgs = (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_0__.parsePartialJson)(toolCallChunk.args ?? \"{}\") ?? {};\n                    if (typeof parsedArgs !== \"object\" || Array.isArray(parsedArgs)) {\n                        throw new Error(\"Malformed tool call chunk args.\");\n                    }\n                    toolCalls.push({\n                        name: toolCallChunk.name ?? \"\",\n                        args: parsedArgs,\n                        id: toolCallChunk.id,\n                    });\n                }\n                catch (e) {\n                    invalidToolCalls.push({\n                        name: toolCallChunk.name,\n                        args: toolCallChunk.args,\n                        id: toolCallChunk.id,\n                        error: \"Malformed args.\",\n                    });\n                }\n            }\n            initParams = {\n                ...fields,\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n            };\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // Must redeclare tool call fields since there is no multiple inheritance in JS.\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tool_call_chunks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.tool_call_chunks =\n            initParams?.tool_call_chunks ?? this.tool_call_chunks;\n        this.tool_calls = initParams?.tool_calls ?? this.tool_calls;\n        this.invalid_tool_calls =\n            initParams?.invalid_tool_calls ?? this.invalid_tool_calls;\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n            tool_call_chunks: \"tool_call_chunks\",\n        };\n    }\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    concat(chunk) {\n        const combinedFields = {\n            content: (0,_base_js__WEBPACK_IMPORTED_MODULE_1__.mergeContent)(this.content, chunk.content),\n            additional_kwargs: (0,_base_js__WEBPACK_IMPORTED_MODULE_1__._mergeDicts)(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: (0,_base_js__WEBPACK_IMPORTED_MODULE_1__._mergeDicts)(this.response_metadata, chunk.response_metadata),\n            tool_call_chunks: [],\n        };\n        if (this.tool_call_chunks !== undefined ||\n            chunk.tool_call_chunks !== undefined) {\n            const rawToolCalls = (0,_base_js__WEBPACK_IMPORTED_MODULE_1__._mergeLists)(this.tool_call_chunks, chunk.tool_call_chunks);\n            if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n                combinedFields.tool_call_chunks = rawToolCalls;\n            }\n        }\n        return new AIMessageChunk(combinedFields);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/ai.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMessage: () => (/* binding */ BaseMessage),\n/* harmony export */   BaseMessageChunk: () => (/* binding */ BaseMessageChunk),\n/* harmony export */   _mergeDicts: () => (/* binding */ _mergeDicts),\n/* harmony export */   _mergeLists: () => (/* binding */ _mergeLists),\n/* harmony export */   isBaseMessage: () => (/* binding */ isBaseMessage),\n/* harmony export */   isBaseMessageChunk: () => (/* binding */ isBaseMessageChunk),\n/* harmony export */   isOpenAIToolCallArray: () => (/* binding */ isOpenAIToolCallArray),\n/* harmony export */   mergeContent: () => (/* binding */ mergeContent)\n/* harmony export */ });\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n\nfunction mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return [...firstContent, ...secondContent];\n        // If the first content is a list and second is a string\n    }\n    else {\n        // Otherwise, add the second content as a new element of the list\n        return [...firstContent, { type: \"text\", text: secondContent }];\n    }\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nclass BaseMessage extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * @deprecated\n     * Use {@link BaseMessage.content} instead.\n     */\n    get text() {\n        return typeof this.content === \"string\" ? this.content : \"\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n}\nfunction isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nfunction _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            merged[key] = merged[key] + value;\n        }\n        else if (!Array.isArray(merged[key]) && typeof merged[key] === \"object\") {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => leftItem.index === item.index);\n                if (toMerge !== -1) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nclass BaseMessageChunk extends BaseMessage {\n}\nfunction isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nfunction isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/chat.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/chat.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatMessage: () => (/* binding */ ChatMessage),\n/* harmony export */   ChatMessageChunk: () => (/* binding */ ChatMessageChunk)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n\n/**\n * Represents a chat message in a conversation.\n */\nclass ChatMessage extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage {\n    static lc_name() {\n        return \"ChatMessage\";\n    }\n    static _chatMessageClass() {\n        return ChatMessage;\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"generic\";\n    }\n}\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nclass ChatMessageChunk extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageChunk {\n    static lc_name() {\n        return \"ChatMessageChunk\";\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    concat(chunk) {\n        return new ChatMessageChunk({\n            content: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.mergeContent)(this.content, chunk.content),\n            additional_kwargs: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.response_metadata, chunk.response_metadata),\n            role: this.role,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy9jaGF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRjtBQUN0RjtBQUNBO0FBQ0E7QUFDTywwQkFBMEIsaURBQVc7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLHNEQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0RBQVk7QUFDakMsK0JBQStCLHFEQUFXO0FBQzFDLCtCQUErQixxREFBVztBQUMxQztBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L21lc3NhZ2VzL2NoYXQuanM/MzJiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlTWVzc2FnZSwgQmFzZU1lc3NhZ2VDaHVuaywgbWVyZ2VDb250ZW50LCBfbWVyZ2VEaWN0cywgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBjaGF0IG1lc3NhZ2UgaW4gYSBjb252ZXJzYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGF0TWVzc2FnZSBleHRlbmRzIEJhc2VNZXNzYWdlIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiQ2hhdE1lc3NhZ2VcIjtcbiAgICB9XG4gICAgc3RhdGljIF9jaGF0TWVzc2FnZUNsYXNzKCkge1xuICAgICAgICByZXR1cm4gQ2hhdE1lc3NhZ2U7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGZpZWxkcywgcm9sZSkge1xuICAgICAgICBpZiAodHlwZW9mIGZpZWxkcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICBmaWVsZHMgPSB7IGNvbnRlbnQ6IGZpZWxkcywgcm9sZTogcm9sZSB9O1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJvbGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5yb2xlID0gZmllbGRzLnJvbGU7XG4gICAgfVxuICAgIF9nZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gXCJnZW5lcmljXCI7XG4gICAgfVxuICAgIHN0YXRpYyBpc0luc3RhbmNlKG1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2UuX2dldFR5cGUoKSA9PT0gXCJnZW5lcmljXCI7XG4gICAgfVxufVxuLyoqXG4gKiBSZXByZXNlbnRzIGEgY2h1bmsgb2YgYSBjaGF0IG1lc3NhZ2UsIHdoaWNoIGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aFxuICogb3RoZXIgY2hhdCBtZXNzYWdlIGNodW5rcy5cbiAqL1xuZXhwb3J0IGNsYXNzIENoYXRNZXNzYWdlQ2h1bmsgZXh0ZW5kcyBCYXNlTWVzc2FnZUNodW5rIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiQ2hhdE1lc3NhZ2VDaHVua1wiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMsIHJvbGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBmaWVsZHMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnbiwgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICAgICAgZmllbGRzID0geyBjb250ZW50OiBmaWVsZHMsIHJvbGU6IHJvbGUgfTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyb2xlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucm9sZSA9IGZpZWxkcy5yb2xlO1xuICAgIH1cbiAgICBfZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiZ2VuZXJpY1wiO1xuICAgIH1cbiAgICBjb25jYXQoY2h1bmspIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDaGF0TWVzc2FnZUNodW5rKHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IG1lcmdlQ29udGVudCh0aGlzLmNvbnRlbnQsIGNodW5rLmNvbnRlbnQpLFxuICAgICAgICAgICAgYWRkaXRpb25hbF9rd2FyZ3M6IF9tZXJnZURpY3RzKHRoaXMuYWRkaXRpb25hbF9rd2FyZ3MsIGNodW5rLmFkZGl0aW9uYWxfa3dhcmdzKSxcbiAgICAgICAgICAgIHJlc3BvbnNlX21ldGFkYXRhOiBfbWVyZ2VEaWN0cyh0aGlzLnJlc3BvbnNlX21ldGFkYXRhLCBjaHVuay5yZXNwb25zZV9tZXRhZGF0YSksXG4gICAgICAgICAgICByb2xlOiB0aGlzLnJvbGUsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/chat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/function.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/function.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionMessage: () => (/* binding */ FunctionMessage),\n/* harmony export */   FunctionMessageChunk: () => (/* binding */ FunctionMessageChunk)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n\n/**\n * Represents a function message in a conversation.\n */\nclass FunctionMessage extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage {\n    static lc_name() {\n        return \"FunctionMessage\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name: name };\n        }\n        super(fields);\n    }\n    _getType() {\n        return \"function\";\n    }\n}\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nclass FunctionMessageChunk extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageChunk {\n    static lc_name() {\n        return \"FunctionMessageChunk\";\n    }\n    _getType() {\n        return \"function\";\n    }\n    concat(chunk) {\n        return new FunctionMessageChunk({\n            content: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.mergeContent)(this.content, chunk.content),\n            additional_kwargs: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.response_metadata, chunk.response_metadata),\n            name: this.name ?? \"\",\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy9mdW5jdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Y7QUFDdEY7QUFDQTtBQUNBO0FBQ08sOEJBQThCLGlEQUFXO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1DQUFtQyxzREFBZ0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixzREFBWTtBQUNqQywrQkFBK0IscURBQVc7QUFDMUMsK0JBQStCLHFEQUFXO0FBQzFDO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvbWVzc2FnZXMvZnVuY3Rpb24uanM/OWYyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlTWVzc2FnZSwgQmFzZU1lc3NhZ2VDaHVuaywgbWVyZ2VDb250ZW50LCBfbWVyZ2VEaWN0cywgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBmdW5jdGlvbiBtZXNzYWdlIGluIGEgY29udmVyc2F0aW9uLlxuICovXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25NZXNzYWdlIGV4dGVuZHMgQmFzZU1lc3NhZ2Uge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJGdW5jdGlvbk1lc3NhZ2VcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoZmllbGRzLCBcbiAgICAvKiogQGRlcHJlY2F0ZWQgKi9cbiAgICBuYW1lKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZmllbGRzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24sIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgICAgIGZpZWxkcyA9IHsgY29udGVudDogZmllbGRzLCBuYW1lOiBuYW1lIH07XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoZmllbGRzKTtcbiAgICB9XG4gICAgX2dldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcImZ1bmN0aW9uXCI7XG4gICAgfVxufVxuLyoqXG4gKiBSZXByZXNlbnRzIGEgY2h1bmsgb2YgYSBmdW5jdGlvbiBtZXNzYWdlLCB3aGljaCBjYW4gYmUgY29uY2F0ZW5hdGVkXG4gKiB3aXRoIG90aGVyIGZ1bmN0aW9uIG1lc3NhZ2UgY2h1bmtzLlxuICovXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25NZXNzYWdlQ2h1bmsgZXh0ZW5kcyBCYXNlTWVzc2FnZUNodW5rIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiRnVuY3Rpb25NZXNzYWdlQ2h1bmtcIjtcbiAgICB9XG4gICAgX2dldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcImZ1bmN0aW9uXCI7XG4gICAgfVxuICAgIGNvbmNhdChjaHVuaykge1xuICAgICAgICByZXR1cm4gbmV3IEZ1bmN0aW9uTWVzc2FnZUNodW5rKHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IG1lcmdlQ29udGVudCh0aGlzLmNvbnRlbnQsIGNodW5rLmNvbnRlbnQpLFxuICAgICAgICAgICAgYWRkaXRpb25hbF9rd2FyZ3M6IF9tZXJnZURpY3RzKHRoaXMuYWRkaXRpb25hbF9rd2FyZ3MsIGNodW5rLmFkZGl0aW9uYWxfa3dhcmdzKSxcbiAgICAgICAgICAgIHJlc3BvbnNlX21ldGFkYXRhOiBfbWVyZ2VEaWN0cyh0aGlzLnJlc3BvbnNlX21ldGFkYXRhLCBjaHVuay5yZXNwb25zZV9tZXRhZGF0YSksXG4gICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUgPz8gXCJcIixcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/function.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/human.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/human.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HumanMessage: () => (/* binding */ HumanMessage),\n/* harmony export */   HumanMessageChunk: () => (/* binding */ HumanMessageChunk)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n\n/**\n * Represents a human message in a conversation.\n */\nclass HumanMessage extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage {\n    static lc_name() {\n        return \"HumanMessage\";\n    }\n    _getType() {\n        return \"human\";\n    }\n}\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nclass HumanMessageChunk extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageChunk {\n    static lc_name() {\n        return \"HumanMessageChunk\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    concat(chunk) {\n        return new HumanMessageChunk({\n            content: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.mergeContent)(this.content, chunk.content),\n            additional_kwargs: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.response_metadata, chunk.response_metadata),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy9odW1hbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Y7QUFDdEY7QUFDQTtBQUNBO0FBQ08sMkJBQTJCLGlEQUFXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0Msc0RBQWdCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0RBQVk7QUFDakMsK0JBQStCLHFEQUFXO0FBQzFDLCtCQUErQixxREFBVztBQUMxQyxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy9odW1hbi5qcz8zYWFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VNZXNzYWdlLCBCYXNlTWVzc2FnZUNodW5rLCBtZXJnZUNvbnRlbnQsIF9tZXJnZURpY3RzLCB9IGZyb20gXCIuL2Jhc2UuanNcIjtcbi8qKlxuICogUmVwcmVzZW50cyBhIGh1bWFuIG1lc3NhZ2UgaW4gYSBjb252ZXJzYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBIdW1hbk1lc3NhZ2UgZXh0ZW5kcyBCYXNlTWVzc2FnZSB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIkh1bWFuTWVzc2FnZVwiO1xuICAgIH1cbiAgICBfZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiaHVtYW5cIjtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBjaHVuayBvZiBhIGh1bWFuIG1lc3NhZ2UsIHdoaWNoIGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aFxuICogb3RoZXIgaHVtYW4gbWVzc2FnZSBjaHVua3MuXG4gKi9cbmV4cG9ydCBjbGFzcyBIdW1hbk1lc3NhZ2VDaHVuayBleHRlbmRzIEJhc2VNZXNzYWdlQ2h1bmsge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJIdW1hbk1lc3NhZ2VDaHVua1wiO1xuICAgIH1cbiAgICBfZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiaHVtYW5cIjtcbiAgICB9XG4gICAgY29uY2F0KGNodW5rKSB7XG4gICAgICAgIHJldHVybiBuZXcgSHVtYW5NZXNzYWdlQ2h1bmsoe1xuICAgICAgICAgICAgY29udGVudDogbWVyZ2VDb250ZW50KHRoaXMuY29udGVudCwgY2h1bmsuY29udGVudCksXG4gICAgICAgICAgICBhZGRpdGlvbmFsX2t3YXJnczogX21lcmdlRGljdHModGhpcy5hZGRpdGlvbmFsX2t3YXJncywgY2h1bmsuYWRkaXRpb25hbF9rd2FyZ3MpLFxuICAgICAgICAgICAgcmVzcG9uc2VfbWV0YWRhdGE6IF9tZXJnZURpY3RzKHRoaXMucmVzcG9uc2VfbWV0YWRhdGEsIGNodW5rLnJlc3BvbnNlX21ldGFkYXRhKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/human.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIMessage: () => (/* reexport safe */ _ai_js__WEBPACK_IMPORTED_MODULE_0__.AIMessage),\n/* harmony export */   AIMessageChunk: () => (/* reexport safe */ _ai_js__WEBPACK_IMPORTED_MODULE_0__.AIMessageChunk),\n/* harmony export */   BaseMessage: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseMessage),\n/* harmony export */   BaseMessageChunk: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseMessageChunk),\n/* harmony export */   ChatMessage: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_2__.ChatMessage),\n/* harmony export */   ChatMessageChunk: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_2__.ChatMessageChunk),\n/* harmony export */   FunctionMessage: () => (/* reexport safe */ _function_js__WEBPACK_IMPORTED_MODULE_3__.FunctionMessage),\n/* harmony export */   FunctionMessageChunk: () => (/* reexport safe */ _function_js__WEBPACK_IMPORTED_MODULE_3__.FunctionMessageChunk),\n/* harmony export */   HumanMessage: () => (/* reexport safe */ _human_js__WEBPACK_IMPORTED_MODULE_4__.HumanMessage),\n/* harmony export */   HumanMessageChunk: () => (/* reexport safe */ _human_js__WEBPACK_IMPORTED_MODULE_4__.HumanMessageChunk),\n/* harmony export */   SystemMessage: () => (/* reexport safe */ _system_js__WEBPACK_IMPORTED_MODULE_5__.SystemMessage),\n/* harmony export */   SystemMessageChunk: () => (/* reexport safe */ _system_js__WEBPACK_IMPORTED_MODULE_5__.SystemMessageChunk),\n/* harmony export */   ToolMessage: () => (/* reexport safe */ _tool_js__WEBPACK_IMPORTED_MODULE_7__.ToolMessage),\n/* harmony export */   ToolMessageChunk: () => (/* reexport safe */ _tool_js__WEBPACK_IMPORTED_MODULE_7__.ToolMessageChunk),\n/* harmony export */   _mergeDicts: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__._mergeDicts),\n/* harmony export */   _mergeLists: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__._mergeLists),\n/* harmony export */   coerceMessageLikeToMessage: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.coerceMessageLikeToMessage),\n/* harmony export */   convertToChunk: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.convertToChunk),\n/* harmony export */   getBufferString: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.getBufferString),\n/* harmony export */   isAIMessage: () => (/* reexport safe */ _ai_js__WEBPACK_IMPORTED_MODULE_0__.isAIMessage),\n/* harmony export */   isBaseMessage: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage),\n/* harmony export */   isBaseMessageChunk: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__.isBaseMessageChunk),\n/* harmony export */   isOpenAIToolCallArray: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__.isOpenAIToolCallArray),\n/* harmony export */   mapChatMessagesToStoredMessages: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.mapChatMessagesToStoredMessages),\n/* harmony export */   mapStoredMessageToChatMessage: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.mapStoredMessageToChatMessage),\n/* harmony export */   mapStoredMessagesToChatMessages: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.mapStoredMessagesToChatMessages),\n/* harmony export */   mergeContent: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_1__.mergeContent)\n/* harmony export */ });\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ai.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/ai.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n/* harmony import */ var _chat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/chat.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./function.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/function.js\");\n/* harmony import */ var _human_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./human.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/human.js\");\n/* harmony import */ var _system_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./system.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/system.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/utils.js\");\n/* harmony import */ var _tool_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tool.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/tool.js\");\n\n\n\n\n\n\n\n// TODO: Use a star export when we deprecate the\n// existing \"ToolCall\" type in \"base.js\".\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QjtBQUNFO0FBQ0E7QUFDSTtBQUNIO0FBQ0M7QUFDRDtBQUMzQjtBQUNBO0FBQzJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L21lc3NhZ2VzL2luZGV4LmpzP2YwZGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vYWkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Jhc2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NoYXQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Z1bmN0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9odW1hbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3lzdGVtLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy5qc1wiO1xuLy8gVE9ETzogVXNlIGEgc3RhciBleHBvcnQgd2hlbiB3ZSBkZXByZWNhdGUgdGhlXG4vLyBleGlzdGluZyBcIlRvb2xDYWxsXCIgdHlwZSBpbiBcImJhc2UuanNcIi5cbmV4cG9ydCB7IFRvb2xNZXNzYWdlLCBUb29sTWVzc2FnZUNodW5rLCB9IGZyb20gXCIuL3Rvb2wuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/system.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/system.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemMessage: () => (/* binding */ SystemMessage),\n/* harmony export */   SystemMessageChunk: () => (/* binding */ SystemMessageChunk)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n\n/**\n * Represents a system message in a conversation.\n */\nclass SystemMessage extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage {\n    static lc_name() {\n        return \"SystemMessage\";\n    }\n    _getType() {\n        return \"system\";\n    }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nclass SystemMessageChunk extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageChunk {\n    static lc_name() {\n        return \"SystemMessageChunk\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    concat(chunk) {\n        return new SystemMessageChunk({\n            content: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.mergeContent)(this.content, chunk.content),\n            additional_kwargs: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.response_metadata, chunk.response_metadata),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy9zeXN0ZW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNGO0FBQ3RGO0FBQ0E7QUFDQTtBQUNPLDRCQUE0QixpREFBVztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUNBQWlDLHNEQUFnQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFZO0FBQ2pDLCtCQUErQixxREFBVztBQUMxQywrQkFBK0IscURBQVc7QUFDMUMsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvbWVzc2FnZXMvc3lzdGVtLmpzP2Y0NTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZU1lc3NhZ2UsIEJhc2VNZXNzYWdlQ2h1bmssIG1lcmdlQ29udGVudCwgX21lcmdlRGljdHMsIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEgc3lzdGVtIG1lc3NhZ2UgaW4gYSBjb252ZXJzYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBTeXN0ZW1NZXNzYWdlIGV4dGVuZHMgQmFzZU1lc3NhZ2Uge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJTeXN0ZW1NZXNzYWdlXCI7XG4gICAgfVxuICAgIF9nZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gXCJzeXN0ZW1cIjtcbiAgICB9XG59XG4vKipcbiAqIFJlcHJlc2VudHMgYSBjaHVuayBvZiBhIHN5c3RlbSBtZXNzYWdlLCB3aGljaCBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGhcbiAqIG90aGVyIHN5c3RlbSBtZXNzYWdlIGNodW5rcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFN5c3RlbU1lc3NhZ2VDaHVuayBleHRlbmRzIEJhc2VNZXNzYWdlQ2h1bmsge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJTeXN0ZW1NZXNzYWdlQ2h1bmtcIjtcbiAgICB9XG4gICAgX2dldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcInN5c3RlbVwiO1xuICAgIH1cbiAgICBjb25jYXQoY2h1bmspIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTeXN0ZW1NZXNzYWdlQ2h1bmsoe1xuICAgICAgICAgICAgY29udGVudDogbWVyZ2VDb250ZW50KHRoaXMuY29udGVudCwgY2h1bmsuY29udGVudCksXG4gICAgICAgICAgICBhZGRpdGlvbmFsX2t3YXJnczogX21lcmdlRGljdHModGhpcy5hZGRpdGlvbmFsX2t3YXJncywgY2h1bmsuYWRkaXRpb25hbF9rd2FyZ3MpLFxuICAgICAgICAgICAgcmVzcG9uc2VfbWV0YWRhdGE6IF9tZXJnZURpY3RzKHRoaXMucmVzcG9uc2VfbWV0YWRhdGEsIGNodW5rLnJlc3BvbnNlX21ldGFkYXRhKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/system.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/tool.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/tool.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolMessage: () => (/* binding */ ToolMessage),\n/* harmony export */   ToolMessageChunk: () => (/* binding */ ToolMessageChunk),\n/* harmony export */   defaultToolCallParser: () => (/* binding */ defaultToolCallParser)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n\n/**\n * Represents a tool message in a conversation.\n */\nclass ToolMessage extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage {\n    static lc_name() {\n        return \"ToolMessage\";\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return { tool_call_id: \"tool_call_id\" };\n    }\n    constructor(fields, tool_call_id, name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name, tool_call_id: tool_call_id };\n        }\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n    }\n    _getType() {\n        return \"tool\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"tool\";\n    }\n}\n/**\n * Represents a chunk of a tool message, which can be concatenated\n * with other tool message chunks.\n */\nclass ToolMessageChunk extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n    }\n    static lc_name() {\n        return \"ToolMessageChunk\";\n    }\n    _getType() {\n        return \"tool\";\n    }\n    concat(chunk) {\n        return new ToolMessageChunk({\n            content: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.mergeContent)(this.content, chunk.content),\n            additional_kwargs: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts)(this.response_metadata, chunk.response_metadata),\n            tool_call_id: this.tool_call_id,\n        });\n    }\n}\nfunction defaultToolCallParser(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCalls) {\n    const toolCalls = [];\n    const invalidToolCalls = [];\n    for (const toolCall of rawToolCalls) {\n        if (!toolCall.function) {\n            continue;\n        }\n        else {\n            const functionName = toolCall.function.name;\n            try {\n                const functionArgs = JSON.parse(toolCall.function.arguments);\n                const parsed = {\n                    name: functionName || \"\",\n                    args: functionArgs || {},\n                    id: toolCall.id,\n                };\n                toolCalls.push(parsed);\n            }\n            catch (error) {\n                invalidToolCalls.push({\n                    name: functionName,\n                    args: toolCall.function.arguments,\n                    id: toolCall.id,\n                    error: \"Malformed args.\",\n                });\n            }\n        }\n    }\n    return [toolCalls, invalidToolCalls];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9tZXNzYWdlcy90b29sLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Y7QUFDdEY7QUFDQTtBQUNBO0FBQ08sMEJBQTBCLGlEQUFXO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQkFBK0Isc0RBQWdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFZO0FBQ2pDLCtCQUErQixxREFBVztBQUMxQywrQkFBK0IscURBQVc7QUFDMUM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L21lc3NhZ2VzL3Rvb2wuanM/YTMwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlTWVzc2FnZSwgQmFzZU1lc3NhZ2VDaHVuaywgbWVyZ2VDb250ZW50LCBfbWVyZ2VEaWN0cywgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYSB0b29sIG1lc3NhZ2UgaW4gYSBjb252ZXJzYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBUb29sTWVzc2FnZSBleHRlbmRzIEJhc2VNZXNzYWdlIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiVG9vbE1lc3NhZ2VcIjtcbiAgICB9XG4gICAgZ2V0IGxjX2FsaWFzZXMoKSB7XG4gICAgICAgIC8vIGV4Y2x1ZGUgc25ha2UgY2FzZSBjb252ZXJzaW9uIHRvIHBhc2NhbCBjYXNlXG4gICAgICAgIHJldHVybiB7IHRvb2xfY2FsbF9pZDogXCJ0b29sX2NhbGxfaWRcIiB9O1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMsIHRvb2xfY2FsbF9pZCwgbmFtZSkge1xuICAgICAgICBpZiAodHlwZW9mIGZpZWxkcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICBmaWVsZHMgPSB7IGNvbnRlbnQ6IGZpZWxkcywgbmFtZSwgdG9vbF9jYWxsX2lkOiB0b29sX2NhbGxfaWQgfTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0b29sX2NhbGxfaWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50b29sX2NhbGxfaWQgPSBmaWVsZHMudG9vbF9jYWxsX2lkO1xuICAgIH1cbiAgICBfZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwidG9vbFwiO1xuICAgIH1cbiAgICBzdGF0aWMgaXNJbnN0YW5jZShtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiBtZXNzYWdlLl9nZXRUeXBlKCkgPT09IFwidG9vbFwiO1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIGNodW5rIG9mIGEgdG9vbCBtZXNzYWdlLCB3aGljaCBjYW4gYmUgY29uY2F0ZW5hdGVkXG4gKiB3aXRoIG90aGVyIHRvb2wgbWVzc2FnZSBjaHVua3MuXG4gKi9cbmV4cG9ydCBjbGFzcyBUb29sTWVzc2FnZUNodW5rIGV4dGVuZHMgQmFzZU1lc3NhZ2VDaHVuayB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRvb2xfY2FsbF9pZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRvb2xfY2FsbF9pZCA9IGZpZWxkcy50b29sX2NhbGxfaWQ7XG4gICAgfVxuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJUb29sTWVzc2FnZUNodW5rXCI7XG4gICAgfVxuICAgIF9nZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gXCJ0b29sXCI7XG4gICAgfVxuICAgIGNvbmNhdChjaHVuaykge1xuICAgICAgICByZXR1cm4gbmV3IFRvb2xNZXNzYWdlQ2h1bmsoe1xuICAgICAgICAgICAgY29udGVudDogbWVyZ2VDb250ZW50KHRoaXMuY29udGVudCwgY2h1bmsuY29udGVudCksXG4gICAgICAgICAgICBhZGRpdGlvbmFsX2t3YXJnczogX21lcmdlRGljdHModGhpcy5hZGRpdGlvbmFsX2t3YXJncywgY2h1bmsuYWRkaXRpb25hbF9rd2FyZ3MpLFxuICAgICAgICAgICAgcmVzcG9uc2VfbWV0YWRhdGE6IF9tZXJnZURpY3RzKHRoaXMucmVzcG9uc2VfbWV0YWRhdGEsIGNodW5rLnJlc3BvbnNlX21ldGFkYXRhKSxcbiAgICAgICAgICAgIHRvb2xfY2FsbF9pZDogdGhpcy50b29sX2NhbGxfaWQsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0VG9vbENhbGxQYXJzZXIoXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxucmF3VG9vbENhbGxzKSB7XG4gICAgY29uc3QgdG9vbENhbGxzID0gW107XG4gICAgY29uc3QgaW52YWxpZFRvb2xDYWxscyA9IFtdO1xuICAgIGZvciAoY29uc3QgdG9vbENhbGwgb2YgcmF3VG9vbENhbGxzKSB7XG4gICAgICAgIGlmICghdG9vbENhbGwuZnVuY3Rpb24pIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZnVuY3Rpb25OYW1lID0gdG9vbENhbGwuZnVuY3Rpb24ubmFtZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZnVuY3Rpb25BcmdzID0gSlNPTi5wYXJzZSh0b29sQ2FsbC5mdW5jdGlvbi5hcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogZnVuY3Rpb25OYW1lIHx8IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3M6IGZ1bmN0aW9uQXJncyB8fCB7fSxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHRvb2xDYWxsLmlkLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdG9vbENhbGxzLnB1c2gocGFyc2VkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGludmFsaWRUb29sQ2FsbHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGZ1bmN0aW9uTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgYXJnczogdG9vbENhbGwuZnVuY3Rpb24uYXJndW1lbnRzLFxuICAgICAgICAgICAgICAgICAgICBpZDogdG9vbENhbGwuaWQsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBcIk1hbGZvcm1lZCBhcmdzLlwiLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbdG9vbENhbGxzLCBpbnZhbGlkVG9vbENhbGxzXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/tool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/messages/utils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceMessageLikeToMessage: () => (/* binding */ coerceMessageLikeToMessage),\n/* harmony export */   convertToChunk: () => (/* binding */ convertToChunk),\n/* harmony export */   getBufferString: () => (/* binding */ getBufferString),\n/* harmony export */   mapChatMessagesToStoredMessages: () => (/* binding */ mapChatMessagesToStoredMessages),\n/* harmony export */   mapStoredMessageToChatMessage: () => (/* binding */ mapStoredMessageToChatMessage),\n/* harmony export */   mapStoredMessagesToChatMessages: () => (/* binding */ mapStoredMessagesToChatMessages)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n/* harmony import */ var _human_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./human.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/human.js\");\n/* harmony import */ var _ai_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ai.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/ai.js\");\n/* harmony import */ var _system_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./system.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/system.js\");\n/* harmony import */ var _chat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chat.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/chat.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./function.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/function.js\");\n/* harmony import */ var _tool_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tool.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/tool.js\");\n\n\n\n\n\n\n\nfunction coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new _human_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(messageLike);\n    }\n    else if ((0,_base_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(messageLike)) {\n        return messageLike;\n    }\n    const [type, content] = messageLike;\n    if (type === \"human\" || type === \"user\") {\n        return new _human_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessage({ content });\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        return new _ai_js__WEBPACK_IMPORTED_MODULE_2__.AIMessage({ content });\n    }\n    else if (type === \"system\") {\n        return new _system_js__WEBPACK_IMPORTED_MODULE_3__.SystemMessage({ content });\n    }\n    else {\n        throw new Error(`Unable to coerce message from array: only human, AI, or system message coercion is currently supported.`);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nfunction getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        string_messages.push(`${role}: ${nameStr}${m.content}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nfunction mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new _human_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new _ai_js__WEBPACK_IMPORTED_MODULE_2__.AIMessage(storedMessage.data);\n        case \"system\":\n            return new _system_js__WEBPACK_IMPORTED_MODULE_3__.SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new _function_js__WEBPACK_IMPORTED_MODULE_5__.FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new _tool_js__WEBPACK_IMPORTED_MODULE_6__.ToolMessage(storedMessage.data);\n        case \"chat\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new _chat_js__WEBPACK_IMPORTED_MODULE_4__.ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nfunction mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nfunction mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nfunction convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new _human_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new _ai_js__WEBPACK_IMPORTED_MODULE_2__.AIMessageChunk({ ...message });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new _system_js__WEBPACK_IMPORTED_MODULE_3__.SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new _function_js__WEBPACK_IMPORTED_MODULE_5__.FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (_chat_js__WEBPACK_IMPORTED_MODULE_4__.ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new _chat_js__WEBPACK_IMPORTED_MODULE_4__.ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseLLMOutputParser: () => (/* binding */ BaseLLMOutputParser),\n/* harmony export */   BaseOutputParser: () => (/* binding */ BaseOutputParser),\n/* harmony export */   OutputParserException: () => (/* binding */ OutputParserException)\n/* harmony export */ });\n/* harmony import */ var _runnables_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runnables/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/index.js\");\n\n/**\n * Abstract base class for parsing the output of a Large Language Model\n * (LLM) call. It provides methods for parsing the result of an LLM call\n * and invoking the parser with a given input.\n */\nclass BaseLLMOutputParser extends _runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    /**\n     * Parses the result of an LLM call with a given prompt. By default, it\n     * simply calls `parseResult`.\n     * @param generations The generations from an LLM call.\n     * @param _prompt The prompt used in the LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parseResultWithPrompt(generations, _prompt, callbacks) {\n        return this.parseResult(generations, callbacks);\n    }\n    _baseMessageToString(message) {\n        return typeof message.content === \"string\"\n            ? message.content\n            : this._baseMessageContentToString(message.content);\n    }\n    _baseMessageContentToString(content) {\n        return JSON.stringify(content);\n    }\n    /**\n     * Calls the parser with a given input and optional configuration options.\n     * If the input is a string, it creates a generation with the input as\n     * text and calls `parseResult`. If the input is a `BaseMessage`, it\n     * creates a generation with the input as a message and the content of the\n     * input as text, and then calls `parseResult`.\n     * @param input The input to the parser, which can be a string or a `BaseMessage`.\n     * @param options Optional configuration options.\n     * @returns A promise of the parsed output.\n     */\n    async invoke(input, options) {\n        if (typeof input === \"string\") {\n            return this._callWithConfig(async (input, options) => this.parseResult([{ text: input }], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n        else {\n            return this._callWithConfig(async (input, options) => this.parseResult([\n                {\n                    message: input,\n                    text: this._baseMessageToString(input),\n                },\n            ], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call.\n */\nclass BaseOutputParser extends BaseLLMOutputParser {\n    parseResult(generations, callbacks) {\n        return this.parse(generations[0].text, callbacks);\n    }\n    async parseWithPrompt(text, _prompt, callbacks) {\n        return this.parse(text, callbacks);\n    }\n    /**\n     * Return the string type key uniquely identifying this class of parser\n     */\n    _type() {\n        throw new Error(\"_type not implemented\");\n    }\n}\n/**\n * Exception that output parsers should raise to signify a parsing error.\n *\n * This exists to differentiate parsing errors from other code or execution errors\n * that also may arise inside the output parser. OutputParserExceptions will be\n * available to catch and handle in ways to fix the parsing error, while other\n * errors will be raised.\n *\n * @param message - The error that's being re-raised or an error message.\n * @param llmOutput - String model output which is error-ing.\n * @param observation - String explanation of error which can be passed to a\n *     model to try and remediate the issue.\n * @param sendToLLM - Whether to send the observation and llm_output back to an Agent\n *     after an OutputParserException has been raised. This gives the underlying\n *     model driving the agent the context that the previous output was improperly\n *     structured, in the hopes that it will update the output to the correct\n *     format.\n */\nclass OutputParserException extends Error {\n    constructor(message, llmOutput, observation, sendToLLM = false) {\n        super(message);\n        Object.defineProperty(this, \"llmOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sendToLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmOutput = llmOutput;\n        this.observation = observation;\n        this.sendToLLM = sendToLLM;\n        if (sendToLLM) {\n            if (observation === undefined || llmOutput === undefined) {\n                throw new Error(\"Arguments 'observation' & 'llmOutput' are required if 'sendToLlm' is true\");\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQyx5REFBUTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixhQUFhLGlDQUFpQywrQkFBK0I7QUFDbks7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLDZDQUE2QywrQkFBK0I7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L291dHB1dF9wYXJzZXJzL2Jhc2UuanM/YWNlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdW5uYWJsZSB9IGZyb20gXCIuLi9ydW5uYWJsZXMvaW5kZXguanNcIjtcbi8qKlxuICogQWJzdHJhY3QgYmFzZSBjbGFzcyBmb3IgcGFyc2luZyB0aGUgb3V0cHV0IG9mIGEgTGFyZ2UgTGFuZ3VhZ2UgTW9kZWxcbiAqIChMTE0pIGNhbGwuIEl0IHByb3ZpZGVzIG1ldGhvZHMgZm9yIHBhcnNpbmcgdGhlIHJlc3VsdCBvZiBhbiBMTE0gY2FsbFxuICogYW5kIGludm9raW5nIHRoZSBwYXJzZXIgd2l0aCBhIGdpdmVuIGlucHV0LlxuICovXG5leHBvcnQgY2xhc3MgQmFzZUxMTU91dHB1dFBhcnNlciBleHRlbmRzIFJ1bm5hYmxlIHtcbiAgICAvKipcbiAgICAgKiBQYXJzZXMgdGhlIHJlc3VsdCBvZiBhbiBMTE0gY2FsbCB3aXRoIGEgZ2l2ZW4gcHJvbXB0LiBCeSBkZWZhdWx0LCBpdFxuICAgICAqIHNpbXBseSBjYWxscyBgcGFyc2VSZXN1bHRgLlxuICAgICAqIEBwYXJhbSBnZW5lcmF0aW9ucyBUaGUgZ2VuZXJhdGlvbnMgZnJvbSBhbiBMTE0gY2FsbC5cbiAgICAgKiBAcGFyYW0gX3Byb21wdCBUaGUgcHJvbXB0IHVzZWQgaW4gdGhlIExMTSBjYWxsLlxuICAgICAqIEBwYXJhbSBjYWxsYmFja3MgT3B0aW9uYWwgY2FsbGJhY2tzLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBvZiB0aGUgcGFyc2VkIG91dHB1dC5cbiAgICAgKi9cbiAgICBwYXJzZVJlc3VsdFdpdGhQcm9tcHQoZ2VuZXJhdGlvbnMsIF9wcm9tcHQsIGNhbGxiYWNrcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZVJlc3VsdChnZW5lcmF0aW9ucywgY2FsbGJhY2tzKTtcbiAgICB9XG4gICAgX2Jhc2VNZXNzYWdlVG9TdHJpbmcobWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG1lc3NhZ2UuY29udGVudCA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgPyBtZXNzYWdlLmNvbnRlbnRcbiAgICAgICAgICAgIDogdGhpcy5fYmFzZU1lc3NhZ2VDb250ZW50VG9TdHJpbmcobWVzc2FnZS5jb250ZW50KTtcbiAgICB9XG4gICAgX2Jhc2VNZXNzYWdlQ29udGVudFRvU3RyaW5nKGNvbnRlbnQpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGNvbnRlbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxscyB0aGUgcGFyc2VyIHdpdGggYSBnaXZlbiBpbnB1dCBhbmQgb3B0aW9uYWwgY29uZmlndXJhdGlvbiBvcHRpb25zLlxuICAgICAqIElmIHRoZSBpbnB1dCBpcyBhIHN0cmluZywgaXQgY3JlYXRlcyBhIGdlbmVyYXRpb24gd2l0aCB0aGUgaW5wdXQgYXNcbiAgICAgKiB0ZXh0IGFuZCBjYWxscyBgcGFyc2VSZXN1bHRgLiBJZiB0aGUgaW5wdXQgaXMgYSBgQmFzZU1lc3NhZ2VgLCBpdFxuICAgICAqIGNyZWF0ZXMgYSBnZW5lcmF0aW9uIHdpdGggdGhlIGlucHV0IGFzIGEgbWVzc2FnZSBhbmQgdGhlIGNvbnRlbnQgb2YgdGhlXG4gICAgICogaW5wdXQgYXMgdGV4dCwgYW5kIHRoZW4gY2FsbHMgYHBhcnNlUmVzdWx0YC5cbiAgICAgKiBAcGFyYW0gaW5wdXQgVGhlIGlucHV0IHRvIHRoZSBwYXJzZXIsIHdoaWNoIGNhbiBiZSBhIHN0cmluZyBvciBhIGBCYXNlTWVzc2FnZWAuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvcHRpb25zLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSBvZiB0aGUgcGFyc2VkIG91dHB1dC5cbiAgICAgKi9cbiAgICBhc3luYyBpbnZva2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NhbGxXaXRoQ29uZmlnKGFzeW5jIChpbnB1dCwgb3B0aW9ucykgPT4gdGhpcy5wYXJzZVJlc3VsdChbeyB0ZXh0OiBpbnB1dCB9XSwgb3B0aW9ucz8uY2FsbGJhY2tzKSwgaW5wdXQsIHsgLi4ub3B0aW9ucywgcnVuVHlwZTogXCJwYXJzZXJcIiB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWxsV2l0aENvbmZpZyhhc3luYyAoaW5wdXQsIG9wdGlvbnMpID0+IHRoaXMucGFyc2VSZXN1bHQoW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogaW5wdXQsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IHRoaXMuX2Jhc2VNZXNzYWdlVG9TdHJpbmcoaW5wdXQpLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLCBvcHRpb25zPy5jYWxsYmFja3MpLCBpbnB1dCwgeyAuLi5vcHRpb25zLCBydW5UeXBlOiBcInBhcnNlclwiIH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBDbGFzcyB0byBwYXJzZSB0aGUgb3V0cHV0IG9mIGFuIExMTSBjYWxsLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZU91dHB1dFBhcnNlciBleHRlbmRzIEJhc2VMTE1PdXRwdXRQYXJzZXIge1xuICAgIHBhcnNlUmVzdWx0KGdlbmVyYXRpb25zLCBjYWxsYmFja3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2UoZ2VuZXJhdGlvbnNbMF0udGV4dCwgY2FsbGJhY2tzKTtcbiAgICB9XG4gICAgYXN5bmMgcGFyc2VXaXRoUHJvbXB0KHRleHQsIF9wcm9tcHQsIGNhbGxiYWNrcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSh0ZXh0LCBjYWxsYmFja3MpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIHN0cmluZyB0eXBlIGtleSB1bmlxdWVseSBpZGVudGlmeWluZyB0aGlzIGNsYXNzIG9mIHBhcnNlclxuICAgICAqL1xuICAgIF90eXBlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJfdHlwZSBub3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxufVxuLyoqXG4gKiBFeGNlcHRpb24gdGhhdCBvdXRwdXQgcGFyc2VycyBzaG91bGQgcmFpc2UgdG8gc2lnbmlmeSBhIHBhcnNpbmcgZXJyb3IuXG4gKlxuICogVGhpcyBleGlzdHMgdG8gZGlmZmVyZW50aWF0ZSBwYXJzaW5nIGVycm9ycyBmcm9tIG90aGVyIGNvZGUgb3IgZXhlY3V0aW9uIGVycm9yc1xuICogdGhhdCBhbHNvIG1heSBhcmlzZSBpbnNpZGUgdGhlIG91dHB1dCBwYXJzZXIuIE91dHB1dFBhcnNlckV4Y2VwdGlvbnMgd2lsbCBiZVxuICogYXZhaWxhYmxlIHRvIGNhdGNoIGFuZCBoYW5kbGUgaW4gd2F5cyB0byBmaXggdGhlIHBhcnNpbmcgZXJyb3IsIHdoaWxlIG90aGVyXG4gKiBlcnJvcnMgd2lsbCBiZSByYWlzZWQuXG4gKlxuICogQHBhcmFtIG1lc3NhZ2UgLSBUaGUgZXJyb3IgdGhhdCdzIGJlaW5nIHJlLXJhaXNlZCBvciBhbiBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIGxsbU91dHB1dCAtIFN0cmluZyBtb2RlbCBvdXRwdXQgd2hpY2ggaXMgZXJyb3ItaW5nLlxuICogQHBhcmFtIG9ic2VydmF0aW9uIC0gU3RyaW5nIGV4cGxhbmF0aW9uIG9mIGVycm9yIHdoaWNoIGNhbiBiZSBwYXNzZWQgdG8gYVxuICogICAgIG1vZGVsIHRvIHRyeSBhbmQgcmVtZWRpYXRlIHRoZSBpc3N1ZS5cbiAqIEBwYXJhbSBzZW5kVG9MTE0gLSBXaGV0aGVyIHRvIHNlbmQgdGhlIG9ic2VydmF0aW9uIGFuZCBsbG1fb3V0cHV0IGJhY2sgdG8gYW4gQWdlbnRcbiAqICAgICBhZnRlciBhbiBPdXRwdXRQYXJzZXJFeGNlcHRpb24gaGFzIGJlZW4gcmFpc2VkLiBUaGlzIGdpdmVzIHRoZSB1bmRlcmx5aW5nXG4gKiAgICAgbW9kZWwgZHJpdmluZyB0aGUgYWdlbnQgdGhlIGNvbnRleHQgdGhhdCB0aGUgcHJldmlvdXMgb3V0cHV0IHdhcyBpbXByb3Blcmx5XG4gKiAgICAgc3RydWN0dXJlZCwgaW4gdGhlIGhvcGVzIHRoYXQgaXQgd2lsbCB1cGRhdGUgdGhlIG91dHB1dCB0byB0aGUgY29ycmVjdFxuICogICAgIGZvcm1hdC5cbiAqL1xuZXhwb3J0IGNsYXNzIE91dHB1dFBhcnNlckV4Y2VwdGlvbiBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBsbG1PdXRwdXQsIG9ic2VydmF0aW9uLCBzZW5kVG9MTE0gPSBmYWxzZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGxtT3V0cHV0XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9ic2VydmF0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlbmRUb0xMTVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmxsbU91dHB1dCA9IGxsbU91dHB1dDtcbiAgICAgICAgdGhpcy5vYnNlcnZhdGlvbiA9IG9ic2VydmF0aW9uO1xuICAgICAgICB0aGlzLnNlbmRUb0xMTSA9IHNlbmRUb0xMTTtcbiAgICAgICAgaWYgKHNlbmRUb0xMTSkge1xuICAgICAgICAgICAgaWYgKG9ic2VydmF0aW9uID09PSB1bmRlZmluZWQgfHwgbGxtT3V0cHV0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBcmd1bWVudHMgJ29ic2VydmF0aW9uJyAmICdsbG1PdXRwdXQnIGFyZSByZXF1aXJlZCBpZiAnc2VuZFRvTGxtJyBpcyB0cnVlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/bytes.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/bytes.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BytesOutputParser: () => (/* binding */ BytesOutputParser)\n/* harmony export */ });\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\");\n\n/**\n * OutputParser that parses LLMResult into the top likely string and\n * encodes it into bytes.\n */\nclass BytesOutputParser extends _transform_js__WEBPACK_IMPORTED_MODULE_0__.BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"bytes\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"textEncoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new TextEncoder()\n        });\n    }\n    static lc_name() {\n        return \"BytesOutputParser\";\n    }\n    parse(text) {\n        return Promise.resolve(this.textEncoder.encode(text));\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdDQUFnQyxvRUFBeUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3Qvb3V0cHV0X3BhcnNlcnMvYnl0ZXMuanM/NjM4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlVHJhbnNmb3JtT3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4vdHJhbnNmb3JtLmpzXCI7XG4vKipcbiAqIE91dHB1dFBhcnNlciB0aGF0IHBhcnNlcyBMTE1SZXN1bHQgaW50byB0aGUgdG9wIGxpa2VseSBzdHJpbmcgYW5kXG4gKiBlbmNvZGVzIGl0IGludG8gYnl0ZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBCeXRlc091dHB1dFBhcnNlciBleHRlbmRzIEJhc2VUcmFuc2Zvcm1PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpbl9jb3JlXCIsIFwib3V0cHV0X3BhcnNlcnNcIiwgXCJieXRlc1wiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0ZXh0RW5jb2RlclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbmV3IFRleHRFbmNvZGVyKClcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJCeXRlc091dHB1dFBhcnNlclwiO1xuICAgIH1cbiAgICBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy50ZXh0RW5jb2Rlci5lbmNvZGUodGV4dCkpO1xuICAgIH1cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/bytes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsymmetricStructuredOutputParser: () => (/* reexport safe */ _structured_js__WEBPACK_IMPORTED_MODULE_4__.AsymmetricStructuredOutputParser),\n/* harmony export */   BaseCumulativeTransformOutputParser: () => (/* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_5__.BaseCumulativeTransformOutputParser),\n/* harmony export */   BaseLLMOutputParser: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseLLMOutputParser),\n/* harmony export */   BaseOutputParser: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser),\n/* harmony export */   BaseTransformOutputParser: () => (/* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransformOutputParser),\n/* harmony export */   BytesOutputParser: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_1__.BytesOutputParser),\n/* harmony export */   CommaSeparatedListOutputParser: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.CommaSeparatedListOutputParser),\n/* harmony export */   CustomListOutputParser: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.CustomListOutputParser),\n/* harmony export */   JsonMarkdownStructuredOutputParser: () => (/* reexport safe */ _structured_js__WEBPACK_IMPORTED_MODULE_4__.JsonMarkdownStructuredOutputParser),\n/* harmony export */   JsonOutputParser: () => (/* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_6__.JsonOutputParser),\n/* harmony export */   ListOutputParser: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.ListOutputParser),\n/* harmony export */   MarkdownListOutputParser: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.MarkdownListOutputParser),\n/* harmony export */   NumberedListOutputParser: () => (/* reexport safe */ _list_js__WEBPACK_IMPORTED_MODULE_2__.NumberedListOutputParser),\n/* harmony export */   OutputParserException: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.OutputParserException),\n/* harmony export */   StringOutputParser: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_3__.StringOutputParser),\n/* harmony export */   StructuredOutputParser: () => (/* reexport safe */ _structured_js__WEBPACK_IMPORTED_MODULE_4__.StructuredOutputParser),\n/* harmony export */   XMLOutputParser: () => (/* reexport safe */ _xml_js__WEBPACK_IMPORTED_MODULE_7__.XMLOutputParser),\n/* harmony export */   XML_FORMAT_INSTRUCTIONS: () => (/* reexport safe */ _xml_js__WEBPACK_IMPORTED_MODULE_7__.XML_FORMAT_INSTRUCTIONS),\n/* harmony export */   parseJsonMarkdown: () => (/* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_6__.parseJsonMarkdown),\n/* harmony export */   parsePartialJson: () => (/* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_6__.parsePartialJson),\n/* harmony export */   parseXMLMarkdown: () => (/* reexport safe */ _xml_js__WEBPACK_IMPORTED_MODULE_7__.parseXMLMarkdown)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytes.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/bytes.js\");\n/* harmony import */ var _list_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/list.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/string.js\");\n/* harmony import */ var _structured_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./structured.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/structured.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transform.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\");\n/* harmony import */ var _json_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./json.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/json.js\");\n/* harmony import */ var _xml_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./xml.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/xml.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUNDO0FBQ0Q7QUFDRTtBQUNJO0FBQ0Q7QUFDTDtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L291dHB1dF9wYXJzZXJzL2luZGV4LmpzP2U0YTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vYmFzZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYnl0ZXMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpc3QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0cmluZy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3RydWN0dXJlZC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHJhbnNmb3JtLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9qc29uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi94bWwuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/json.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/json.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonOutputParser: () => (/* binding */ JsonOutputParser),\n/* harmony export */   parseJsonMarkdown: () => (/* reexport safe */ _utils_json_js__WEBPACK_IMPORTED_MODULE_2__.parseJsonMarkdown),\n/* harmony export */   parsePartialJson: () => (/* reexport safe */ _utils_json_js__WEBPACK_IMPORTED_MODULE_2__.parsePartialJson)\n/* harmony export */ });\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\");\n/* harmony import */ var _utils_json_patch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/json_patch.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json_patch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/json.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json.js\");\n\n\n\n/**\n * Class for parsing the output of an LLM into a JSON object.\n */\nclass JsonOutputParser extends _transform_js__WEBPACK_IMPORTED_MODULE_0__.BaseCumulativeTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"JsonOutputParser\";\n    }\n    _diff(prev, next) {\n        if (!next) {\n            return undefined;\n        }\n        if (!prev) {\n            return [{ op: \"replace\", path: \"\", value: next }];\n        }\n        return (0,_utils_json_patch_js__WEBPACK_IMPORTED_MODULE_1__.compare)(prev, next);\n    }\n    // This should actually return Partial<T>, but there's no way\n    // to specify emitted chunks as instances separate from the main output type.\n    async parsePartialResult(generations) {\n        return (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.parseJsonMarkdown)(generations[0].text);\n    }\n    async parse(text) {\n        return (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.parseJsonMarkdown)(text, JSON.parse);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRTtBQUNwQjtBQUNzQjtBQUN2RTtBQUNBO0FBQ0E7QUFDTywrQkFBK0IsOEVBQW1DO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNDQUFzQztBQUM1RDtBQUNBLGVBQWUsNkRBQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFpQjtBQUNoQztBQUNBO0FBQ0EsZUFBZSxpRUFBaUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9qc29uLmpzPzk4ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUN1bXVsYXRpdmVUcmFuc2Zvcm1PdXRwdXRQYXJzZXIgfSBmcm9tIFwiLi90cmFuc2Zvcm0uanNcIjtcbmltcG9ydCB7IGNvbXBhcmUgfSBmcm9tIFwiLi4vdXRpbHMvanNvbl9wYXRjaC5qc1wiO1xuaW1wb3J0IHsgcGFyc2VKc29uTWFya2Rvd24sIHBhcnNlUGFydGlhbEpzb24gfSBmcm9tIFwiLi4vdXRpbHMvanNvbi5qc1wiO1xuLyoqXG4gKiBDbGFzcyBmb3IgcGFyc2luZyB0aGUgb3V0cHV0IG9mIGFuIExMTSBpbnRvIGEgSlNPTiBvYmplY3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBKc29uT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZUN1bXVsYXRpdmVUcmFuc2Zvcm1PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpbl9jb3JlXCIsIFwib3V0cHV0X3BhcnNlcnNcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX3NlcmlhbGl6YWJsZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIkpzb25PdXRwdXRQYXJzZXJcIjtcbiAgICB9XG4gICAgX2RpZmYocHJldiwgbmV4dCkge1xuICAgICAgICBpZiAoIW5leHQpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFwcmV2KSB7XG4gICAgICAgICAgICByZXR1cm4gW3sgb3A6IFwicmVwbGFjZVwiLCBwYXRoOiBcIlwiLCB2YWx1ZTogbmV4dCB9XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY29tcGFyZShwcmV2LCBuZXh0KTtcbiAgICB9XG4gICAgLy8gVGhpcyBzaG91bGQgYWN0dWFsbHkgcmV0dXJuIFBhcnRpYWw8VD4sIGJ1dCB0aGVyZSdzIG5vIHdheVxuICAgIC8vIHRvIHNwZWNpZnkgZW1pdHRlZCBjaHVua3MgYXMgaW5zdGFuY2VzIHNlcGFyYXRlIGZyb20gdGhlIG1haW4gb3V0cHV0IHR5cGUuXG4gICAgYXN5bmMgcGFyc2VQYXJ0aWFsUmVzdWx0KGdlbmVyYXRpb25zKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUpzb25NYXJrZG93bihnZW5lcmF0aW9uc1swXS50ZXh0KTtcbiAgICB9XG4gICAgYXN5bmMgcGFyc2UodGV4dCkge1xuICAgICAgICByZXR1cm4gcGFyc2VKc29uTWFya2Rvd24odGV4dCwgSlNPTi5wYXJzZSk7XG4gICAgfVxuICAgIGdldEZvcm1hdEluc3RydWN0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxufVxuZXhwb3J0IHsgcGFyc2VQYXJ0aWFsSnNvbiwgcGFyc2VKc29uTWFya2Rvd24gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/list.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/list.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommaSeparatedListOutputParser: () => (/* binding */ CommaSeparatedListOutputParser),\n/* harmony export */   CustomListOutputParser: () => (/* binding */ CustomListOutputParser),\n/* harmony export */   ListOutputParser: () => (/* binding */ ListOutputParser),\n/* harmony export */   MarkdownListOutputParser: () => (/* binding */ MarkdownListOutputParser),\n/* harmony export */   NumberedListOutputParser: () => (/* binding */ NumberedListOutputParser)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\");\n\n\n/**\n * Class to parse the output of an LLM call to a list.\n * @augments BaseOutputParser\n */\nclass ListOutputParser extends _transform_js__WEBPACK_IMPORTED_MODULE_1__.BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"re\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async *_transform(inputGenerator) {\n        let buffer = \"\";\n        for await (const input of inputGenerator) {\n            if (typeof input === \"string\") {\n                // add current chunk to buffer\n                buffer += input;\n            }\n            else {\n                // extract message content and add to buffer\n                buffer += input.content;\n            }\n            // get parts in buffer\n            if (!this.re) {\n                const parts = await this.parse(buffer);\n                if (parts.length > 1) {\n                    // if there are multiple parts, yield all but the last one\n                    for (const part of parts.slice(0, -1)) {\n                        yield [part];\n                    }\n                    // keep the last part in the buffer\n                    buffer = parts[parts.length - 1];\n                }\n            }\n            else {\n                // if there is a regex, get all matches\n                const matches = [...buffer.matchAll(this.re)];\n                if (matches.length > 1) {\n                    let doneIdx = 0;\n                    // if there are multiple matches, yield all but the last one\n                    for (const match of matches.slice(0, -1)) {\n                        yield [match[1]];\n                        doneIdx += (match.index ?? 0) + match[0].length;\n                    }\n                    // keep the last match in the buffer\n                    buffer = buffer.slice(doneIdx);\n                }\n            }\n        }\n        // yield the last part\n        for (const part of await this.parse(buffer)) {\n            yield [part];\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call as a comma-separated list.\n * @augments ListOutputParser\n */\nclass CommaSeparatedListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"CommaSeparatedListOutputParser\";\n    }\n    /**\n     * Parses the given text into an array of strings, using a comma as the\n     * separator. If the parsing fails, throws an OutputParserException.\n     * @param text The text to parse.\n     * @returns An array of strings obtained by splitting the input text at each comma.\n     */\n    async parse(text) {\n        try {\n            return text\n                .trim()\n                .split(\",\")\n                .map((s) => s.trim());\n        }\n        catch (e) {\n            throw new _base_js__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse output: ${text}`, text);\n        }\n    }\n    /**\n     * Provides instructions on the expected format of the response for the\n     * CommaSeparatedListOutputParser.\n     * @returns A string containing instructions on the expected format of the response.\n     */\n    getFormatInstructions() {\n        return `Your response should be a list of comma separated values, eg: \\`foo, bar, baz\\``;\n    }\n}\n/**\n * Class to parse the output of an LLM call to a list with a specific length and separator.\n * @augments ListOutputParser\n */\nclass CustomListOutputParser extends ListOutputParser {\n    constructor({ length, separator }) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.length = length;\n        this.separator = separator || \",\";\n    }\n    /**\n     * Parses the given text into an array of strings, using the specified\n     * separator. If the parsing fails or the number of items in the list\n     * doesn't match the expected length, throws an OutputParserException.\n     * @param text The text to parse.\n     * @returns An array of strings obtained by splitting the input text at each occurrence of the specified separator.\n     */\n    async parse(text) {\n        try {\n            const items = text\n                .trim()\n                .split(this.separator)\n                .map((s) => s.trim());\n            if (this.length !== undefined && items.length !== this.length) {\n                throw new _base_js__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Incorrect number of items. Expected ${this.length}, got ${items.length}.`);\n            }\n            return items;\n        }\n        catch (e) {\n            if (Object.getPrototypeOf(e) === _base_js__WEBPACK_IMPORTED_MODULE_0__.OutputParserException.prototype) {\n                throw e;\n            }\n            throw new _base_js__WEBPACK_IMPORTED_MODULE_0__.OutputParserException(`Could not parse output: ${text}`);\n        }\n    }\n    /**\n     * Provides instructions on the expected format of the response for the\n     * CustomListOutputParser, including the number of items and the\n     * separator.\n     * @returns A string containing instructions on the expected format of the response.\n     */\n    getFormatInstructions() {\n        return `Your response should be a list of ${this.length === undefined ? \"\" : `${this.length} `}items separated by \"${this.separator}\" (eg: \\`foo${this.separator} bar${this.separator} baz\\`)`;\n    }\n}\nclass NumberedListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"re\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: /\\d+\\.\\s([^\\n]+)/g\n        });\n    }\n    static lc_name() {\n        return \"NumberedListOutputParser\";\n    }\n    getFormatInstructions() {\n        return `Your response should be a numbered list with each item on a new line. For example: \\n\\n1. foo\\n\\n2. bar\\n\\n3. baz`;\n    }\n    async parse(text) {\n        return [...(text.matchAll(this.re) ?? [])].map((m) => m[1]);\n    }\n}\nclass MarkdownListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"re\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: /^\\s*[-*]\\s([^\\n]+)$/gm\n        });\n    }\n    static lc_name() {\n        return \"NumberedListOutputParser\";\n    }\n    getFormatInstructions() {\n        return `Your response should be a numbered list with each item on a new line. For example: \\n\\n1. foo\\n\\n2. bar\\n\\n3. baz`;\n    }\n    async parse(text) {\n        return [...(text.matchAll(this.re) ?? [])].map((m) => m[1]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/list.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/string.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/string.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringOutputParser: () => (/* binding */ StringOutputParser)\n/* harmony export */ });\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\");\n\n/**\n * OutputParser that parses LLMResult into the top likely string.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n *\n * const chain = RunnableSequence.from([\n *   promptTemplate,\n *   new ChatOpenAI({}),\n *   new StringOutputParser(),\n * ]);\n *\n * const result = await chain.invoke({ topic: \"bears\" });\n * console.log(\"What do you call a bear with no teeth? A gummy bear!\");\n * ```\n */\nclass StringOutputParser extends _transform_js__WEBPACK_IMPORTED_MODULE_0__.BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"string\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"StrOutputParser\";\n    }\n    /**\n     * Parses a string output from an LLM call. This method is meant to be\n     * implemented by subclasses to define how a string output from an LLM\n     * should be parsed.\n     * @param text The string output from an LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n    _textContentToString(content) {\n        return content.text;\n    }\n    _imageUrlContentToString(_content) {\n        throw new Error(`Cannot coerce a multimodal \"image_url\" message part into a string.`);\n    }\n    _messageContentComplexToString(content) {\n        switch (content.type) {\n            case \"text\":\n                if (\"text\" in content) {\n                    // Type guard for MessageContentText\n                    return this._textContentToString(content);\n                }\n                break;\n            case \"image_url\":\n                if (\"image_url\" in content) {\n                    // Type guard for MessageContentImageUrl\n                    return this._imageUrlContentToString(content);\n                }\n                break;\n            default:\n                throw new Error(`Cannot coerce \"${content.type}\" message part into a string.`);\n        }\n        throw new Error(`Invalid content type: ${content.type}`);\n    }\n    _baseMessageContentToString(content) {\n        return content.reduce((acc, item) => acc + this._messageContentComplexToString(item), \"\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixNQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnQkFBZ0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ08saUNBQWlDLG9FQUF5QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxhQUFhO0FBQy9EO0FBQ0EsaURBQWlELGFBQWE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy9zdHJpbmcuanM/YjUyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlVHJhbnNmb3JtT3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4vdHJhbnNmb3JtLmpzXCI7XG4vKipcbiAqIE91dHB1dFBhcnNlciB0aGF0IHBhcnNlcyBMTE1SZXN1bHQgaW50byB0aGUgdG9wIGxpa2VseSBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgcHJvbXB0VGVtcGxhdGUgPSBQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXG4gKiAgIFwiVGVsbCBtZSBhIGpva2UgYWJvdXQge3RvcGljfVwiLFxuICogKTtcbiAqXG4gKiBjb25zdCBjaGFpbiA9IFJ1bm5hYmxlU2VxdWVuY2UuZnJvbShbXG4gKiAgIHByb21wdFRlbXBsYXRlLFxuICogICBuZXcgQ2hhdE9wZW5BSSh7fSksXG4gKiAgIG5ldyBTdHJpbmdPdXRwdXRQYXJzZXIoKSxcbiAqIF0pO1xuICpcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNoYWluLmludm9rZSh7IHRvcGljOiBcImJlYXJzXCIgfSk7XG4gKiBjb25zb2xlLmxvZyhcIldoYXQgZG8geW91IGNhbGwgYSBiZWFyIHdpdGggbm8gdGVldGg/IEEgZ3VtbXkgYmVhciFcIik7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIFN0cmluZ091dHB1dFBhcnNlciBleHRlbmRzIEJhc2VUcmFuc2Zvcm1PdXRwdXRQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpbl9jb3JlXCIsIFwib3V0cHV0X3BhcnNlcnNcIiwgXCJzdHJpbmdcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX3NlcmlhbGl6YWJsZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlN0ck91dHB1dFBhcnNlclwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgYSBzdHJpbmcgb3V0cHV0IGZyb20gYW4gTExNIGNhbGwuIFRoaXMgbWV0aG9kIGlzIG1lYW50IHRvIGJlXG4gICAgICogaW1wbGVtZW50ZWQgYnkgc3ViY2xhc3NlcyB0byBkZWZpbmUgaG93IGEgc3RyaW5nIG91dHB1dCBmcm9tIGFuIExMTVxuICAgICAqIHNob3VsZCBiZSBwYXJzZWQuXG4gICAgICogQHBhcmFtIHRleHQgVGhlIHN0cmluZyBvdXRwdXQgZnJvbSBhbiBMTE0gY2FsbC5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2tzIE9wdGlvbmFsIGNhbGxiYWNrcy5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2Ugb2YgdGhlIHBhcnNlZCBvdXRwdXQuXG4gICAgICovXG4gICAgcGFyc2UodGV4dCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRleHQpO1xuICAgIH1cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgICBfdGV4dENvbnRlbnRUb1N0cmluZyhjb250ZW50KSB7XG4gICAgICAgIHJldHVybiBjb250ZW50LnRleHQ7XG4gICAgfVxuICAgIF9pbWFnZVVybENvbnRlbnRUb1N0cmluZyhfY29udGVudCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBjb2VyY2UgYSBtdWx0aW1vZGFsIFwiaW1hZ2VfdXJsXCIgbWVzc2FnZSBwYXJ0IGludG8gYSBzdHJpbmcuYCk7XG4gICAgfVxuICAgIF9tZXNzYWdlQ29udGVudENvbXBsZXhUb1N0cmluZyhjb250ZW50KSB7XG4gICAgICAgIHN3aXRjaCAoY29udGVudC50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFwidGV4dFwiOlxuICAgICAgICAgICAgICAgIGlmIChcInRleHRcIiBpbiBjb250ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFR5cGUgZ3VhcmQgZm9yIE1lc3NhZ2VDb250ZW50VGV4dFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fdGV4dENvbnRlbnRUb1N0cmluZyhjb250ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiaW1hZ2VfdXJsXCI6XG4gICAgICAgICAgICAgICAgaWYgKFwiaW1hZ2VfdXJsXCIgaW4gY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBUeXBlIGd1YXJkIGZvciBNZXNzYWdlQ29udGVudEltYWdlVXJsXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9pbWFnZVVybENvbnRlbnRUb1N0cmluZyhjb250ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGNvZXJjZSBcIiR7Y29udGVudC50eXBlfVwiIG1lc3NhZ2UgcGFydCBpbnRvIGEgc3RyaW5nLmApO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb250ZW50IHR5cGU6ICR7Y29udGVudC50eXBlfWApO1xuICAgIH1cbiAgICBfYmFzZU1lc3NhZ2VDb250ZW50VG9TdHJpbmcoY29udGVudCkge1xuICAgICAgICByZXR1cm4gY29udGVudC5yZWR1Y2UoKGFjYywgaXRlbSkgPT4gYWNjICsgdGhpcy5fbWVzc2FnZUNvbnRlbnRDb21wbGV4VG9TdHJpbmcoaXRlbSksIFwiXCIpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/structured.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/structured.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsymmetricStructuredOutputParser: () => (/* binding */ AsymmetricStructuredOutputParser),\n/* harmony export */   JsonMarkdownStructuredOutputParser: () => (/* binding */ JsonMarkdownStructuredOutputParser),\n/* harmony export */   StructuredOutputParser: () => (/* binding */ StructuredOutputParser)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js\");\n\n\n\nclass StructuredOutputParser extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseOutputParser {\n    static lc_name() {\n        return \"StructuredOutputParser\";\n    }\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(schema) {\n        super(schema);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"structured\"]\n        });\n    }\n    /**\n     * Creates a new StructuredOutputParser from a Zod schema.\n     * @param schema The Zod schema which the output should match\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    /**\n     * Creates a new StructuredOutputParser from a set of names and\n     * descriptions.\n     * @param schemas An object where each key is a name and each value is a description\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = zod__WEBPACK_IMPORTED_MODULE_2__.z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, zod__WEBPACK_IMPORTED_MODULE_2__.z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n    /**\n     * Returns a markdown code snippet with a JSON object formatted according\n     * to the schema.\n     * @param options Optional. The options for formatting the instructions\n     * @returns A markdown code snippet with a JSON object formatted according to the schema.\n     */\n    getFormatInstructions() {\n        return `You must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\\`\\`\\`json\n${JSON.stringify((0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(this.schema))}\n\\`\\`\\`\n`;\n    }\n    /**\n     * Parses the given text according to the schema.\n     * @param text The text to parse\n     * @returns The parsed output.\n     */\n    async parse(text) {\n        try {\n            const json = text.includes(\"```\")\n                ? text.trim().split(/```(?:json)?/)[1]\n                : text.trim();\n            const escapedJson = json\n                .replace(/\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/g, (_match, capturedGroup) => {\n                const escapedInsideQuotes = capturedGroup.replace(/\\n/g, \"\\\\n\");\n                return `\"${escapedInsideQuotes}\"`;\n            })\n                .replace(/\\n/g, \"\");\n            return await this.schema.parseAsync(JSON.parse(escapedJson));\n        }\n        catch (e) {\n            throw new _base_js__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n    }\n}\n/**\n * A specific type of `StructuredOutputParser` that parses JSON data\n * formatted as a markdown code snippet.\n */\nclass JsonMarkdownStructuredOutputParser extends StructuredOutputParser {\n    static lc_name() {\n        return \"JsonMarkdownStructuredOutputParser\";\n    }\n    getFormatInstructions(options) {\n        const interpolationDepth = options?.interpolationDepth ?? 1;\n        if (interpolationDepth < 1) {\n            throw new Error(\"f string interpolation depth must be at least 1\");\n        }\n        return `Return a markdown code snippet with a JSON object formatted to look like:\\n\\`\\`\\`json\\n${this._schemaToInstruction((0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(this.schema))\n            .replaceAll(\"{\", \"{\".repeat(interpolationDepth))\n            .replaceAll(\"}\", \"}\".repeat(interpolationDepth))}\\n\\`\\`\\``;\n    }\n    _schemaToInstruction(schemaInput, indent = 2) {\n        const schema = schemaInput;\n        if (\"type\" in schema) {\n            let nullable = false;\n            let type;\n            if (Array.isArray(schema.type)) {\n                const nullIdx = schema.type.findIndex((type) => type === \"null\");\n                if (nullIdx !== -1) {\n                    nullable = true;\n                    schema.type.splice(nullIdx, 1);\n                }\n                type = schema.type.join(\" | \");\n            }\n            else {\n                type = schema.type;\n            }\n            if (schema.type === \"object\" && schema.properties) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                const properties = Object.entries(schema.properties)\n                    .map(([key, value]) => {\n                    const isOptional = schema.required?.includes(key)\n                        ? \"\"\n                        : \" (optional)\";\n                    return `${\" \".repeat(indent)}\"${key}\": ${this._schemaToInstruction(value, indent + 2)}${isOptional}`;\n                })\n                    .join(\"\\n\");\n                return `{\\n${properties}\\n${\" \".repeat(indent - 2)}}${description}`;\n            }\n            if (schema.type === \"array\" && schema.items) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                return `array[\\n${\" \".repeat(indent)}${this._schemaToInstruction(schema.items, indent + 2)}\\n${\" \".repeat(indent - 2)}] ${description}`;\n            }\n            const isNullable = nullable ? \" (nullable)\" : \"\";\n            const description = schema.description ? ` // ${schema.description}` : \"\";\n            return `${type}${description}${isNullable}`;\n        }\n        if (\"anyOf\" in schema) {\n            return schema.anyOf\n                .map((s) => this._schemaToInstruction(s, indent))\n                .join(`\\n${\" \".repeat(indent - 2)}`);\n        }\n        throw new Error(\"unsupported schema type\");\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = zod__WEBPACK_IMPORTED_MODULE_2__.z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, zod__WEBPACK_IMPORTED_MODULE_2__.z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n}\n/**\n * A type of `StructuredOutputParser` that handles asymmetric input and\n * output schemas.\n */\nclass AsymmetricStructuredOutputParser extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseOutputParser {\n    constructor({ inputSchema }) {\n        super(...arguments);\n        Object.defineProperty(this, \"structuredInputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.structuredInputParser = new JsonMarkdownStructuredOutputParser(inputSchema);\n    }\n    async parse(text) {\n        let parsedInput;\n        try {\n            parsedInput = await this.structuredInputParser.parse(text);\n        }\n        catch (e) {\n            throw new _base_js__WEBPACK_IMPORTED_MODULE_1__.OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n        return this.outputProcessor(parsedInput);\n    }\n    getFormatInstructions() {\n        return this.structuredInputParser.getFormatInstructions();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/structured.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseCumulativeTransformOutputParser: () => (/* binding */ BaseCumulativeTransformOutputParser),\n/* harmony export */   BaseTransformOutputParser: () => (/* binding */ BaseTransformOutputParser)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/base.js\");\n/* harmony import */ var _messages_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messages/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/base.js\");\n/* harmony import */ var _messages_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messages/utils.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/utils.js\");\n/* harmony import */ var _outputs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../outputs.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/outputs.js\");\n/* harmony import */ var _utils_cfworker_json_schema_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/@cfworker/json-schema/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/index.js\");\n\n\n\n\n\n/**\n * Class to parse the output of an LLM call that also allows streaming inputs.\n */\nclass BaseTransformOutputParser extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n    async *_transform(inputGenerator) {\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk === \"string\") {\n                yield this.parseResult([{ text: chunk }]);\n            }\n            else {\n                yield this.parseResult([\n                    {\n                        message: chunk,\n                        text: this._baseMessageToString(chunk),\n                    },\n                ]);\n            }\n        }\n    }\n    /**\n     * Transforms an asynchronous generator of input into an asynchronous\n     * generator of parsed output.\n     * @param inputGenerator An asynchronous generator of input.\n     * @param options A configuration object.\n     * @returns An asynchronous generator of parsed output.\n     */\n    async *transform(inputGenerator, options) {\n        yield* this._transformStreamWithConfig(inputGenerator, this._transform.bind(this), {\n            ...options,\n            runType: \"parser\",\n        });\n    }\n}\n/**\n * A base class for output parsers that can handle streaming input. It\n * extends the `BaseTransformOutputParser` class and provides a method for\n * converting parsed outputs into a diff format.\n */\nclass BaseCumulativeTransformOutputParser extends BaseTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"diff\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.diff = fields?.diff ?? this.diff;\n    }\n    async *_transform(inputGenerator) {\n        let prevParsed;\n        let accGen;\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk !== \"string\" && typeof chunk.content !== \"string\") {\n                throw new Error(\"Cannot handle non-string output.\");\n            }\n            let chunkGen;\n            if ((0,_messages_base_js__WEBPACK_IMPORTED_MODULE_1__.isBaseMessageChunk)(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new _outputs_js__WEBPACK_IMPORTED_MODULE_3__.ChatGenerationChunk({\n                    message: chunk,\n                    text: chunk.content,\n                });\n            }\n            else if ((0,_messages_base_js__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new _outputs_js__WEBPACK_IMPORTED_MODULE_3__.ChatGenerationChunk({\n                    message: (0,_messages_utils_js__WEBPACK_IMPORTED_MODULE_2__.convertToChunk)(chunk),\n                    text: chunk.content,\n                });\n            }\n            else {\n                chunkGen = new _outputs_js__WEBPACK_IMPORTED_MODULE_3__.GenerationChunk({ text: chunk });\n            }\n            if (accGen === undefined) {\n                accGen = chunkGen;\n            }\n            else {\n                accGen = accGen.concat(chunkGen);\n            }\n            const parsed = await this.parsePartialResult([accGen]);\n            if (parsed !== undefined &&\n                parsed !== null &&\n                !(0,_utils_cfworker_json_schema_index_js__WEBPACK_IMPORTED_MODULE_4__.deepCompareStrict)(parsed, prevParsed)) {\n                if (this.diff) {\n                    yield this._diff(prevParsed, parsed);\n                }\n                else {\n                    yield parsed;\n                }\n                prevParsed = parsed;\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy90cmFuc2Zvcm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE2QztBQUM0QjtBQUNuQjtBQUNnQjtBQUNNO0FBQzVFO0FBQ0E7QUFDQTtBQUNPLHdDQUF3QyxzREFBZ0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGFBQWE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUVBQWtCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0REFBbUI7QUFDbEQ7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLHFCQUFxQixnRUFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQW1CO0FBQ2xELDZCQUE2QixrRUFBYztBQUMzQztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsK0JBQStCLHdEQUFlLEdBQUcsYUFBYTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1RkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRfcGFyc2Vycy90cmFuc2Zvcm0uanM/YmU3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlT3V0cHV0UGFyc2VyIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuaW1wb3J0IHsgaXNCYXNlTWVzc2FnZSwgaXNCYXNlTWVzc2FnZUNodW5rLCB9IGZyb20gXCIuLi9tZXNzYWdlcy9iYXNlLmpzXCI7XG5pbXBvcnQgeyBjb252ZXJ0VG9DaHVuayB9IGZyb20gXCIuLi9tZXNzYWdlcy91dGlscy5qc1wiO1xuaW1wb3J0IHsgR2VuZXJhdGlvbkNodW5rLCBDaGF0R2VuZXJhdGlvbkNodW5rLCB9IGZyb20gXCIuLi9vdXRwdXRzLmpzXCI7XG5pbXBvcnQgeyBkZWVwQ29tcGFyZVN0cmljdCB9IGZyb20gXCIuLi91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvaW5kZXguanNcIjtcbi8qKlxuICogQ2xhc3MgdG8gcGFyc2UgdGhlIG91dHB1dCBvZiBhbiBMTE0gY2FsbCB0aGF0IGFsc28gYWxsb3dzIHN0cmVhbWluZyBpbnB1dHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlVHJhbnNmb3JtT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZU91dHB1dFBhcnNlciB7XG4gICAgYXN5bmMgKl90cmFuc2Zvcm0oaW5wdXRHZW5lcmF0b3IpIHtcbiAgICAgICAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBpbnB1dEdlbmVyYXRvcikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjaHVuayA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMucGFyc2VSZXN1bHQoW3sgdGV4dDogY2h1bmsgfV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5wYXJzZVJlc3VsdChbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGNodW5rLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogdGhpcy5fYmFzZU1lc3NhZ2VUb1N0cmluZyhjaHVuayksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVHJhbnNmb3JtcyBhbiBhc3luY2hyb25vdXMgZ2VuZXJhdG9yIG9mIGlucHV0IGludG8gYW4gYXN5bmNocm9ub3VzXG4gICAgICogZ2VuZXJhdG9yIG9mIHBhcnNlZCBvdXRwdXQuXG4gICAgICogQHBhcmFtIGlucHV0R2VuZXJhdG9yIEFuIGFzeW5jaHJvbm91cyBnZW5lcmF0b3Igb2YgaW5wdXQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgQSBjb25maWd1cmF0aW9uIG9iamVjdC5cbiAgICAgKiBAcmV0dXJucyBBbiBhc3luY2hyb25vdXMgZ2VuZXJhdG9yIG9mIHBhcnNlZCBvdXRwdXQuXG4gICAgICovXG4gICAgYXN5bmMgKnRyYW5zZm9ybShpbnB1dEdlbmVyYXRvciwgb3B0aW9ucykge1xuICAgICAgICB5aWVsZCogdGhpcy5fdHJhbnNmb3JtU3RyZWFtV2l0aENvbmZpZyhpbnB1dEdlbmVyYXRvciwgdGhpcy5fdHJhbnNmb3JtLmJpbmQodGhpcyksIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBydW5UeXBlOiBcInBhcnNlclwiLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vKipcbiAqIEEgYmFzZSBjbGFzcyBmb3Igb3V0cHV0IHBhcnNlcnMgdGhhdCBjYW4gaGFuZGxlIHN0cmVhbWluZyBpbnB1dC4gSXRcbiAqIGV4dGVuZHMgdGhlIGBCYXNlVHJhbnNmb3JtT3V0cHV0UGFyc2VyYCBjbGFzcyBhbmQgcHJvdmlkZXMgYSBtZXRob2QgZm9yXG4gKiBjb252ZXJ0aW5nIHBhcnNlZCBvdXRwdXRzIGludG8gYSBkaWZmIGZvcm1hdC5cbiAqL1xuZXhwb3J0IGNsYXNzIEJhc2VDdW11bGF0aXZlVHJhbnNmb3JtT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZVRyYW5zZm9ybU91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRpZmZcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRpZmYgPSBmaWVsZHM/LmRpZmYgPz8gdGhpcy5kaWZmO1xuICAgIH1cbiAgICBhc3luYyAqX3RyYW5zZm9ybShpbnB1dEdlbmVyYXRvcikge1xuICAgICAgICBsZXQgcHJldlBhcnNlZDtcbiAgICAgICAgbGV0IGFjY0dlbjtcbiAgICAgICAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBpbnB1dEdlbmVyYXRvcikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjaHVuayAhPT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YgY2h1bmsuY29udGVudCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBoYW5kbGUgbm9uLXN0cmluZyBvdXRwdXQuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGNodW5rR2VuO1xuICAgICAgICAgICAgaWYgKGlzQmFzZU1lc3NhZ2VDaHVuayhjaHVuaykpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNodW5rLmNvbnRlbnQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGhhbmRsZSBub24tc3RyaW5nIG1lc3NhZ2Ugb3V0cHV0LlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2h1bmtHZW4gPSBuZXcgQ2hhdEdlbmVyYXRpb25DaHVuayh7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGNodW5rLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBjaHVuay5jb250ZW50LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNCYXNlTWVzc2FnZShjaHVuaykpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNodW5rLmNvbnRlbnQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGhhbmRsZSBub24tc3RyaW5nIG1lc3NhZ2Ugb3V0cHV0LlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2h1bmtHZW4gPSBuZXcgQ2hhdEdlbmVyYXRpb25DaHVuayh7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGNvbnZlcnRUb0NodW5rKGNodW5rKSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogY2h1bmsuY29udGVudCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNodW5rR2VuID0gbmV3IEdlbmVyYXRpb25DaHVuayh7IHRleHQ6IGNodW5rIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFjY0dlbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgYWNjR2VuID0gY2h1bmtHZW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhY2NHZW4gPSBhY2NHZW4uY29uY2F0KGNodW5rR2VuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IGF3YWl0IHRoaXMucGFyc2VQYXJ0aWFsUmVzdWx0KFthY2NHZW5dKTtcbiAgICAgICAgICAgIGlmIChwYXJzZWQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIHBhcnNlZCAhPT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgICFkZWVwQ29tcGFyZVN0cmljdChwYXJzZWQsIHByZXZQYXJzZWQpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZGlmZikge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLl9kaWZmKHByZXZQYXJzZWQsIHBhcnNlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBwYXJzZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByZXZQYXJzZWQgPSBwYXJzZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/xml.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/xml.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XMLOutputParser: () => (/* binding */ XMLOutputParser),\n/* harmony export */   XML_FORMAT_INSTRUCTIONS: () => (/* binding */ XML_FORMAT_INSTRUCTIONS),\n/* harmony export */   parseXMLMarkdown: () => (/* binding */ parseXMLMarkdown)\n/* harmony export */ });\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/transform.js\");\n/* harmony import */ var _utils_json_patch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/json_patch.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json_patch.js\");\n/* harmony import */ var _utils_sax_js_sax_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/sax-js/sax.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/sax-js/sax.js\");\n\n\n\nconst XML_FORMAT_INSTRUCTIONS = `The output should be formatted as a XML file.\n1. Output should conform to the tags below. \n2. If tags are not given, make them on your own.\n3. Remember to always open and close all the tags.\n\nAs an example, for the tags [\"foo\", \"bar\", \"baz\"]:\n1. String \"<foo>\\n   <bar>\\n      <baz></baz>\\n   </bar>\\n</foo>\" is a well-formatted instance of the schema. \n2. String \"<foo>\\n   <bar>\\n   </foo>\" is a badly-formatted instance.\n3. String \"<foo>\\n   <tag>\\n   </tag>\\n</foo>\" is a badly-formatted instance.\n\nHere are the output tags:\n\\`\\`\\`\n{tags}\n\\`\\`\\``;\nclass XMLOutputParser extends _transform_js__WEBPACK_IMPORTED_MODULE_0__.BaseCumulativeTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.tags = fields?.tags;\n    }\n    static lc_name() {\n        return \"XMLOutputParser\";\n    }\n    _diff(prev, next) {\n        if (!next) {\n            return undefined;\n        }\n        if (!prev) {\n            return [{ op: \"replace\", path: \"\", value: next }];\n        }\n        return (0,_utils_json_patch_js__WEBPACK_IMPORTED_MODULE_1__.compare)(prev, next);\n    }\n    async parsePartialResult(generations) {\n        return parseXMLMarkdown(generations[0].text);\n    }\n    async parse(text) {\n        return parseXMLMarkdown(text);\n    }\n    getFormatInstructions() {\n        const withTags = !!(this.tags && this.tags.length > 0);\n        return withTags\n            ? XML_FORMAT_INSTRUCTIONS.replace(\"{tags}\", this.tags?.join(\", \") ?? \"\")\n            : XML_FORMAT_INSTRUCTIONS;\n    }\n}\nconst strip = (text) => text\n    .split(\"\\n\")\n    .map((line) => line.replace(/^\\s+/, \"\"))\n    .join(\"\\n\")\n    .trim();\nconst parseParsedResult = (input) => {\n    if (Object.keys(input).length === 0) {\n        return {};\n    }\n    const result = {};\n    if (input.children.length > 0) {\n        result[input.name] = input.children.map(parseParsedResult);\n        return result;\n    }\n    else {\n        result[input.name] = input.text ?? undefined;\n        return result;\n    }\n};\nfunction parseXMLMarkdown(s) {\n    const cleanedString = strip(s);\n    const parser = _utils_sax_js_sax_js__WEBPACK_IMPORTED_MODULE_2__.sax.parser(true);\n    let parsedResult = {};\n    const elementStack = [];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parser.onopentag = (node) => {\n        const element = {\n            name: node.name,\n            attributes: node.attributes,\n            children: [],\n            text: \"\",\n            isSelfClosing: node.isSelfClosing,\n        };\n        if (elementStack.length > 0) {\n            const parentElement = elementStack[elementStack.length - 1];\n            parentElement.children.push(element);\n        }\n        else {\n            parsedResult = element;\n        }\n        if (!node.isSelfClosing) {\n            elementStack.push(element);\n        }\n    };\n    parser.onclosetag = () => {\n        if (elementStack.length > 0) {\n            const lastElement = elementStack.pop();\n            if (elementStack.length === 0 && lastElement) {\n                parsedResult = lastElement;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parser.ontext = (text) => {\n        if (elementStack.length > 0) {\n            const currentElement = elementStack[elementStack.length - 1];\n            currentElement.text += text;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parser.onattribute = (attr) => {\n        if (elementStack.length > 0) {\n            const currentElement = elementStack[elementStack.length - 1];\n            currentElement.attributes[attr.name] = attr.value;\n        }\n    };\n    // Try to find XML string within triple backticks.\n    const match = /```(xml)?(.*)```/s.exec(cleanedString);\n    const xmlString = match ? match[2] : cleanedString;\n    parser.write(xmlString).close();\n    // Remove the XML declaration if present\n    if (parsedResult && parsedResult.name === \"?xml\") {\n        parsedResult = parsedResult.children[0];\n    }\n    return parseParsedResult(parsedResult);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/xml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/outputs.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/outputs.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatGenerationChunk: () => (/* binding */ ChatGenerationChunk),\n/* harmony export */   GenerationChunk: () => (/* binding */ GenerationChunk),\n/* harmony export */   RUN_KEY: () => (/* binding */ RUN_KEY)\n/* harmony export */ });\nconst RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nclass GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nclass ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9vdXRwdXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L291dHB1dHMuanM/ZDc5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUlVOX0tFWSA9IFwiX19ydW5cIjtcbi8qKlxuICogQ2h1bmsgb2YgYSBzaW5nbGUgZ2VuZXJhdGlvbi4gVXNlZCBmb3Igc3RyZWFtaW5nLlxuICovXG5leHBvcnQgY2xhc3MgR2VuZXJhdGlvbkNodW5rIHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidGV4dFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJnZW5lcmF0aW9uSW5mb1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRleHQgPSBmaWVsZHMudGV4dDtcbiAgICAgICAgdGhpcy5nZW5lcmF0aW9uSW5mbyA9IGZpZWxkcy5nZW5lcmF0aW9uSW5mbztcbiAgICB9XG4gICAgY29uY2F0KGNodW5rKSB7XG4gICAgICAgIHJldHVybiBuZXcgR2VuZXJhdGlvbkNodW5rKHtcbiAgICAgICAgICAgIHRleHQ6IHRoaXMudGV4dCArIGNodW5rLnRleHQsXG4gICAgICAgICAgICBnZW5lcmF0aW9uSW5mbzoge1xuICAgICAgICAgICAgICAgIC4uLnRoaXMuZ2VuZXJhdGlvbkluZm8sXG4gICAgICAgICAgICAgICAgLi4uY2h1bmsuZ2VuZXJhdGlvbkluZm8sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ2hhdEdlbmVyYXRpb25DaHVuayBleHRlbmRzIEdlbmVyYXRpb25DaHVuayB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1lc3NhZ2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gZmllbGRzLm1lc3NhZ2U7XG4gICAgfVxuICAgIGNvbmNhdChjaHVuaykge1xuICAgICAgICByZXR1cm4gbmV3IENoYXRHZW5lcmF0aW9uQ2h1bmsoe1xuICAgICAgICAgICAgdGV4dDogdGhpcy50ZXh0ICsgY2h1bmsudGV4dCxcbiAgICAgICAgICAgIGdlbmVyYXRpb25JbmZvOiB7XG4gICAgICAgICAgICAgICAgLi4udGhpcy5nZW5lcmF0aW9uSW5mbyxcbiAgICAgICAgICAgICAgICAuLi5jaHVuay5nZW5lcmF0aW9uSW5mbyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UuY29uY2F0KGNodW5rLm1lc3NhZ2UpLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/outputs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePromptValue: () => (/* binding */ BasePromptValue),\n/* harmony export */   ChatPromptValue: () => (/* binding */ ChatPromptValue),\n/* harmony export */   ImagePromptValue: () => (/* binding */ ImagePromptValue),\n/* harmony export */   StringPromptValue: () => (/* binding */ StringPromptValue)\n/* harmony export */ });\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n\n\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nclass BasePromptValue extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n}\n/**\n * Represents a prompt value as a string. It extends the BasePromptValue\n * class and overrides the toString and toChatMessages methods.\n */\nclass StringPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"StringPromptValue\";\n    }\n    constructor(value) {\n        super({ value });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new _messages_index_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(this.value)];\n    }\n}\n/**\n * Class that represents a chat prompt value. It extends the\n * BasePromptValue and includes an array of BaseMessage instances.\n */\nclass ChatPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ChatPromptValue\";\n    }\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_1__.getBufferString)(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\n/**\n * Class that represents an image prompt value. It extends the\n * BasePromptValue and includes an ImageURL instance.\n */\nclass ImagePromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ImagePromptValue\";\n    }\n    constructor(fields) {\n        if (!(\"imageUrl\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { imageUrl: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"imageUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @ignore */\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.imageUrl = fields.imageUrl;\n    }\n    toString() {\n        return this.imageUrl.url;\n    }\n    toChatMessages() {\n        return [\n            new _messages_index_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessage({\n                content: [\n                    {\n                        type: \"image_url\",\n                        image_url: {\n                            detail: this.imageUrl.detail,\n                            url: this.imageUrl.url,\n                        },\n                    },\n                ],\n            }),\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRfdmFsdWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRDtBQUNlO0FBQ3JFO0FBQ0E7QUFDQTtBQUNPLDhCQUE4QiwrREFBWTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0REFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtRUFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDREQUFZO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3Byb21wdF92YWx1ZXMuanM/NjBjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJpYWxpemFibGUgfSBmcm9tIFwiLi9sb2FkL3NlcmlhbGl6YWJsZS5qc1wiO1xuaW1wb3J0IHsgSHVtYW5NZXNzYWdlLCBnZXRCdWZmZXJTdHJpbmcsIH0gZnJvbSBcIi4vbWVzc2FnZXMvaW5kZXguanNcIjtcbi8qKlxuICogQmFzZSBQcm9tcHRWYWx1ZSBjbGFzcy4gQWxsIHByb21wdCB2YWx1ZXMgc2hvdWxkIGV4dGVuZCB0aGlzIGNsYXNzLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZVByb21wdFZhbHVlIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcbn1cbi8qKlxuICogUmVwcmVzZW50cyBhIHByb21wdCB2YWx1ZSBhcyBhIHN0cmluZy4gSXQgZXh0ZW5kcyB0aGUgQmFzZVByb21wdFZhbHVlXG4gKiBjbGFzcyBhbmQgb3ZlcnJpZGVzIHRoZSB0b1N0cmluZyBhbmQgdG9DaGF0TWVzc2FnZXMgbWV0aG9kcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFN0cmluZ1Byb21wdFZhbHVlIGV4dGVuZHMgQmFzZVByb21wdFZhbHVlIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiU3RyaW5nUHJvbXB0VmFsdWVcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgc3VwZXIoeyB2YWx1ZSB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5fY29yZVwiLCBcInByb21wdF92YWx1ZXNcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX3NlcmlhbGl6YWJsZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmFsdWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgfVxuICAgIHRvQ2hhdE1lc3NhZ2VzKCkge1xuICAgICAgICByZXR1cm4gW25ldyBIdW1hbk1lc3NhZ2UodGhpcy52YWx1ZSldO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgdGhhdCByZXByZXNlbnRzIGEgY2hhdCBwcm9tcHQgdmFsdWUuIEl0IGV4dGVuZHMgdGhlXG4gKiBCYXNlUHJvbXB0VmFsdWUgYW5kIGluY2x1ZGVzIGFuIGFycmF5IG9mIEJhc2VNZXNzYWdlIGluc3RhbmNlcy5cbiAqL1xuZXhwb3J0IGNsYXNzIENoYXRQcm9tcHRWYWx1ZSBleHRlbmRzIEJhc2VQcm9tcHRWYWx1ZSB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIkNoYXRQcm9tcHRWYWx1ZVwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZmllbGRzKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBmaWVsZHMgPSB7IG1lc3NhZ2VzOiBmaWVsZHMgfTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpbl9jb3JlXCIsIFwicHJvbXB0X3ZhbHVlc1wiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtZXNzYWdlc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1lc3NhZ2VzID0gZmllbGRzLm1lc3NhZ2VzO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGdldEJ1ZmZlclN0cmluZyh0aGlzLm1lc3NhZ2VzKTtcbiAgICB9XG4gICAgdG9DaGF0TWVzc2FnZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1lc3NhZ2VzO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgdGhhdCByZXByZXNlbnRzIGFuIGltYWdlIHByb21wdCB2YWx1ZS4gSXQgZXh0ZW5kcyB0aGVcbiAqIEJhc2VQcm9tcHRWYWx1ZSBhbmQgaW5jbHVkZXMgYW4gSW1hZ2VVUkwgaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbWFnZVByb21wdFZhbHVlIGV4dGVuZHMgQmFzZVByb21wdFZhbHVlIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiSW1hZ2VQcm9tcHRWYWx1ZVwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgaWYgKCEoXCJpbWFnZVVybFwiIGluIGZpZWxkcykpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgZmllbGRzID0geyBpbWFnZVVybDogZmllbGRzIH07XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoZmllbGRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5fY29yZVwiLCBcInByb21wdF92YWx1ZXNcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX3NlcmlhbGl6YWJsZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW1hZ2VVcmxcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIEBpZ25vcmUgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmFsdWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5pbWFnZVVybCA9IGZpZWxkcy5pbWFnZVVybDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltYWdlVXJsLnVybDtcbiAgICB9XG4gICAgdG9DaGF0TWVzc2FnZXMoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBuZXcgSHVtYW5NZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiaW1hZ2VfdXJsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZV91cmw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWw6IHRoaXMuaW1hZ2VVcmwuZGV0YWlsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdGhpcy5pbWFnZVVybC51cmwsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgXTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePromptTemplate: () => (/* binding */ BasePromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _runnables_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runnables/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\n\n/**\n * Base class for prompt templates. Exposes a format method that returns a\n * string prompt given a set of input values.\n */\nclass BasePromptTemplate extends _runnables_base_js__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    get lc_attributes() {\n        return {\n            partialVariables: undefined, // python doesn't support this yet\n        };\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompts\", this._getPromptType()]\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"partialVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { inputVariables } = input;\n        if (inputVariables.includes(\"stop\")) {\n            throw new Error(\"Cannot have an input variable named 'stop', as it is used internally, please rename.\");\n        }\n        Object.assign(this, input);\n    }\n    /**\n     * Merges partial variables and user variables.\n     * @param userVariables The user variables to merge with the partial variables.\n     * @returns A Promise that resolves to an object containing the merged variables.\n     */\n    async mergePartialAndUserVariables(userVariables) {\n        const partialVariables = this.partialVariables ?? {};\n        const partialValues = {};\n        for (const [key, value] of Object.entries(partialVariables)) {\n            if (typeof value === \"string\") {\n                partialValues[key] = value;\n            }\n            else {\n                partialValues[key] = await value();\n            }\n        }\n        const allKwargs = {\n            ...partialValues,\n            ...userVariables,\n        };\n        return allKwargs;\n    }\n    /**\n     * Invokes the prompt template with the given input and options.\n     * @param input The input to invoke the prompt template with.\n     * @param options Optional configuration for the callback.\n     * @returns A Promise that resolves to the output of the prompt template.\n     */\n    async invoke(input, options) {\n        return this._callWithConfig((input) => this.formatPromptValue(input), input, { ...options, runType: \"prompt\" });\n    }\n    /**\n     * Return a json-like object representing this prompt template.\n     * @deprecated\n     */\n    serialize() {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n    /**\n     * @deprecated\n     * Load a prompt template from a json-like object describing it.\n     *\n     * @remarks\n     * Deserializing needs to be async because templates (e.g. {@link FewShotPromptTemplate}) can\n     * reference remote resources that we read asynchronously with a web\n     * request.\n     */\n    static async deserialize(data) {\n        switch (data._type) {\n            case \"prompt\": {\n                const { PromptTemplate } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./prompt.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js\"));\n                return PromptTemplate.deserialize(data);\n            }\n            case undefined: {\n                const { PromptTemplate } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./prompt.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js\"));\n                return PromptTemplate.deserialize({ ...data, _type: \"prompt\" });\n            }\n            case \"few_shot\": {\n                const { FewShotPromptTemplate } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./few_shot.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/few_shot.js\"));\n                return FewShotPromptTemplate.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL2Jhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ2dEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUNBQWlDLHdEQUFRO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RkFBdUYsK0JBQStCO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLDRCQUE0QjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsaUJBQWlCLFFBQVEsNkxBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpQkFBaUIsUUFBUSw2TEFBcUI7QUFDdEUsb0RBQW9ELDBCQUEwQjtBQUM5RTtBQUNBO0FBQ0Esd0JBQXdCLHdCQUF3QixRQUFRLGlNQUF1QjtBQUMvRTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsV0FBVztBQUM3RTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvcHJvbXB0cy9iYXNlLmpzPzNkZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRGVmYXVsdCBnZW5lcmljIFwiYW55XCIgdmFsdWVzIGFyZSBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuXG4vLyBSZXBsYWNlIHdpdGggXCJzdHJpbmdcIiB3aGVuIHdlIGFyZSBjb21mb3J0YWJsZSB3aXRoIGEgYnJlYWtpbmcgY2hhbmdlLlxuaW1wb3J0IHsgUnVubmFibGUgfSBmcm9tIFwiLi4vcnVubmFibGVzL2Jhc2UuanNcIjtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgcHJvbXB0IHRlbXBsYXRlcy4gRXhwb3NlcyBhIGZvcm1hdCBtZXRob2QgdGhhdCByZXR1cm5zIGFcbiAqIHN0cmluZyBwcm9tcHQgZ2l2ZW4gYSBzZXQgb2YgaW5wdXQgdmFsdWVzLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZVByb21wdFRlbXBsYXRlIGV4dGVuZHMgUnVubmFibGUge1xuICAgIGdldCBsY19hdHRyaWJ1dGVzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGFydGlhbFZhcmlhYmxlczogdW5kZWZpbmVkLCAvLyBweXRob24gZG9lc24ndCBzdXBwb3J0IHRoaXMgeWV0XG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgICAgIHN1cGVyKGlucHV0KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19uYW1lc3BhY2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtcImxhbmdjaGFpbl9jb3JlXCIsIFwicHJvbXB0c1wiLCB0aGlzLl9nZXRQcm9tcHRUeXBlKCldXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnB1dFZhcmlhYmxlc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvdXRwdXRQYXJzZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicGFydGlhbFZhcmlhYmxlc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB7IGlucHV0VmFyaWFibGVzIH0gPSBpbnB1dDtcbiAgICAgICAgaWYgKGlucHV0VmFyaWFibGVzLmluY2x1ZGVzKFwic3RvcFwiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGhhdmUgYW4gaW5wdXQgdmFyaWFibGUgbmFtZWQgJ3N0b3AnLCBhcyBpdCBpcyB1c2VkIGludGVybmFsbHksIHBsZWFzZSByZW5hbWUuXCIpO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXJnZXMgcGFydGlhbCB2YXJpYWJsZXMgYW5kIHVzZXIgdmFyaWFibGVzLlxuICAgICAqIEBwYXJhbSB1c2VyVmFyaWFibGVzIFRoZSB1c2VyIHZhcmlhYmxlcyB0byBtZXJnZSB3aXRoIHRoZSBwYXJ0aWFsIHZhcmlhYmxlcy5cbiAgICAgKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgbWVyZ2VkIHZhcmlhYmxlcy5cbiAgICAgKi9cbiAgICBhc3luYyBtZXJnZVBhcnRpYWxBbmRVc2VyVmFyaWFibGVzKHVzZXJWYXJpYWJsZXMpIHtcbiAgICAgICAgY29uc3QgcGFydGlhbFZhcmlhYmxlcyA9IHRoaXMucGFydGlhbFZhcmlhYmxlcyA/PyB7fTtcbiAgICAgICAgY29uc3QgcGFydGlhbFZhbHVlcyA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwYXJ0aWFsVmFyaWFibGVzKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHBhcnRpYWxWYWx1ZXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcGFydGlhbFZhbHVlc1trZXldID0gYXdhaXQgdmFsdWUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbGxLd2FyZ3MgPSB7XG4gICAgICAgICAgICAuLi5wYXJ0aWFsVmFsdWVzLFxuICAgICAgICAgICAgLi4udXNlclZhcmlhYmxlcyxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGFsbEt3YXJncztcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW52b2tlcyB0aGUgcHJvbXB0IHRlbXBsYXRlIHdpdGggdGhlIGdpdmVuIGlucHV0IGFuZCBvcHRpb25zLlxuICAgICAqIEBwYXJhbSBpbnB1dCBUaGUgaW5wdXQgdG8gaW52b2tlIHRoZSBwcm9tcHQgdGVtcGxhdGUgd2l0aC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbCBjb25maWd1cmF0aW9uIGZvciB0aGUgY2FsbGJhY2suXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIG91dHB1dCBvZiB0aGUgcHJvbXB0IHRlbXBsYXRlLlxuICAgICAqL1xuICAgIGFzeW5jIGludm9rZShpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2FsbFdpdGhDb25maWcoKGlucHV0KSA9PiB0aGlzLmZvcm1hdFByb21wdFZhbHVlKGlucHV0KSwgaW5wdXQsIHsgLi4ub3B0aW9ucywgcnVuVHlwZTogXCJwcm9tcHRcIiB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIGEganNvbi1saWtlIG9iamVjdCByZXByZXNlbnRpbmcgdGhpcyBwcm9tcHQgdGVtcGxhdGUuXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBzZXJpYWxpemUoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVzZSAudG9KU09OKCkgaW5zdGVhZFwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKiBMb2FkIGEgcHJvbXB0IHRlbXBsYXRlIGZyb20gYSBqc29uLWxpa2Ugb2JqZWN0IGRlc2NyaWJpbmcgaXQuXG4gICAgICpcbiAgICAgKiBAcmVtYXJrc1xuICAgICAqIERlc2VyaWFsaXppbmcgbmVlZHMgdG8gYmUgYXN5bmMgYmVjYXVzZSB0ZW1wbGF0ZXMgKGUuZy4ge0BsaW5rIEZld1Nob3RQcm9tcHRUZW1wbGF0ZX0pIGNhblxuICAgICAqIHJlZmVyZW5jZSByZW1vdGUgcmVzb3VyY2VzIHRoYXQgd2UgcmVhZCBhc3luY2hyb25vdXNseSB3aXRoIGEgd2ViXG4gICAgICogcmVxdWVzdC5cbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZGVzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICBzd2l0Y2ggKGRhdGEuX3R5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJwcm9tcHRcIjoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgUHJvbXB0VGVtcGxhdGUgfSA9IGF3YWl0IGltcG9ydChcIi4vcHJvbXB0LmpzXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBQcm9tcHRUZW1wbGF0ZS5kZXNlcmlhbGl6ZShkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgdW5kZWZpbmVkOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBQcm9tcHRUZW1wbGF0ZSB9ID0gYXdhaXQgaW1wb3J0KFwiLi9wcm9tcHQuanNcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21wdFRlbXBsYXRlLmRlc2VyaWFsaXplKHsgLi4uZGF0YSwgX3R5cGU6IFwicHJvbXB0XCIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlIFwiZmV3X3Nob3RcIjoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgRmV3U2hvdFByb21wdFRlbXBsYXRlIH0gPSBhd2FpdCBpbXBvcnQoXCIuL2Zld19zaG90LmpzXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBGZXdTaG90UHJvbXB0VGVtcGxhdGUuZGVzZXJpYWxpemUoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwcm9tcHQgdHlwZSBpbiBjb25maWc6ICR7ZGF0YS5fdHlwZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIMessagePromptTemplate: () => (/* binding */ AIMessagePromptTemplate),\n/* harmony export */   BaseChatPromptTemplate: () => (/* binding */ BaseChatPromptTemplate),\n/* harmony export */   BaseMessagePromptTemplate: () => (/* binding */ BaseMessagePromptTemplate),\n/* harmony export */   BaseMessageStringPromptTemplate: () => (/* binding */ BaseMessageStringPromptTemplate),\n/* harmony export */   ChatMessagePromptTemplate: () => (/* binding */ ChatMessagePromptTemplate),\n/* harmony export */   ChatPromptTemplate: () => (/* binding */ ChatPromptTemplate),\n/* harmony export */   HumanMessagePromptTemplate: () => (/* binding */ HumanMessagePromptTemplate),\n/* harmony export */   MessagesPlaceholder: () => (/* binding */ MessagesPlaceholder),\n/* harmony export */   SystemMessagePromptTemplate: () => (/* binding */ SystemMessagePromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n/* harmony import */ var _prompt_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../prompt_values.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js\");\n/* harmony import */ var _runnables_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../runnables/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js\");\n/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./image.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/image.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./template.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js\");\n// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\n\n\n\n\n\n\n\n\n/**\n * Abstract class that serves as a base for creating message prompt\n * templates. It defines how to format messages for different roles in a\n * conversation.\n */\nclass BaseMessagePromptTemplate extends _runnables_base_js__WEBPACK_IMPORTED_MODULE_2__.Runnable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompts\", \"chat\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    /**\n     * Calls the formatMessages method with the provided input and options.\n     * @param input Input for the formatMessages method\n     * @param options Optional BaseCallbackConfig\n     * @returns Formatted output messages\n     */\n    async invoke(input, options) {\n        return this._callWithConfig((input) => this.formatMessages(input), input, { ...options, runType: \"prompt\" });\n    }\n}\n/**\n * Class that represents a placeholder for messages in a chat prompt. It\n * extends the BaseMessagePromptTemplate.\n */\nclass MessagesPlaceholder extends BaseMessagePromptTemplate {\n    static lc_name() {\n        return \"MessagesPlaceholder\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = { variableName: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"variableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"optional\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.variableName = fields.variableName;\n        this.optional = fields.optional ?? false;\n    }\n    get inputVariables() {\n        return [this.variableName];\n    }\n    validateInputOrThrow(input, variableName) {\n        if (this.optional && !input) {\n            return false;\n        }\n        else if (!input) {\n            const error = new Error(`Error: Field \"${variableName}\" in prompt uses a MessagesPlaceholder, which expects an array of BaseMessages as an input value. Received: undefined`);\n            error.name = \"InputFormatError\";\n            throw error;\n        }\n        let isInputBaseMessage = false;\n        if (Array.isArray(input)) {\n            isInputBaseMessage = input.every((message) => (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(message));\n        }\n        else {\n            isInputBaseMessage = (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(input);\n        }\n        if (!isInputBaseMessage) {\n            const readableInput = typeof input === \"string\" ? input : JSON.stringify(input, null, 2);\n            const error = new Error(`Error: Field \"${variableName}\" in prompt uses a MessagesPlaceholder, which expects an array of BaseMessages as an input value. Received: ${readableInput}`);\n            error.name = \"InputFormatError\";\n            throw error;\n        }\n        return true;\n    }\n    async formatMessages(values) {\n        this.validateInputOrThrow(values[this.variableName], this.variableName);\n        return values[this.variableName] ?? [];\n    }\n}\n/**\n * Abstract class that serves as a base for creating message string prompt\n * templates. It extends the BaseMessagePromptTemplate.\n */\nclass BaseMessageStringPromptTemplate extends BaseMessagePromptTemplate {\n    constructor(fields) {\n        if (!(\"prompt\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { prompt: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n    }\n    get inputVariables() {\n        return this.prompt.inputVariables;\n    }\n    async formatMessages(values) {\n        return [await this.format(values)];\n    }\n}\n/**\n * Abstract class that serves as a base for creating chat prompt\n * templates. It extends the BasePromptTemplate.\n */\nclass BaseChatPromptTemplate extends _base_js__WEBPACK_IMPORTED_MODULE_4__.BasePromptTemplate {\n    constructor(input) {\n        super(input);\n    }\n    async format(values) {\n        return (await this.formatPromptValue(values)).toString();\n    }\n    async formatPromptValue(values) {\n        const resultMessages = await this.formatMessages(values);\n        return new _prompt_values_js__WEBPACK_IMPORTED_MODULE_1__.ChatPromptValue(resultMessages);\n    }\n}\n/**\n * Class that represents a chat message prompt template. It extends the\n * BaseMessageStringPromptTemplate.\n */\nclass ChatMessagePromptTemplate extends BaseMessageStringPromptTemplate {\n    static lc_name() {\n        return \"ChatMessagePromptTemplate\";\n    }\n    constructor(fields, role) {\n        if (!(\"prompt\" in fields)) {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { prompt: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    async format(values) {\n        return new _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatMessage(await this.prompt.format(values), this.role);\n    }\n    static fromTemplate(template, role, options) {\n        return new this(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.PromptTemplate.fromTemplate(template, {\n            templateFormat: options?.templateFormat,\n        }), role);\n    }\n}\nclass _StringImageMessagePromptTemplate extends BaseMessagePromptTemplate {\n    static _messageClass() {\n        throw new Error(\"Can not invoke _messageClass from inside _StringImageMessagePromptTemplate\");\n    }\n    constructor(\n    /** @TODO When we come up with a better way to type prompt templates, fix this */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fields, additionalOptions) {\n        if (!(\"prompt\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { prompt: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompts\", \"chat\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"additionalOptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"messageClass\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // ChatMessage contains role field, others don't.\n        // Because of this, we have a separate class property for ChatMessage.\n        Object.defineProperty(this, \"chatMessageClass\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n        if (Array.isArray(this.prompt)) {\n            let inputVariables = [];\n            this.prompt.forEach((prompt) => {\n                if (\"inputVariables\" in prompt) {\n                    inputVariables = inputVariables.concat(prompt.inputVariables);\n                }\n            });\n            this.inputVariables = inputVariables;\n        }\n        else {\n            this.inputVariables = this.prompt.inputVariables;\n        }\n        this.additionalOptions = additionalOptions ?? this.additionalOptions;\n    }\n    createMessage(content) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const constructor = this.constructor;\n        if (constructor._messageClass()) {\n            const MsgClass = constructor._messageClass();\n            return new MsgClass({ content });\n        }\n        else if (constructor.chatMessageClass) {\n            const MsgClass = constructor.chatMessageClass();\n            // Assuming ChatMessage constructor also takes a content argument\n            return new MsgClass({\n                content,\n                role: this.getRoleFromMessageClass(MsgClass.lc_name()),\n            });\n        }\n        else {\n            throw new Error(\"No message class defined\");\n        }\n    }\n    getRoleFromMessageClass(name) {\n        switch (name) {\n            case \"HumanMessage\":\n                return \"human\";\n            case \"AIMessage\":\n                return \"ai\";\n            case \"SystemMessage\":\n                return \"system\";\n            case \"ChatMessage\":\n                return \"chat\";\n            default:\n                throw new Error(\"Invalid message class name\");\n        }\n    }\n    static fromTemplate(template, additionalOptions) {\n        if (typeof template === \"string\") {\n            return new this(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.PromptTemplate.fromTemplate(template, additionalOptions));\n        }\n        const prompt = [];\n        for (const item of template) {\n            if (typeof item === \"string\" ||\n                (typeof item === \"object\" && \"text\" in item)) {\n                let text = \"\";\n                if (typeof item === \"string\") {\n                    text = item;\n                }\n                else if (typeof item.text === \"string\") {\n                    text = item.text ?? \"\";\n                }\n                prompt.push(_prompt_js__WEBPACK_IMPORTED_MODULE_5__.PromptTemplate.fromTemplate(text));\n            }\n            else if (typeof item === \"object\" && \"image_url\" in item) {\n                let imgTemplate = item.image_url ?? \"\";\n                let imgTemplateObject;\n                let inputVariables = [];\n                if (typeof imgTemplate === \"string\") {\n                    const parsedTemplate = (0,_template_js__WEBPACK_IMPORTED_MODULE_7__.parseFString)(imgTemplate);\n                    const variables = parsedTemplate.flatMap((item) => item.type === \"variable\" ? [item.name] : []);\n                    if ((variables?.length ?? 0) > 0) {\n                        if (variables.length > 1) {\n                            throw new Error(`Only one format variable allowed per image template.\\nGot: ${variables}\\nFrom: ${imgTemplate}`);\n                        }\n                        inputVariables = [variables[0]];\n                    }\n                    else {\n                        inputVariables = [];\n                    }\n                    imgTemplate = { url: imgTemplate };\n                    imgTemplateObject = new _image_js__WEBPACK_IMPORTED_MODULE_6__.ImagePromptTemplate({\n                        template: imgTemplate,\n                        inputVariables,\n                    });\n                }\n                else if (typeof imgTemplate === \"object\") {\n                    if (\"url\" in imgTemplate) {\n                        const parsedTemplate = (0,_template_js__WEBPACK_IMPORTED_MODULE_7__.parseFString)(imgTemplate.url);\n                        inputVariables = parsedTemplate.flatMap((item) => item.type === \"variable\" ? [item.name] : []);\n                    }\n                    else {\n                        inputVariables = [];\n                    }\n                    imgTemplateObject = new _image_js__WEBPACK_IMPORTED_MODULE_6__.ImagePromptTemplate({\n                        template: imgTemplate,\n                        inputVariables,\n                    });\n                }\n                else {\n                    throw new Error(\"Invalid image template\");\n                }\n                prompt.push(imgTemplateObject);\n            }\n        }\n        return new this({ prompt, additionalOptions });\n    }\n    async format(input) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (this.prompt instanceof _string_js__WEBPACK_IMPORTED_MODULE_3__.BaseStringPromptTemplate) {\n            const text = await this.prompt.format(input);\n            return this.createMessage(text);\n        }\n        else {\n            const content = [];\n            for (const prompt of this.prompt) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let inputs = {};\n                if (!(\"inputVariables\" in prompt)) {\n                    throw new Error(`Prompt ${prompt} does not have inputVariables defined.`);\n                }\n                for (const item of prompt.inputVariables) {\n                    if (!inputs) {\n                        inputs = { [item]: input[item] };\n                    }\n                    inputs = { ...inputs, [item]: input[item] };\n                }\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (prompt instanceof _string_js__WEBPACK_IMPORTED_MODULE_3__.BaseStringPromptTemplate) {\n                    const formatted = await prompt.format(inputs);\n                    content.push({ type: \"text\", text: formatted });\n                    /** @TODO replace this */\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                }\n                else if (prompt instanceof _image_js__WEBPACK_IMPORTED_MODULE_6__.ImagePromptTemplate) {\n                    const formatted = await prompt.format(inputs);\n                    content.push({ type: \"image_url\", image_url: formatted });\n                }\n            }\n            return this.createMessage(content);\n        }\n    }\n    async formatMessages(values) {\n        return [await this.format(values)];\n    }\n}\n/**\n * Class that represents a human message prompt template. It extends the\n * BaseMessageStringPromptTemplate.\n * @example\n * ```typescript\n * const message = HumanMessagePromptTemplate.fromTemplate(\"{text}\");\n * const formatted = await message.format({ text: \"Hello world!\" });\n *\n * const chatPrompt = ChatPromptTemplate.fromMessages([message]);\n * const formattedChatPrompt = await chatPrompt.invoke({\n *   text: \"Hello world!\",\n * });\n * ```\n */\nclass HumanMessagePromptTemplate extends _StringImageMessagePromptTemplate {\n    static _messageClass() {\n        return _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.HumanMessage;\n    }\n    static lc_name() {\n        return \"HumanMessagePromptTemplate\";\n    }\n}\n/**\n * Class that represents an AI message prompt template. It extends the\n * BaseMessageStringPromptTemplate.\n */\nclass AIMessagePromptTemplate extends _StringImageMessagePromptTemplate {\n    static _messageClass() {\n        return _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.AIMessage;\n    }\n    static lc_name() {\n        return \"AIMessagePromptTemplate\";\n    }\n}\n/**\n * Class that represents a system message prompt template. It extends the\n * BaseMessageStringPromptTemplate.\n * @example\n * ```typescript\n * const message = SystemMessagePromptTemplate.fromTemplate(\"{text}\");\n * const formatted = await message.format({ text: \"Hello world!\" });\n *\n * const chatPrompt = ChatPromptTemplate.fromMessages([message]);\n * const formattedChatPrompt = await chatPrompt.invoke({\n *   text: \"Hello world!\",\n * });\n * ```\n */\nclass SystemMessagePromptTemplate extends _StringImageMessagePromptTemplate {\n    static _messageClass() {\n        return _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.SystemMessage;\n    }\n    static lc_name() {\n        return \"SystemMessagePromptTemplate\";\n    }\n}\nfunction _isBaseMessagePromptTemplate(baseMessagePromptTemplateLike) {\n    return (typeof baseMessagePromptTemplateLike\n        .formatMessages === \"function\");\n}\nfunction _coerceMessagePromptTemplateLike(messagePromptTemplateLike, extra) {\n    if (_isBaseMessagePromptTemplate(messagePromptTemplateLike) ||\n        (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(messagePromptTemplateLike)) {\n        return messagePromptTemplateLike;\n    }\n    if (Array.isArray(messagePromptTemplateLike) &&\n        messagePromptTemplateLike[0] === \"placeholder\") {\n        const messageContent = messagePromptTemplateLike[1];\n        if (typeof messageContent !== \"string\" ||\n            messageContent[0] !== \"{\" ||\n            messageContent[messageContent.length - 1] !== \"}\") {\n            throw new Error(`Invalid placeholder template: \"${messagePromptTemplateLike[1]}\". Expected a variable name surrounded by curly braces.`);\n        }\n        const variableName = messageContent.slice(1, -1);\n        return new MessagesPlaceholder({ variableName, optional: true });\n    }\n    const message = (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.coerceMessageLikeToMessage)(messagePromptTemplateLike);\n    let templateData;\n    if (typeof message.content === \"string\") {\n        templateData = message.content;\n    }\n    else {\n        // Assuming message.content is an array of complex objects, transform it.\n        templateData = message.content.map((item) => {\n            if (\"text\" in item) {\n                return { text: item.text };\n            }\n            else if (\"image_url\" in item) {\n                return { image_url: item.image_url };\n            }\n            else {\n                return item;\n            }\n        });\n    }\n    if (message._getType() === \"human\") {\n        return HumanMessagePromptTemplate.fromTemplate(templateData, extra);\n    }\n    else if (message._getType() === \"ai\") {\n        return AIMessagePromptTemplate.fromTemplate(templateData, extra);\n    }\n    else if (message._getType() === \"system\") {\n        return SystemMessagePromptTemplate.fromTemplate(templateData, extra);\n    }\n    else if (_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatMessage.isInstance(message)) {\n        return ChatMessagePromptTemplate.fromTemplate(message.content, message.role, extra);\n    }\n    else {\n        throw new Error(`Could not coerce message prompt template from input. Received message type: \"${message._getType()}\".`);\n    }\n}\nfunction isMessagesPlaceholder(x) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return x.constructor.lc_name() === \"MessagesPlaceholder\";\n}\n/**\n * Class that represents a chat prompt. It extends the\n * BaseChatPromptTemplate and uses an array of BaseMessagePromptTemplate\n * instances to format a series of messages for a conversation.\n * @example\n * ```typescript\n * const message = SystemMessagePromptTemplate.fromTemplate(\"{text}\");\n * const chatPrompt = ChatPromptTemplate.fromMessages([\n *   [\"ai\", \"You are a helpful assistant.\"],\n *   message,\n * ]);\n * const formattedChatPrompt = await chatPrompt.invoke({\n *   text: \"Hello world!\",\n * });\n * ```\n */\nclass ChatPromptTemplate extends BaseChatPromptTemplate {\n    static lc_name() {\n        return \"ChatPromptTemplate\";\n    }\n    get lc_aliases() {\n        return {\n            promptMessages: \"messages\",\n        };\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"promptMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        // If input is mustache and validateTemplate is not defined, set it to false\n        if (input.templateFormat === \"mustache\" &&\n            input.validateTemplate === undefined) {\n            this.validateTemplate = false;\n        }\n        Object.assign(this, input);\n        if (this.validateTemplate) {\n            const inputVariablesMessages = new Set();\n            for (const promptMessage of this.promptMessages) {\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (promptMessage instanceof _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage)\n                    continue;\n                for (const inputVariable of promptMessage.inputVariables) {\n                    inputVariablesMessages.add(inputVariable);\n                }\n            }\n            const totalInputVariables = this.inputVariables;\n            const inputVariablesInstance = new Set(this.partialVariables\n                ? totalInputVariables.concat(Object.keys(this.partialVariables))\n                : totalInputVariables);\n            const difference = new Set([...inputVariablesInstance].filter((x) => !inputVariablesMessages.has(x)));\n            if (difference.size > 0) {\n                throw new Error(`Input variables \\`${[\n                    ...difference,\n                ]}\\` are not used in any of the prompt messages.`);\n            }\n            const otherDifference = new Set([...inputVariablesMessages].filter((x) => !inputVariablesInstance.has(x)));\n            if (otherDifference.size > 0) {\n                throw new Error(`Input variables \\`${[\n                    ...otherDifference,\n                ]}\\` are used in prompt messages but not in the prompt template.`);\n            }\n        }\n    }\n    _getPromptType() {\n        return \"chat\";\n    }\n    async _parseImagePrompts(message, inputValues) {\n        if (typeof message.content === \"string\") {\n            return message;\n        }\n        const formattedMessageContent = await Promise.all(message.content.map(async (item) => {\n            if (item.type !== \"image_url\") {\n                return item;\n            }\n            let imageUrl = \"\";\n            if (typeof item.image_url === \"string\") {\n                imageUrl = item.image_url;\n            }\n            else {\n                imageUrl = item.image_url.url;\n            }\n            const promptTemplatePlaceholder = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PromptTemplate.fromTemplate(imageUrl);\n            const formattedUrl = await promptTemplatePlaceholder.format(inputValues);\n            if (typeof item.image_url !== \"string\" && \"url\" in item.image_url) {\n                // eslint-disable-next-line no-param-reassign\n                item.image_url.url = formattedUrl;\n            }\n            else {\n                // eslint-disable-next-line no-param-reassign\n                item.image_url = formattedUrl;\n            }\n            return item;\n        }));\n        // eslint-disable-next-line no-param-reassign\n        message.content = formattedMessageContent;\n        return message;\n    }\n    async formatMessages(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        let resultMessages = [];\n        for (const promptMessage of this.promptMessages) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (promptMessage instanceof _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage) {\n                resultMessages.push(await this._parseImagePrompts(promptMessage, allValues));\n            }\n            else {\n                const inputValues = promptMessage.inputVariables.reduce((acc, inputVariable) => {\n                    if (!(inputVariable in allValues) &&\n                        !(isMessagesPlaceholder(promptMessage) && promptMessage.optional)) {\n                        throw new Error(`Missing value for input variable \\`${inputVariable.toString()}\\``);\n                    }\n                    acc[inputVariable] = allValues[inputVariable];\n                    return acc;\n                }, {});\n                const message = await promptMessage.formatMessages(inputValues);\n                resultMessages = resultMessages.concat(message);\n            }\n        }\n        return resultMessages;\n    }\n    async partial(values) {\n        // This is implemented in a way it doesn't require making\n        // BaseMessagePromptTemplate aware of .partial()\n        const newInputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        const newPartialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        const promptDict = {\n            ...this,\n            inputVariables: newInputVariables,\n            partialVariables: newPartialVariables,\n        };\n        return new ChatPromptTemplate(promptDict);\n    }\n    static fromTemplate(template, options) {\n        const prompt = _prompt_js__WEBPACK_IMPORTED_MODULE_5__.PromptTemplate.fromTemplate(template, options);\n        const humanTemplate = new HumanMessagePromptTemplate({ prompt });\n        return this.fromMessages([humanTemplate]);\n    }\n    /**\n     * Create a chat model-specific prompt from individual chat messages\n     * or message-like tuples.\n     * @param promptMessages Messages to be passed to the chat model\n     * @returns A new ChatPromptTemplate\n     */\n    static fromMessages(promptMessages, extra) {\n        const flattenedMessages = promptMessages.reduce((acc, promptMessage) => acc.concat(\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        promptMessage instanceof ChatPromptTemplate\n            ? promptMessage.promptMessages\n            : [\n                _coerceMessagePromptTemplateLike(promptMessage, extra),\n            ]), []);\n        const flattenedPartialVariables = promptMessages.reduce((acc, promptMessage) => \n        // eslint-disable-next-line no-instanceof/no-instanceof\n        promptMessage instanceof ChatPromptTemplate\n            ? Object.assign(acc, promptMessage.partialVariables)\n            : acc, Object.create(null));\n        const inputVariables = new Set();\n        for (const promptMessage of flattenedMessages) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (promptMessage instanceof _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage)\n                continue;\n            for (const inputVariable of promptMessage.inputVariables) {\n                if (inputVariable in flattenedPartialVariables) {\n                    continue;\n                }\n                inputVariables.add(inputVariable);\n            }\n        }\n        return new this({\n            ...extra,\n            inputVariables: [...inputVariables],\n            promptMessages: flattenedMessages,\n            partialVariables: flattenedPartialVariables,\n            templateFormat: extra?.templateFormat,\n        });\n    }\n    /** @deprecated Renamed to .fromMessages */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromPromptMessages(promptMessages) {\n        return this.fromMessages(promptMessages);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/few_shot.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/few_shot.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FewShotChatMessagePromptTemplate: () => (/* binding */ FewShotChatMessagePromptTemplate),\n/* harmony export */   FewShotPromptTemplate: () => (/* binding */ FewShotPromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js\");\n/* harmony import */ var _chat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chat.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js\");\n\n\n\n\n/**\n * Prompt template that contains few-shot examples.\n * @augments BasePromptTemplate\n * @augments FewShotPromptTemplateInput\n * @example\n * ```typescript\n * const examplePrompt = PromptTemplate.fromTemplate(\n *   \"Input: {input}\\nOutput: {output}\",\n * );\n *\n * const exampleSelector = await SemanticSimilarityExampleSelector.fromExamples(\n *   [\n *     { input: \"happy\", output: \"sad\" },\n *     { input: \"tall\", output: \"short\" },\n *     { input: \"energetic\", output: \"lethargic\" },\n *     { input: \"sunny\", output: \"gloomy\" },\n *     { input: \"windy\", output: \"calm\" },\n *   ],\n *   new OpenAIEmbeddings(),\n *   HNSWLib,\n *   { k: 1 },\n * );\n *\n * const dynamicPrompt = new FewShotPromptTemplate({\n *   exampleSelector,\n *   examplePrompt,\n *   prefix: \"Give the antonym of every input\",\n *   suffix: \"Input: {adjective}\\nOutput:\",\n *   inputVariables: [\"adjective\"],\n * });\n *\n * // Format the dynamic prompt with the input 'rainy'\n * console.log(await dynamicPrompt.format({ adjective: \"rainy\" }));\n *\n * ```\n */\nclass FewShotPromptTemplate extends _string_js__WEBPACK_IMPORTED_MODULE_0__.BaseStringPromptTemplate {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"examples\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleSelector\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"examplePrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"suffix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"exampleSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        Object.defineProperty(this, \"prefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.assign(this, input);\n        if (this.examples !== undefined && this.exampleSelector !== undefined) {\n            throw new Error(\"Only one of 'examples' and 'example_selector' should be provided\");\n        }\n        if (this.examples === undefined && this.exampleSelector === undefined) {\n            throw new Error(\"One of 'examples' and 'example_selector' should be provided\");\n        }\n        if (this.validateTemplate) {\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.checkValidTemplate)(this.prefix + this.suffix, this.templateFormat, totalInputVariables);\n        }\n    }\n    _getPromptType() {\n        return \"few_shot\";\n    }\n    static lc_name() {\n        return \"FewShotPromptTemplate\";\n    }\n    async getExamples(inputVariables) {\n        if (this.examples !== undefined) {\n            return this.examples;\n        }\n        if (this.exampleSelector !== undefined) {\n            return this.exampleSelector.selectExamples(inputVariables);\n        }\n        throw new Error(\"One of 'examples' and 'example_selector' should be provided\");\n    }\n    async partial(values) {\n        const newInputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        const newPartialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        const promptDict = {\n            ...this,\n            inputVariables: newInputVariables,\n            partialVariables: newPartialVariables,\n        };\n        return new FewShotPromptTemplate(promptDict);\n    }\n    /**\n     * Formats the prompt with the given values.\n     * @param values The values to format the prompt with.\n     * @returns A promise that resolves to a string representing the formatted prompt.\n     */\n    async format(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        const examples = await this.getExamples(allValues);\n        const exampleStrings = await Promise.all(examples.map((example) => this.examplePrompt.format(example)));\n        const template = [this.prefix, ...exampleStrings, this.suffix].join(this.exampleSeparator);\n        return (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(template, this.templateFormat, allValues);\n    }\n    serialize() {\n        if (this.exampleSelector || !this.examples) {\n            throw new Error(\"Serializing an example selector is not currently supported\");\n        }\n        if (this.outputParser !== undefined) {\n            throw new Error(\"Serializing an output parser is not currently supported\");\n        }\n        return {\n            _type: this._getPromptType(),\n            input_variables: this.inputVariables,\n            example_prompt: this.examplePrompt.serialize(),\n            example_separator: this.exampleSeparator,\n            suffix: this.suffix,\n            prefix: this.prefix,\n            template_format: this.templateFormat,\n            examples: this.examples,\n        };\n    }\n    static async deserialize(data) {\n        const { example_prompt } = data;\n        if (!example_prompt) {\n            throw new Error(\"Missing example prompt\");\n        }\n        const examplePrompt = await _prompt_js__WEBPACK_IMPORTED_MODULE_2__.PromptTemplate.deserialize(example_prompt);\n        let examples;\n        if (Array.isArray(data.examples)) {\n            examples = data.examples;\n        }\n        else {\n            throw new Error(\"Invalid examples format. Only list or string are supported.\");\n        }\n        return new FewShotPromptTemplate({\n            inputVariables: data.input_variables,\n            examplePrompt,\n            examples,\n            exampleSeparator: data.example_separator,\n            prefix: data.prefix,\n            suffix: data.suffix,\n            templateFormat: data.template_format,\n        });\n    }\n}\n/**\n * Chat prompt template that contains few-shot examples.\n * @augments BasePromptTemplateInput\n * @augments FewShotChatMessagePromptTemplateInput\n */\nclass FewShotChatMessagePromptTemplate extends _chat_js__WEBPACK_IMPORTED_MODULE_3__.BaseChatPromptTemplate {\n    _getPromptType() {\n        return \"few_shot_chat\";\n    }\n    static lc_name() {\n        return \"FewShotChatMessagePromptTemplate\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"examples\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleSelector\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"examplePrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"suffix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"exampleSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        Object.defineProperty(this, \"prefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.examples = fields.examples;\n        this.examplePrompt = fields.examplePrompt;\n        this.exampleSeparator = fields.exampleSeparator ?? \"\\n\\n\";\n        this.exampleSelector = fields.exampleSelector;\n        this.prefix = fields.prefix ?? \"\";\n        this.suffix = fields.suffix ?? \"\";\n        this.templateFormat = fields.templateFormat ?? \"f-string\";\n        this.validateTemplate = fields.validateTemplate ?? true;\n        if (this.examples !== undefined && this.exampleSelector !== undefined) {\n            throw new Error(\"Only one of 'examples' and 'example_selector' should be provided\");\n        }\n        if (this.examples === undefined && this.exampleSelector === undefined) {\n            throw new Error(\"One of 'examples' and 'example_selector' should be provided\");\n        }\n        if (this.validateTemplate) {\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.checkValidTemplate)(this.prefix + this.suffix, this.templateFormat, totalInputVariables);\n        }\n    }\n    async getExamples(inputVariables) {\n        if (this.examples !== undefined) {\n            return this.examples;\n        }\n        if (this.exampleSelector !== undefined) {\n            return this.exampleSelector.selectExamples(inputVariables);\n        }\n        throw new Error(\"One of 'examples' and 'example_selector' should be provided\");\n    }\n    /**\n     * Formats the list of values and returns a list of formatted messages.\n     * @param values The values to format the prompt with.\n     * @returns A promise that resolves to a string representing the formatted prompt.\n     */\n    async formatMessages(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        let examples = await this.getExamples(allValues);\n        examples = examples.map((example) => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const result = {};\n            this.examplePrompt.inputVariables.forEach((inputVariable) => {\n                result[inputVariable] = example[inputVariable];\n            });\n            return result;\n        });\n        const messages = [];\n        for (const example of examples) {\n            const exampleMessages = await this.examplePrompt.formatMessages(example);\n            messages.push(...exampleMessages);\n        }\n        return messages;\n    }\n    /**\n     * Formats the prompt with the given values.\n     * @param values The values to format the prompt with.\n     * @returns A promise that resolves to a string representing the formatted prompt.\n     */\n    async format(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        const examples = await this.getExamples(allValues);\n        const exampleMessages = await Promise.all(examples.map((example) => this.examplePrompt.formatMessages(example)));\n        const exampleStrings = exampleMessages\n            .flat()\n            .map((message) => message.content);\n        const template = [this.prefix, ...exampleStrings, this.suffix].join(this.exampleSeparator);\n        return (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(template, this.templateFormat, allValues);\n    }\n    /**\n     * Partially formats the prompt with the given values.\n     * @param values The values to partially format the prompt with.\n     * @returns A promise that resolves to an instance of `FewShotChatMessagePromptTemplate` with the given values partially formatted.\n     */\n    async partial(values) {\n        const newInputVariables = this.inputVariables.filter((variable) => !(variable in values));\n        const newPartialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        const promptDict = {\n            ...this,\n            inputVariables: newInputVariables,\n            partialVariables: newPartialVariables,\n        };\n        return new FewShotChatMessagePromptTemplate(promptDict);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/few_shot.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/image.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/image.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImagePromptTemplate: () => (/* binding */ ImagePromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _prompt_values_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../prompt_values.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./template.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js\");\n\n\n\n/**\n * An image prompt template for a multimodal model.\n */\nclass ImagePromptTemplate extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BasePromptTemplate {\n    static lc_name() {\n        return \"ImagePromptTemplate\";\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompts\", \"image\"]\n        });\n        Object.defineProperty(this, \"template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.template = input.template;\n        this.templateFormat = input.templateFormat ?? this.templateFormat;\n        this.validateTemplate = input.validateTemplate ?? this.validateTemplate;\n        if (this.validateTemplate) {\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            (0,_template_js__WEBPACK_IMPORTED_MODULE_2__.checkValidTemplate)([\n                { type: \"image_url\", image_url: this.template },\n            ], this.templateFormat, totalInputVariables);\n        }\n    }\n    _getPromptType() {\n        return \"prompt\";\n    }\n    /**\n     * Partially applies values to the prompt template.\n     * @param values The values to be partially applied to the prompt template.\n     * @returns A new instance of ImagePromptTemplate with the partially applied values.\n     */\n    async partial(values) {\n        const newInputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        const newPartialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        const promptDict = {\n            ...this,\n            inputVariables: newInputVariables,\n            partialVariables: newPartialVariables,\n        };\n        return new ImagePromptTemplate(promptDict);\n    }\n    /**\n     * Formats the prompt template with the provided values.\n     * @param values The values to be used to format the prompt template.\n     * @returns A promise that resolves to a string which is the formatted prompt.\n     */\n    async format(values) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const formatted = {};\n        for (const [key, value] of Object.entries(this.template)) {\n            if (typeof value === \"string\") {\n                formatted[key] = value.replace(/{([^{}]*)}/g, (match, group) => {\n                    const replacement = values[group];\n                    return typeof replacement === \"string\" ||\n                        typeof replacement === \"number\"\n                        ? String(replacement)\n                        : match;\n                });\n            }\n            else {\n                formatted[key] = value;\n            }\n        }\n        const url = values.url || formatted.url;\n        const detail = values.detail || formatted.detail;\n        if (!url) {\n            throw new Error(\"Must provide either an image URL.\");\n        }\n        if (typeof url !== \"string\") {\n            throw new Error(\"url must be a string.\");\n        }\n        const output = { url };\n        if (detail) {\n            output.detail = detail;\n        }\n        return output;\n    }\n    /**\n     * Formats the prompt given the input values and returns a formatted\n     * prompt value.\n     * @param values The input values to format the prompt.\n     * @returns A Promise that resolves to a formatted prompt value.\n     */\n    async formatPromptValue(values) {\n        const formattedPrompt = await this.format(values);\n        return new _prompt_values_js__WEBPACK_IMPORTED_MODULE_0__.ImagePromptValue(formattedPrompt);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL2ltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUQ7QUFDUDtBQUNHO0FBQ25EO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQyx3REFBa0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0VBQWtCO0FBQzlCLGtCQUFrQiw2Q0FBNkM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxLQUFLLElBQUk7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwrREFBZ0I7QUFDbkM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL2ltYWdlLmpzPzNmOTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW1hZ2VQcm9tcHRWYWx1ZSB9IGZyb20gXCIuLi9wcm9tcHRfdmFsdWVzLmpzXCI7XG5pbXBvcnQgeyBCYXNlUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuaW1wb3J0IHsgY2hlY2tWYWxpZFRlbXBsYXRlIH0gZnJvbSBcIi4vdGVtcGxhdGUuanNcIjtcbi8qKlxuICogQW4gaW1hZ2UgcHJvbXB0IHRlbXBsYXRlIGZvciBhIG11bHRpbW9kYWwgbW9kZWwuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbWFnZVByb21wdFRlbXBsYXRlIGV4dGVuZHMgQmFzZVByb21wdFRlbXBsYXRlIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiSW1hZ2VQcm9tcHRUZW1wbGF0ZVwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICBzdXBlcihpbnB1dCk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluX2NvcmVcIiwgXCJwcm9tcHRzXCIsIFwiaW1hZ2VcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRlbXBsYXRlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRlbXBsYXRlRm9ybWF0XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcImYtc3RyaW5nXCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInZhbGlkYXRlVGVtcGxhdGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudGVtcGxhdGUgPSBpbnB1dC50ZW1wbGF0ZTtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZUZvcm1hdCA9IGlucHV0LnRlbXBsYXRlRm9ybWF0ID8/IHRoaXMudGVtcGxhdGVGb3JtYXQ7XG4gICAgICAgIHRoaXMudmFsaWRhdGVUZW1wbGF0ZSA9IGlucHV0LnZhbGlkYXRlVGVtcGxhdGUgPz8gdGhpcy52YWxpZGF0ZVRlbXBsYXRlO1xuICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVRlbXBsYXRlKSB7XG4gICAgICAgICAgICBsZXQgdG90YWxJbnB1dFZhcmlhYmxlcyA9IHRoaXMuaW5wdXRWYXJpYWJsZXM7XG4gICAgICAgICAgICBpZiAodGhpcy5wYXJ0aWFsVmFyaWFibGVzKSB7XG4gICAgICAgICAgICAgICAgdG90YWxJbnB1dFZhcmlhYmxlcyA9IHRvdGFsSW5wdXRWYXJpYWJsZXMuY29uY2F0KE9iamVjdC5rZXlzKHRoaXMucGFydGlhbFZhcmlhYmxlcykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2hlY2tWYWxpZFRlbXBsYXRlKFtcbiAgICAgICAgICAgICAgICB7IHR5cGU6IFwiaW1hZ2VfdXJsXCIsIGltYWdlX3VybDogdGhpcy50ZW1wbGF0ZSB9LFxuICAgICAgICAgICAgXSwgdGhpcy50ZW1wbGF0ZUZvcm1hdCwgdG90YWxJbnB1dFZhcmlhYmxlcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX2dldFByb21wdFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcInByb21wdFwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJ0aWFsbHkgYXBwbGllcyB2YWx1ZXMgdG8gdGhlIHByb21wdCB0ZW1wbGF0ZS5cbiAgICAgKiBAcGFyYW0gdmFsdWVzIFRoZSB2YWx1ZXMgdG8gYmUgcGFydGlhbGx5IGFwcGxpZWQgdG8gdGhlIHByb21wdCB0ZW1wbGF0ZS5cbiAgICAgKiBAcmV0dXJucyBBIG5ldyBpbnN0YW5jZSBvZiBJbWFnZVByb21wdFRlbXBsYXRlIHdpdGggdGhlIHBhcnRpYWxseSBhcHBsaWVkIHZhbHVlcy5cbiAgICAgKi9cbiAgICBhc3luYyBwYXJ0aWFsKHZhbHVlcykge1xuICAgICAgICBjb25zdCBuZXdJbnB1dFZhcmlhYmxlcyA9IHRoaXMuaW5wdXRWYXJpYWJsZXMuZmlsdGVyKChpdikgPT4gIShpdiBpbiB2YWx1ZXMpKTtcbiAgICAgICAgY29uc3QgbmV3UGFydGlhbFZhcmlhYmxlcyA9IHtcbiAgICAgICAgICAgIC4uLih0aGlzLnBhcnRpYWxWYXJpYWJsZXMgPz8ge30pLFxuICAgICAgICAgICAgLi4udmFsdWVzLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBwcm9tcHREaWN0ID0ge1xuICAgICAgICAgICAgLi4udGhpcyxcbiAgICAgICAgICAgIGlucHV0VmFyaWFibGVzOiBuZXdJbnB1dFZhcmlhYmxlcyxcbiAgICAgICAgICAgIHBhcnRpYWxWYXJpYWJsZXM6IG5ld1BhcnRpYWxWYXJpYWJsZXMsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBuZXcgSW1hZ2VQcm9tcHRUZW1wbGF0ZShwcm9tcHREaWN0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRm9ybWF0cyB0aGUgcHJvbXB0IHRlbXBsYXRlIHdpdGggdGhlIHByb3ZpZGVkIHZhbHVlcy5cbiAgICAgKiBAcGFyYW0gdmFsdWVzIFRoZSB2YWx1ZXMgdG8gYmUgdXNlZCB0byBmb3JtYXQgdGhlIHByb21wdCB0ZW1wbGF0ZS5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhIHN0cmluZyB3aGljaCBpcyB0aGUgZm9ybWF0dGVkIHByb21wdC5cbiAgICAgKi9cbiAgICBhc3luYyBmb3JtYXQodmFsdWVzKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZCA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh0aGlzLnRlbXBsYXRlKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFtrZXldID0gdmFsdWUucmVwbGFjZSgveyhbXnt9XSopfS9nLCAobWF0Y2gsIGdyb3VwKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlcGxhY2VtZW50ID0gdmFsdWVzW2dyb3VwXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiByZXBsYWNlbWVudCA9PT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHJlcGxhY2VtZW50ID09PSBcIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFN0cmluZyhyZXBsYWNlbWVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogbWF0Y2g7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVybCA9IHZhbHVlcy51cmwgfHwgZm9ybWF0dGVkLnVybDtcbiAgICAgICAgY29uc3QgZGV0YWlsID0gdmFsdWVzLmRldGFpbCB8fCBmb3JtYXR0ZWQuZGV0YWlsO1xuICAgICAgICBpZiAoIXVybCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBwcm92aWRlIGVpdGhlciBhbiBpbWFnZSBVUkwuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1cmwgbXVzdCBiZSBhIHN0cmluZy5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3V0cHV0ID0geyB1cmwgfTtcbiAgICAgICAgaWYgKGRldGFpbCkge1xuICAgICAgICAgICAgb3V0cHV0LmRldGFpbCA9IGRldGFpbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb3JtYXRzIHRoZSBwcm9tcHQgZ2l2ZW4gdGhlIGlucHV0IHZhbHVlcyBhbmQgcmV0dXJucyBhIGZvcm1hdHRlZFxuICAgICAqIHByb21wdCB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdmFsdWVzIFRoZSBpbnB1dCB2YWx1ZXMgdG8gZm9ybWF0IHRoZSBwcm9tcHQuXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYSBmb3JtYXR0ZWQgcHJvbXB0IHZhbHVlLlxuICAgICAqL1xuICAgIGFzeW5jIGZvcm1hdFByb21wdFZhbHVlKHZhbHVlcykge1xuICAgICAgICBjb25zdCBmb3JtYXR0ZWRQcm9tcHQgPSBhd2FpdCB0aGlzLmZvcm1hdCh2YWx1ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IEltYWdlUHJvbXB0VmFsdWUoZm9ybWF0dGVkUHJvbXB0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/image.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIMessagePromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.AIMessagePromptTemplate),\n/* harmony export */   BaseChatPromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.BaseChatPromptTemplate),\n/* harmony export */   BaseMessagePromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.BaseMessagePromptTemplate),\n/* harmony export */   BaseMessageStringPromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.BaseMessageStringPromptTemplate),\n/* harmony export */   BasePromptTemplate: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.BasePromptTemplate),\n/* harmony export */   BaseStringPromptTemplate: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_6__.BaseStringPromptTemplate),\n/* harmony export */   ChatMessagePromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.ChatMessagePromptTemplate),\n/* harmony export */   ChatPromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.ChatPromptTemplate),\n/* harmony export */   DEFAULT_FORMATTER_MAPPING: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_FORMATTER_MAPPING),\n/* harmony export */   DEFAULT_PARSER_MAPPING: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_PARSER_MAPPING),\n/* harmony export */   FewShotChatMessagePromptTemplate: () => (/* reexport safe */ _few_shot_js__WEBPACK_IMPORTED_MODULE_2__.FewShotChatMessagePromptTemplate),\n/* harmony export */   FewShotPromptTemplate: () => (/* reexport safe */ _few_shot_js__WEBPACK_IMPORTED_MODULE_2__.FewShotPromptTemplate),\n/* harmony export */   HumanMessagePromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.HumanMessagePromptTemplate),\n/* harmony export */   ImagePromptTemplate: () => (/* reexport safe */ _image_js__WEBPACK_IMPORTED_MODULE_8__.ImagePromptTemplate),\n/* harmony export */   MessagesPlaceholder: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.MessagesPlaceholder),\n/* harmony export */   PipelinePromptTemplate: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_3__.PipelinePromptTemplate),\n/* harmony export */   PromptTemplate: () => (/* reexport safe */ _prompt_js__WEBPACK_IMPORTED_MODULE_4__.PromptTemplate),\n/* harmony export */   StructuredPrompt: () => (/* reexport safe */ _structured_js__WEBPACK_IMPORTED_MODULE_9__.StructuredPrompt),\n/* harmony export */   SystemMessagePromptTemplate: () => (/* reexport safe */ _chat_js__WEBPACK_IMPORTED_MODULE_1__.SystemMessagePromptTemplate),\n/* harmony export */   checkValidTemplate: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.checkValidTemplate),\n/* harmony export */   interpolateFString: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.interpolateFString),\n/* harmony export */   interpolateMustache: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.interpolateMustache),\n/* harmony export */   parseFString: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.parseFString),\n/* harmony export */   parseMustache: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.parseMustache),\n/* harmony export */   parseTemplate: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.parseTemplate),\n/* harmony export */   renderTemplate: () => (/* reexport safe */ _template_js__WEBPACK_IMPORTED_MODULE_7__.renderTemplate)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js\");\n/* harmony import */ var _chat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js\");\n/* harmony import */ var _few_shot_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./few_shot.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/few_shot.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/pipeline.js\");\n/* harmony import */ var _prompt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prompt.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js\");\n/* harmony import */ var _serde_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./serde.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/serde.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./template.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js\");\n/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./image.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/image.js\");\n/* harmony import */ var _structured_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./structured.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/structured.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUNBO0FBQ0k7QUFDQTtBQUNGO0FBQ0Q7QUFDQztBQUNFO0FBQ0g7QUFDSyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL2luZGV4LmpzP2VmMDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vYmFzZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY2hhdC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZmV3X3Nob3QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wcm9tcHQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NlcmRlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdHJpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3RlbXBsYXRlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9pbWFnZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3RydWN0dXJlZC5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/pipeline.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/pipeline.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PipelinePromptTemplate: () => (/* binding */ PipelinePromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js\");\n/* harmony import */ var _chat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js\");\n\n\n/**\n * Class that handles a sequence of prompts, each of which may require\n * different input variables. Includes methods for formatting these\n * prompts, extracting required input values, and handling partial\n * prompts.\n * @example\n * ```typescript\n * const composedPrompt = new PipelinePromptTemplate({\n *   pipelinePrompts: [\n *     {\n *       name: \"introduction\",\n *       prompt: PromptTemplate.fromTemplate(`You are impersonating {person}.`),\n *     },\n *     {\n *       name: \"example\",\n *       prompt: PromptTemplate.fromTemplate(\n *         `Here's an example of an interaction:\n * Q: {example_q}\n * A: {example_a}`,\n *       ),\n *     },\n *     {\n *       name: \"start\",\n *       prompt: PromptTemplate.fromTemplate(\n *         `Now, do this for real!\n * Q: {input}\n * A:`,\n *       ),\n *     },\n *   ],\n *   finalPrompt: PromptTemplate.fromTemplate(\n *     `{introduction}\n * {example}\n * {start}`,\n *   ),\n * });\n *\n * const formattedPrompt = await composedPrompt.format({\n *   person: \"Elon Musk\",\n *   example_q: `What's your favorite car?`,\n *   example_a: \"Tesla\",\n *   input: `What's your favorite social media site?`,\n * });\n * ```\n */\nclass PipelinePromptTemplate extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BasePromptTemplate {\n    static lc_name() {\n        return \"PipelinePromptTemplate\";\n    }\n    constructor(input) {\n        super({ ...input, inputVariables: [] });\n        Object.defineProperty(this, \"pipelinePrompts\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"finalPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pipelinePrompts = input.pipelinePrompts;\n        this.finalPrompt = input.finalPrompt;\n        this.inputVariables = this.computeInputValues();\n    }\n    /**\n     * Computes the input values required by the pipeline prompts.\n     * @returns Array of input values required by the pipeline prompts.\n     */\n    computeInputValues() {\n        const intermediateValues = this.pipelinePrompts.map((pipelinePrompt) => pipelinePrompt.name);\n        const inputValues = this.pipelinePrompts\n            .map((pipelinePrompt) => pipelinePrompt.prompt.inputVariables.filter((inputValue) => !intermediateValues.includes(inputValue)))\n            .flat();\n        return [...new Set(inputValues)];\n    }\n    static extractRequiredInputValues(allValues, requiredValueNames) {\n        return requiredValueNames.reduce((requiredValues, valueName) => {\n            // eslint-disable-next-line no-param-reassign\n            requiredValues[valueName] = allValues[valueName];\n            return requiredValues;\n        }, {});\n    }\n    /**\n     * Formats the pipeline prompts based on the provided input values.\n     * @param values Input values to format the pipeline prompts.\n     * @returns Promise that resolves with the formatted input values.\n     */\n    async formatPipelinePrompts(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        for (const { name: pipelinePromptName, prompt: pipelinePrompt } of this\n            .pipelinePrompts) {\n            const pipelinePromptInputValues = PipelinePromptTemplate.extractRequiredInputValues(allValues, pipelinePrompt.inputVariables);\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (pipelinePrompt instanceof _chat_js__WEBPACK_IMPORTED_MODULE_1__.ChatPromptTemplate) {\n                allValues[pipelinePromptName] = await pipelinePrompt.formatMessages(pipelinePromptInputValues);\n            }\n            else {\n                allValues[pipelinePromptName] = await pipelinePrompt.format(pipelinePromptInputValues);\n            }\n        }\n        return PipelinePromptTemplate.extractRequiredInputValues(allValues, this.finalPrompt.inputVariables);\n    }\n    /**\n     * Formats the final prompt value based on the provided input values.\n     * @param values Input values to format the final prompt value.\n     * @returns Promise that resolves with the formatted final prompt value.\n     */\n    async formatPromptValue(values) {\n        return this.finalPrompt.formatPromptValue(await this.formatPipelinePrompts(values));\n    }\n    async format(values) {\n        return this.finalPrompt.format(await this.formatPipelinePrompts(values));\n    }\n    /**\n     * Handles partial prompts, which are prompts that have been partially\n     * filled with input values.\n     * @param values Partial input values.\n     * @returns Promise that resolves with a new PipelinePromptTemplate instance with updated input variables.\n     */\n    async partial(values) {\n        const promptDict = { ...this };\n        promptDict.inputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        promptDict.partialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        return new PipelinePromptTemplate(promptDict);\n    }\n    serialize() {\n        throw new Error(\"Not implemented.\");\n    }\n    _getPromptType() {\n        return \"pipeline\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/pipeline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PromptTemplate: () => (/* binding */ PromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js\");\n/* harmony import */ var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./template.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js\");\n// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\n\n\n/**\n * Schema to represent a basic prompt for an LLM.\n * @augments BasePromptTemplate\n * @augments PromptTemplateInput\n *\n * @example\n * ```ts\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * const prompt = new PromptTemplate({\n *   inputVariables: [\"foo\"],\n *   template: \"Say {foo}\",\n * });\n * ```\n */\nclass PromptTemplate extends _string_js__WEBPACK_IMPORTED_MODULE_0__.BaseStringPromptTemplate {\n    static lc_name() {\n        return \"PromptTemplate\";\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        // If input is mustache and validateTemplate is not defined, set it to false\n        if (input.templateFormat === \"mustache\" &&\n            input.validateTemplate === undefined) {\n            this.validateTemplate = false;\n        }\n        Object.assign(this, input);\n        if (this.validateTemplate) {\n            if (this.templateFormat === \"mustache\") {\n                throw new Error(\"Mustache templates cannot be validated.\");\n            }\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.checkValidTemplate)(this.template, this.templateFormat, totalInputVariables);\n        }\n    }\n    _getPromptType() {\n        return \"prompt\";\n    }\n    /**\n     * Formats the prompt template with the provided values.\n     * @param values The values to be used to format the prompt template.\n     * @returns A promise that resolves to a string which is the formatted prompt.\n     */\n    async format(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        return (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(this.template, this.templateFormat, allValues);\n    }\n    /**\n     * Take examples in list format with prefix and suffix to create a prompt.\n     *\n     * Intended to be used a a way to dynamically create a prompt from examples.\n     *\n     * @param examples - List of examples to use in the prompt.\n     * @param suffix - String to go after the list of examples. Should generally set up the user's input.\n     * @param inputVariables - A list of variable names the final prompt template will expect\n     * @param exampleSeparator - The separator to use in between examples\n     * @param prefix - String that should go before any examples. Generally includes examples.\n     *\n     * @returns The final prompt template generated.\n     */\n    static fromExamples(examples, suffix, inputVariables, exampleSeparator = \"\\n\\n\", prefix = \"\") {\n        const template = [prefix, ...examples, suffix].join(exampleSeparator);\n        return new PromptTemplate({\n            inputVariables,\n            template,\n        });\n    }\n    static fromTemplate(template, options) {\n        const { templateFormat = \"f-string\", ...rest } = options ?? {};\n        const names = new Set();\n        (0,_template_js__WEBPACK_IMPORTED_MODULE_1__.parseTemplate)(template, templateFormat).forEach((node) => {\n            if (node.type === \"variable\") {\n                names.add(node.name);\n            }\n        });\n        return new PromptTemplate({\n            // Rely on extracted types\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            inputVariables: [...names],\n            templateFormat,\n            template,\n            ...rest,\n        });\n    }\n    /**\n     * Partially applies values to the prompt template.\n     * @param values The values to be partially applied to the prompt template.\n     * @returns A new instance of PromptTemplate with the partially applied values.\n     */\n    async partial(values) {\n        const newInputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        const newPartialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        const promptDict = {\n            ...this,\n            inputVariables: newInputVariables,\n            partialVariables: newPartialVariables,\n        };\n        return new PromptTemplate(promptDict);\n    }\n    serialize() {\n        if (this.outputParser !== undefined) {\n            throw new Error(\"Cannot serialize a prompt template with an output parser\");\n        }\n        return {\n            _type: this._getPromptType(),\n            input_variables: this.inputVariables,\n            template: this.template,\n            template_format: this.templateFormat,\n        };\n    }\n    static async deserialize(data) {\n        if (!data.template) {\n            throw new Error(\"Prompt template must have a template\");\n        }\n        const res = new PromptTemplate({\n            inputVariables: data.input_variables,\n            template: data.template,\n            templateFormat: data.template_format,\n        });\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/prompt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/serde.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/serde.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL3NlcmRlLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL3NlcmRlLmpzP2I0YTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/serde.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseStringPromptTemplate: () => (/* binding */ BaseStringPromptTemplate)\n/* harmony export */ });\n/* harmony import */ var _prompt_values_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../prompt_values.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompt_values.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/base.js\");\n// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\n\n\n/**\n * Base class for string prompt templates. It extends the\n * BasePromptTemplate class and overrides the formatPromptValue method to\n * return a StringPromptValue.\n */\nclass BaseStringPromptTemplate extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BasePromptTemplate {\n    /**\n     * Formats the prompt given the input values and returns a formatted\n     * prompt value.\n     * @param values The input values to format the prompt.\n     * @returns A Promise that resolves to a formatted prompt value.\n     */\n    async formatPromptValue(values) {\n        const formattedPrompt = await this.format(values);\n        return new _prompt_values_js__WEBPACK_IMPORTED_MODULE_0__.StringPromptValue(formattedPrompt);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ3lEO0FBQ1Y7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHVDQUF1Qyx3REFBa0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBaUI7QUFDcEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL3N0cmluZy5qcz9kZjg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmF1bHQgZ2VuZXJpYyBcImFueVwiIHZhbHVlcyBhcmUgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LlxuLy8gUmVwbGFjZSB3aXRoIFwic3RyaW5nXCIgd2hlbiB3ZSBhcmUgY29tZm9ydGFibGUgd2l0aCBhIGJyZWFraW5nIGNoYW5nZS5cbmltcG9ydCB7IFN0cmluZ1Byb21wdFZhbHVlLCB9IGZyb20gXCIuLi9wcm9tcHRfdmFsdWVzLmpzXCI7XG5pbXBvcnQgeyBCYXNlUHJvbXB0VGVtcGxhdGUgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIHN0cmluZyBwcm9tcHQgdGVtcGxhdGVzLiBJdCBleHRlbmRzIHRoZVxuICogQmFzZVByb21wdFRlbXBsYXRlIGNsYXNzIGFuZCBvdmVycmlkZXMgdGhlIGZvcm1hdFByb21wdFZhbHVlIG1ldGhvZCB0b1xuICogcmV0dXJuIGEgU3RyaW5nUHJvbXB0VmFsdWUuXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlU3RyaW5nUHJvbXB0VGVtcGxhdGUgZXh0ZW5kcyBCYXNlUHJvbXB0VGVtcGxhdGUge1xuICAgIC8qKlxuICAgICAqIEZvcm1hdHMgdGhlIHByb21wdCBnaXZlbiB0aGUgaW5wdXQgdmFsdWVzIGFuZCByZXR1cm5zIGEgZm9ybWF0dGVkXG4gICAgICogcHJvbXB0IHZhbHVlLlxuICAgICAqIEBwYXJhbSB2YWx1ZXMgVGhlIGlucHV0IHZhbHVlcyB0byBmb3JtYXQgdGhlIHByb21wdC5cbiAgICAgKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhIGZvcm1hdHRlZCBwcm9tcHQgdmFsdWUuXG4gICAgICovXG4gICAgYXN5bmMgZm9ybWF0UHJvbXB0VmFsdWUodmFsdWVzKSB7XG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZFByb21wdCA9IGF3YWl0IHRoaXMuZm9ybWF0KHZhbHVlcyk7XG4gICAgICAgIHJldHVybiBuZXcgU3RyaW5nUHJvbXB0VmFsdWUoZm9ybWF0dGVkUHJvbXB0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/structured.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/structured.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredPrompt: () => (/* binding */ StructuredPrompt)\n/* harmony export */ });\n/* harmony import */ var _chat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/chat.js\");\n\nfunction isWithStructuredOutput(x\n// eslint-disable-next-line @typescript-eslint/ban-types\n) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        \"withStructuredOutput\" in x &&\n        typeof x.withStructuredOutput === \"function\");\n}\nfunction isRunnableBinding(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        \"lc_id\" in x &&\n        Array.isArray(x.lc_id) &&\n        x.lc_id.join(\"/\") === \"langchain_core/runnables/RunnableBinding\");\n}\nclass StructuredPrompt extends _chat_js__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate {\n    get lc_aliases() {\n        return {\n            ...super.lc_aliases,\n            schema: \"schema_\",\n        };\n    }\n    constructor(input) {\n        super(input);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompts\", \"structured\"]\n        });\n        this.schema = input.schema;\n    }\n    pipe(coerceable) {\n        if (isWithStructuredOutput(coerceable)) {\n            return super.pipe(coerceable.withStructuredOutput(this.schema));\n        }\n        if (isRunnableBinding(coerceable) &&\n            isWithStructuredOutput(coerceable.bound)) {\n            return super.pipe(coerceable.bound\n                .withStructuredOutput(this.schema)\n                .bind(coerceable.kwargs ?? {})\n                .withConfig(coerceable.config));\n        }\n        throw new Error(`Structured prompts need to be piped to a language model that supports the \"withStructuredOutput()\" method.`);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromMessagesAndSchema(promptMessages, schema\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return StructuredPrompt.fromMessages(promptMessages, { schema });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9wcm9tcHRzL3N0cnVjdHVyZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLHdEQUFrQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxRQUFRO0FBQ3ZFO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvcHJvbXB0cy9zdHJ1Y3R1cmVkLmpzPzljMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhdFByb21wdFRlbXBsYXRlLCB9IGZyb20gXCIuL2NoYXQuanNcIjtcbmZ1bmN0aW9uIGlzV2l0aFN0cnVjdHVyZWRPdXRwdXQoeFxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbikge1xuICAgIHJldHVybiAodHlwZW9mIHggPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgeCAhPSBudWxsICYmXG4gICAgICAgIFwid2l0aFN0cnVjdHVyZWRPdXRwdXRcIiBpbiB4ICYmXG4gICAgICAgIHR5cGVvZiB4LndpdGhTdHJ1Y3R1cmVkT3V0cHV0ID09PSBcImZ1bmN0aW9uXCIpO1xufVxuZnVuY3Rpb24gaXNSdW5uYWJsZUJpbmRpbmcoeCkge1xuICAgIHJldHVybiAodHlwZW9mIHggPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgeCAhPSBudWxsICYmXG4gICAgICAgIFwibGNfaWRcIiBpbiB4ICYmXG4gICAgICAgIEFycmF5LmlzQXJyYXkoeC5sY19pZCkgJiZcbiAgICAgICAgeC5sY19pZC5qb2luKFwiL1wiKSA9PT0gXCJsYW5nY2hhaW5fY29yZS9ydW5uYWJsZXMvUnVubmFibGVCaW5kaW5nXCIpO1xufVxuZXhwb3J0IGNsYXNzIFN0cnVjdHVyZWRQcm9tcHQgZXh0ZW5kcyBDaGF0UHJvbXB0VGVtcGxhdGUge1xuICAgIGdldCBsY19hbGlhc2VzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3VwZXIubGNfYWxpYXNlcyxcbiAgICAgICAgICAgIHNjaGVtYTogXCJzY2hlbWFfXCIsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgICAgIHN1cGVyKGlucHV0KTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2NoZW1hXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluX2NvcmVcIiwgXCJwcm9tcHRzXCIsIFwic3RydWN0dXJlZFwiXVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBpbnB1dC5zY2hlbWE7XG4gICAgfVxuICAgIHBpcGUoY29lcmNlYWJsZSkge1xuICAgICAgICBpZiAoaXNXaXRoU3RydWN0dXJlZE91dHB1dChjb2VyY2VhYmxlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHN1cGVyLnBpcGUoY29lcmNlYWJsZS53aXRoU3RydWN0dXJlZE91dHB1dCh0aGlzLnNjaGVtYSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1J1bm5hYmxlQmluZGluZyhjb2VyY2VhYmxlKSAmJlxuICAgICAgICAgICAgaXNXaXRoU3RydWN0dXJlZE91dHB1dChjb2VyY2VhYmxlLmJvdW5kKSkge1xuICAgICAgICAgICAgcmV0dXJuIHN1cGVyLnBpcGUoY29lcmNlYWJsZS5ib3VuZFxuICAgICAgICAgICAgICAgIC53aXRoU3RydWN0dXJlZE91dHB1dCh0aGlzLnNjaGVtYSlcbiAgICAgICAgICAgICAgICAuYmluZChjb2VyY2VhYmxlLmt3YXJncyA/PyB7fSlcbiAgICAgICAgICAgICAgICAud2l0aENvbmZpZyhjb2VyY2VhYmxlLmNvbmZpZykpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgU3RydWN0dXJlZCBwcm9tcHRzIG5lZWQgdG8gYmUgcGlwZWQgdG8gYSBsYW5ndWFnZSBtb2RlbCB0aGF0IHN1cHBvcnRzIHRoZSBcIndpdGhTdHJ1Y3R1cmVkT3V0cHV0KClcIiBtZXRob2QuYCk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgc3RhdGljIGZyb21NZXNzYWdlc0FuZFNjaGVtYShwcm9tcHRNZXNzYWdlcywgc2NoZW1hXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICApIHtcbiAgICAgICAgcmV0dXJuIFN0cnVjdHVyZWRQcm9tcHQuZnJvbU1lc3NhZ2VzKHByb21wdE1lc3NhZ2VzLCB7IHNjaGVtYSB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/structured.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_FORMATTER_MAPPING: () => (/* binding */ DEFAULT_FORMATTER_MAPPING),\n/* harmony export */   DEFAULT_PARSER_MAPPING: () => (/* binding */ DEFAULT_PARSER_MAPPING),\n/* harmony export */   checkValidTemplate: () => (/* binding */ checkValidTemplate),\n/* harmony export */   interpolateFString: () => (/* binding */ interpolateFString),\n/* harmony export */   interpolateMustache: () => (/* binding */ interpolateMustache),\n/* harmony export */   parseFString: () => (/* binding */ parseFString),\n/* harmony export */   parseMustache: () => (/* binding */ parseMustache),\n/* harmony export */   parseTemplate: () => (/* binding */ parseTemplate),\n/* harmony export */   renderTemplate: () => (/* binding */ renderTemplate)\n/* harmony export */ });\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mustache */ \"(rsc)/./node_modules/mustache/mustache.mjs\");\n\nconst parseFString = (template) => {\n    // Core logic replicated from internals of pythons built in Formatter class.\n    // https://github.com/python/cpython/blob/135ec7cefbaffd516b77362ad2b2ad1025af462e/Objects/stringlib/unicode_format.h#L700-L706\n    const chars = template.split(\"\");\n    const nodes = [];\n    const nextBracket = (bracket, start) => {\n        for (let i = start; i < chars.length; i += 1) {\n            if (bracket.includes(chars[i])) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    let i = 0;\n    while (i < chars.length) {\n        if (chars[i] === \"{\" && i + 1 < chars.length && chars[i + 1] === \"{\") {\n            nodes.push({ type: \"literal\", text: \"{\" });\n            i += 2;\n        }\n        else if (chars[i] === \"}\" &&\n            i + 1 < chars.length &&\n            chars[i + 1] === \"}\") {\n            nodes.push({ type: \"literal\", text: \"}\" });\n            i += 2;\n        }\n        else if (chars[i] === \"{\") {\n            const j = nextBracket(\"}\", i);\n            if (j < 0) {\n                throw new Error(\"Unclosed '{' in template.\");\n            }\n            nodes.push({\n                type: \"variable\",\n                name: chars.slice(i + 1, j).join(\"\"),\n            });\n            i = j + 1;\n        }\n        else if (chars[i] === \"}\") {\n            throw new Error(\"Single '}' in template.\");\n        }\n        else {\n            const next = nextBracket(\"{}\", i);\n            const text = (next < 0 ? chars.slice(i) : chars.slice(i, next)).join(\"\");\n            nodes.push({ type: \"literal\", text });\n            i = next < 0 ? chars.length : next;\n        }\n    }\n    return nodes;\n};\n/**\n * Convert the result of mustache.parse into an array of ParsedTemplateNode,\n * to make it compatible with other LangChain string parsing template formats.\n *\n * @param {mustache.TemplateSpans} template The result of parsing a mustache template with the mustache.js library.\n * @returns {ParsedTemplateNode[]}\n */\nconst mustacheTemplateToNodes = (template) => template.map((temp) => {\n    if (temp[0] === \"name\") {\n        const name = temp[1].includes(\".\") ? temp[1].split(\".\")[0] : temp[1];\n        return { type: \"variable\", name };\n    }\n    else if (temp[0] === \"#\") {\n        return { type: \"variable\", name: temp[1] };\n    }\n    else {\n        return { type: \"literal\", text: temp[1] };\n    }\n});\nconst parseMustache = (template) => {\n    const parsed = mustache__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(template);\n    return mustacheTemplateToNodes(parsed);\n};\nconst interpolateFString = (template, values) => parseFString(template).reduce((res, node) => {\n    if (node.type === \"variable\") {\n        if (node.name in values) {\n            return res + values[node.name];\n        }\n        throw new Error(`(f-string) Missing value for input ${node.name}`);\n    }\n    return res + node.text;\n}, \"\");\nconst interpolateMustache = (template, values) => mustache__WEBPACK_IMPORTED_MODULE_0__[\"default\"].render(template, values);\nconst DEFAULT_FORMATTER_MAPPING = {\n    \"f-string\": interpolateFString,\n    mustache: interpolateMustache,\n};\nconst DEFAULT_PARSER_MAPPING = {\n    \"f-string\": parseFString,\n    mustache: parseMustache,\n};\nconst renderTemplate = (template, templateFormat, inputValues) => DEFAULT_FORMATTER_MAPPING[templateFormat](template, inputValues);\nconst parseTemplate = (template, templateFormat) => DEFAULT_PARSER_MAPPING[templateFormat](template);\nconst checkValidTemplate = (template, templateFormat, inputVariables) => {\n    if (!(templateFormat in DEFAULT_FORMATTER_MAPPING)) {\n        const validFormats = Object.keys(DEFAULT_FORMATTER_MAPPING);\n        throw new Error(`Invalid template format. Got \\`${templateFormat}\\`;\n                         should be one of ${validFormats}`);\n    }\n    try {\n        const dummyInputs = inputVariables.reduce((acc, v) => {\n            acc[v] = \"foo\";\n            return acc;\n        }, {});\n        if (Array.isArray(template)) {\n            template.forEach((message) => {\n                if (message.type === \"text\") {\n                    renderTemplate(message.text, templateFormat, dummyInputs);\n                }\n                else if (message.type === \"image_url\") {\n                    if (typeof message.image_url === \"string\") {\n                        renderTemplate(message.image_url, templateFormat, dummyInputs);\n                    }\n                    else {\n                        const imageUrl = message.image_url.url;\n                        renderTemplate(imageUrl, templateFormat, dummyInputs);\n                    }\n                }\n                else {\n                    throw new Error(`Invalid message template received. ${JSON.stringify(message, null, 2)}`);\n                }\n            });\n        }\n        else {\n            renderTemplate(template, templateFormat, dummyInputs);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (e) {\n        throw new Error(`Invalid prompt schema: ${e.message}`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/template.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/retrievers/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/retrievers/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseRetriever: () => (/* binding */ BaseRetriever)\n/* harmony export */ });\n/* harmony import */ var _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../callbacks/manager.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js\");\n/* harmony import */ var _runnables_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runnables/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _runnables_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../runnables/config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n\n\n\n/**\n * Abstract base class for a Document retrieval system. A retrieval system\n * is defined as something that can take string queries and return the\n * most 'relevant' Documents from some source.\n */\nclass BaseRetriever extends _runnables_base_js__WEBPACK_IMPORTED_MODULE_1__.Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callbacks = fields?.callbacks;\n        this.tags = fields?.tags ?? [];\n        this.metadata = fields?.metadata ?? {};\n        this.verbose = fields?.verbose ?? false;\n    }\n    /**\n     * TODO: This should be an abstract method, but we'd like to avoid breaking\n     * changes to people currently using subclassed custom retrievers.\n     * Change it on next major release.\n     */\n    _getRelevantDocuments(_query, _callbacks) {\n        throw new Error(\"Not implemented!\");\n    }\n    async invoke(input, options) {\n        return this.getRelevantDocuments(input, (0,_runnables_config_js__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(options));\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Main method used to retrieve relevant documents. It takes a query\n     * string and an optional configuration object, and returns a promise that\n     * resolves to an array of `Document` objects. This method handles the\n     * retrieval process, including starting and ending callbacks, and error\n     * handling.\n     * @param query The query string to retrieve relevant documents for.\n     * @param config Optional configuration object for the retrieval process.\n     * @returns A promise that resolves to an array of `Document` objects.\n     */\n    async getRelevantDocuments(query, config) {\n        const parsedConfig = (0,_runnables_config_js__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)((0,_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.parseCallbackConfigArg)(config));\n        const callbackManager_ = await _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManager.configure(parsedConfig.callbacks, this.callbacks, parsedConfig.tags, this.tags, parsedConfig.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleRetrieverStart(this.toJSON(), query, parsedConfig.runId, undefined, undefined, undefined, parsedConfig.runName);\n        try {\n            const results = await this._getRelevantDocuments(query, runManager);\n            await runManager?.handleRetrieverEnd(results);\n            return results;\n        }\n        catch (error) {\n            await runManager?.handleRetrieverError(error);\n            throw error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9yZXRyaWV2ZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUY7QUFDbkM7QUFDTTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNEJBQTRCLHdEQUFRO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsa0VBQVk7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixrRUFBWSxDQUFDLDZFQUFzQjtBQUNoRSx1Q0FBdUMsa0VBQWUseUhBQXlILHVCQUF1QjtBQUN0TTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvcmV0cmlldmVycy9pbmRleC5qcz82YmI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhbGxiYWNrTWFuYWdlciwgcGFyc2VDYWxsYmFja0NvbmZpZ0FyZywgfSBmcm9tIFwiLi4vY2FsbGJhY2tzL21hbmFnZXIuanNcIjtcbmltcG9ydCB7IFJ1bm5hYmxlIH0gZnJvbSBcIi4uL3J1bm5hYmxlcy9iYXNlLmpzXCI7XG5pbXBvcnQgeyBlbnN1cmVDb25maWcgfSBmcm9tIFwiLi4vcnVubmFibGVzL2NvbmZpZy5qc1wiO1xuLyoqXG4gKiBBYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBhIERvY3VtZW50IHJldHJpZXZhbCBzeXN0ZW0uIEEgcmV0cmlldmFsIHN5c3RlbVxuICogaXMgZGVmaW5lZCBhcyBzb21ldGhpbmcgdGhhdCBjYW4gdGFrZSBzdHJpbmcgcXVlcmllcyBhbmQgcmV0dXJuIHRoZVxuICogbW9zdCAncmVsZXZhbnQnIERvY3VtZW50cyBmcm9tIHNvbWUgc291cmNlLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZVJldHJpZXZlciBleHRlbmRzIFJ1bm5hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoZmllbGRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY2FsbGJhY2tzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRhZ3NcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibWV0YWRhdGFcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmVyYm9zZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IGZpZWxkcz8uY2FsbGJhY2tzO1xuICAgICAgICB0aGlzLnRhZ3MgPSBmaWVsZHM/LnRhZ3MgPz8gW107XG4gICAgICAgIHRoaXMubWV0YWRhdGEgPSBmaWVsZHM/Lm1ldGFkYXRhID8/IHt9O1xuICAgICAgICB0aGlzLnZlcmJvc2UgPSBmaWVsZHM/LnZlcmJvc2UgPz8gZmFsc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRPRE86IFRoaXMgc2hvdWxkIGJlIGFuIGFic3RyYWN0IG1ldGhvZCwgYnV0IHdlJ2QgbGlrZSB0byBhdm9pZCBicmVha2luZ1xuICAgICAqIGNoYW5nZXMgdG8gcGVvcGxlIGN1cnJlbnRseSB1c2luZyBzdWJjbGFzc2VkIGN1c3RvbSByZXRyaWV2ZXJzLlxuICAgICAqIENoYW5nZSBpdCBvbiBuZXh0IG1ham9yIHJlbGVhc2UuXG4gICAgICovXG4gICAgX2dldFJlbGV2YW50RG9jdW1lbnRzKF9xdWVyeSwgX2NhbGxiYWNrcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQhXCIpO1xuICAgIH1cbiAgICBhc3luYyBpbnZva2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVsZXZhbnREb2N1bWVudHMoaW5wdXQsIGVuc3VyZUNvbmZpZyhvcHRpb25zKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSAuaW52b2tlKCkgaW5zdGVhZC4gV2lsbCBiZSByZW1vdmVkIGluIDAuMy4wLlxuICAgICAqXG4gICAgICogTWFpbiBtZXRob2QgdXNlZCB0byByZXRyaWV2ZSByZWxldmFudCBkb2N1bWVudHMuIEl0IHRha2VzIGEgcXVlcnlcbiAgICAgKiBzdHJpbmcgYW5kIGFuIG9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb2JqZWN0LCBhbmQgcmV0dXJucyBhIHByb21pc2UgdGhhdFxuICAgICAqIHJlc29sdmVzIHRvIGFuIGFycmF5IG9mIGBEb2N1bWVudGAgb2JqZWN0cy4gVGhpcyBtZXRob2QgaGFuZGxlcyB0aGVcbiAgICAgKiByZXRyaWV2YWwgcHJvY2VzcywgaW5jbHVkaW5nIHN0YXJ0aW5nIGFuZCBlbmRpbmcgY2FsbGJhY2tzLCBhbmQgZXJyb3JcbiAgICAgKiBoYW5kbGluZy5cbiAgICAgKiBAcGFyYW0gcXVlcnkgVGhlIHF1ZXJ5IHN0cmluZyB0byByZXRyaWV2ZSByZWxldmFudCBkb2N1bWVudHMgZm9yLlxuICAgICAqIEBwYXJhbSBjb25maWcgT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvYmplY3QgZm9yIHRoZSByZXRyaWV2YWwgcHJvY2Vzcy5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBhbiBhcnJheSBvZiBgRG9jdW1lbnRgIG9iamVjdHMuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0UmVsZXZhbnREb2N1bWVudHMocXVlcnksIGNvbmZpZykge1xuICAgICAgICBjb25zdCBwYXJzZWRDb25maWcgPSBlbnN1cmVDb25maWcocGFyc2VDYWxsYmFja0NvbmZpZ0FyZyhjb25maWcpKTtcbiAgICAgICAgY29uc3QgY2FsbGJhY2tNYW5hZ2VyXyA9IGF3YWl0IENhbGxiYWNrTWFuYWdlci5jb25maWd1cmUocGFyc2VkQ29uZmlnLmNhbGxiYWNrcywgdGhpcy5jYWxsYmFja3MsIHBhcnNlZENvbmZpZy50YWdzLCB0aGlzLnRhZ3MsIHBhcnNlZENvbmZpZy5tZXRhZGF0YSwgdGhpcy5tZXRhZGF0YSwgeyB2ZXJib3NlOiB0aGlzLnZlcmJvc2UgfSk7XG4gICAgICAgIGNvbnN0IHJ1bk1hbmFnZXIgPSBhd2FpdCBjYWxsYmFja01hbmFnZXJfPy5oYW5kbGVSZXRyaWV2ZXJTdGFydCh0aGlzLnRvSlNPTigpLCBxdWVyeSwgcGFyc2VkQ29uZmlnLnJ1bklkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBwYXJzZWRDb25maWcucnVuTmFtZSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgdGhpcy5fZ2V0UmVsZXZhbnREb2N1bWVudHMocXVlcnksIHJ1bk1hbmFnZXIpO1xuICAgICAgICAgICAgYXdhaXQgcnVuTWFuYWdlcj8uaGFuZGxlUmV0cmlldmVyRW5kKHJlc3VsdHMpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBhd2FpdCBydW5NYW5hZ2VyPy5oYW5kbGVSZXRyaWV2ZXJFcnJvcihlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/retrievers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runnable: () => (/* binding */ Runnable),\n/* harmony export */   RunnableAssign: () => (/* binding */ RunnableAssign),\n/* harmony export */   RunnableBinding: () => (/* binding */ RunnableBinding),\n/* harmony export */   RunnableEach: () => (/* binding */ RunnableEach),\n/* harmony export */   RunnableLambda: () => (/* binding */ RunnableLambda),\n/* harmony export */   RunnableMap: () => (/* binding */ RunnableMap),\n/* harmony export */   RunnableParallel: () => (/* binding */ RunnableParallel),\n/* harmony export */   RunnablePick: () => (/* binding */ RunnablePick),\n/* harmony export */   RunnableRetry: () => (/* binding */ RunnableRetry),\n/* harmony export */   RunnableSequence: () => (/* binding */ RunnableSequence),\n/* harmony export */   RunnableWithFallbacks: () => (/* binding */ RunnableWithFallbacks),\n/* harmony export */   _coerceToDict: () => (/* binding */ _coerceToDict),\n/* harmony export */   _coerceToRunnable: () => (/* binding */ _coerceToRunnable)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p-retry */ \"(rsc)/./node_modules/p-retry/index.js\");\n/* harmony import */ var _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../callbacks/manager.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js\");\n/* harmony import */ var _tracers_log_stream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tracers/log_stream.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/log_stream.js\");\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n/* harmony import */ var _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/stream.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n/* harmony import */ var _utils_async_caller_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/async_caller.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js\");\n/* harmony import */ var _tracers_root_listener_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tracers/root_listener.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/root_listener.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/utils.js\");\n/* harmony import */ var _singletons_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../singletons/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/singletons/index.js\");\n/* harmony import */ var _graph_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graph.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/graph.js\");\n/* harmony import */ var _wrappers_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./wrappers.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/wrappers.js\");\n/* harmony import */ var _iter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./iter.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/iter.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nclass Runnable extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_3__.Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param kwargs\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks: fields.fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new _utils_async_caller_js__WEBPACK_IMPORTED_MODULE_6__.AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const wrappedGenerator = new _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.AsyncGeneratorWithSetup(this._streamIterator(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options)));\n        await wrappedGenerator.setup;\n        return _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        }\n        else {\n            runnableConfig = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        const callbackManager_ = await (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig)(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            output = await func.call(this, input, config, runManager);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            outputs = await func.call(this, inputs, optionsList, runManagers, batchOptions);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        const callbackManager_ = await (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig)(config);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.pipeGeneratorWithSetup)(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const isLogStreamHandler = (handler) => handler.name === \"log_stream_tracer\";\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            let iterator = pipe.output;\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = await streamLogHandler.tapOutputIterable(runManager.runId, pipe.output);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new _graph_js__WEBPACK_IMPORTED_MODULE_10__.Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: zod__WEBPACK_IMPORTED_MODULE_13__.z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: zod__WEBPACK_IMPORTED_MODULE_13__.z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new _tracers_log_stream_js__WEBPACK_IMPORTED_MODULE_2__.LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.inheritableHandlers.push(logStreamCallbackHandler);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new _tracers_log_stream_js__WEBPACK_IMPORTED_MODULE_2__.RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *streamEvents(input, options, streamOptions) {\n        if (options.encoding === \"text/event-stream\") {\n            const stream = await this._streamEvents(input, options, streamOptions);\n            yield* (0,_wrappers_js__WEBPACK_IMPORTED_MODULE_11__.convertToHttpEventStream)(stream);\n        }\n        else {\n            yield* this._streamEvents(input, options, streamOptions);\n        }\n    }\n    async *_streamEvents(input, options, streamOptions) {\n        if (options.version !== \"v1\") {\n            throw new Error(`Only version \"v1\" of the events schema is currently supported.`);\n        }\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new _tracers_log_stream_js__WEBPACK_IMPORTED_MODULE_2__.LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _utils_js__WEBPACK_IMPORTED_MODULE_8__._RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = _tracers_log_stream_js__WEBPACK_IMPORTED_MODULE_2__.RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__.isRunnableInterface)(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new _tracers_root_listener_js__WEBPACK_IMPORTED_MODULE_7__.RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable with a set of kwargs.\n */\nclass RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.mergeConfigs)(this.config, ...options);\n        return (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.mergeConfigs)(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound.withRetry(fields),\n            kwargs: this.kwargs,\n            config: this.config,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(individualOption), this.kwargs)))\n            : await this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options), this.kwargs));\n    }\n    async *transform(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options), this.kwargs));\n    }\n    async *streamEvents(input, options, streamOptions) {\n        yield* this.bound.streamEvents(input, {\n            ...(await this._mergeConfig((0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options), this.kwargs)),\n            version: options.version,\n        }, streamOptions);\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new _tracers_root_listener_js__WEBPACK_IMPORTED_MODULE_7__.RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n */\nclass RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke, inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n */\nclass RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return p_retry__WEBPACK_IMPORTED_MODULE_0__((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke, input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await p_retry__WEBPACK_IMPORTED_MODULE_0__(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nclass RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        const callbackManager_ = await (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig)(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                nextStepInput = await step.invoke(nextStepInput, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, {\n                    callbacks: runManager?.getChild(`seq:step:${i + 1}`),\n                }));\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            finalOutput = await this.last.invoke(nextStepInput, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, {\n                callbacks: runManager?.getChild(`seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                nextStepInputs = await step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(`seq:step:${i + 1}`);\n                    return (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig)(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(otherOptions, {\n                callbacks: runManager?.getChild(`seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(otherOptions, {\n                    callbacks: runManager?.getChild(`seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new _graph_js__WEBPACK_IMPORTED_MODULE_10__.Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], name) {\n        return new RunnableSequence({\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n            name,\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nclass RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.ensureConfig)(options);\n        const callbackManager_ = await (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.getCallbackManagerForConfig)(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            await Promise.all(Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.atee)(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const { key, result, gen } = await Promise.race(tasks.values());\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const wrappedGenerator = new _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.AsyncGeneratorWithSetup(this.transform(generator(), options));\n        await wrappedGenerator.setup;\n        return _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that runs a callable.\n */\nclass RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? _config_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void _singletons_index_js__WEBPACK_IMPORTED_MODULE_9__.AsyncLocalStorageProviderSingleton.getInstance().run(childConfig, async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? _config_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if ((0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.isAsyncIterable)(output)) {\n                        let finalOutput;\n                        for await (const chunk of (0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.consumeAsyncIterableInContext)(childConfig, output)) {\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if ((0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.isIterator)(output)) {\n                        let finalOutput;\n                        for (const chunk of (0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.consumeIteratorInContext)(childConfig, output)) {\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke, input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.concat)(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const output = await new Promise((resolve, reject) => {\n            void _singletons_index_js__WEBPACK_IMPORTED_MODULE_9__.AsyncLocalStorageProviderSingleton.getInstance().run(config, async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...config,\n                        config,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? _config_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_RECURSION_LIMIT) - 1,\n            }));\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if ((0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.isAsyncIterable)(output)) {\n            for await (const chunk of (0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.consumeAsyncIterableInContext)(config, output)) {\n                yield chunk;\n            }\n        }\n        else if ((0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.isIterator)(output)) {\n            for (const chunk of (0,_iter_js__WEBPACK_IMPORTED_MODULE_12__.consumeIteratorInContext)(config, output)) {\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const wrappedGenerator = new _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.AsyncGeneratorWithSetup(this.transform(generator(), options));\n        await wrappedGenerator.setup;\n        return _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nclass RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n */\nclass RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const callbackManager_ = await _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_1__.CallbackManager.configure(options?.callbacks, undefined, options?.tags, undefined, options?.metadata);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        let firstError;\n        for (const runnable of this.runnables()) {\n            try {\n                const output = await runnable.invoke(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(otherOptions, { callbacks: runManager?.getChild() }));\n                await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                return output;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (firstError === undefined) {\n            throw new Error(\"No error stored at end of fallback.\");\n        }\n        await runManager?.handleChainError(firstError);\n        throw firstError;\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_1__.CallbackManager.configure(config?.callbacks, undefined, config?.tags, undefined, config?.metadata)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nfunction _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n */\nclass RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.atee)(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, (0,_config_js__WEBPACK_IMPORTED_MODULE_5__.patchConfig)(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const wrappedGenerator = new _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.AsyncGeneratorWithSetup(this.transform(generator(), options));\n        await wrappedGenerator.setup;\n        return _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n */\nclass RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0 ? undefined : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const wrappedGenerator = new _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.AsyncGeneratorWithSetup(this.transform(generator(), options));\n        await wrappedGenerator.setup;\n        return _utils_stream_js__WEBPACK_IMPORTED_MODULE_4__.IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/branch.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/branch.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunnableBranch: () => (/* binding */ RunnableBranch)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n/* harmony import */ var _utils_stream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/stream.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js\");\n\n\n\n/**\n * Class that represents a runnable branch. The RunnableBranch is\n * initialized with an array of branches and a default branch. When invoked,\n * it evaluates the condition of each branch in order and executes the\n * corresponding branch if the condition is true. If none of the conditions\n * are true, it executes the default branch.\n * @example\n * ```typescript\n * const branch = RunnableBranch.from([\n *   [\n *     (x: { topic: string; question: string }) =>\n *       x.topic.toLowerCase().includes(\"anthropic\"),\n *     anthropicChain,\n *   ],\n *   [\n *     (x: { topic: string; question: string }) =>\n *       x.topic.toLowerCase().includes(\"langchain\"),\n *     langChainChain,\n *   ],\n *   generalChain,\n * ]);\n *\n * const fullChain = RunnableSequence.from([\n *   {\n *     topic: classificationChain,\n *     question: (input: { question: string }) => input.question,\n *   },\n *   branch,\n * ]);\n *\n * const result = await fullChain.invoke({\n *   question: \"how do I use LangChain?\",\n * });\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass RunnableBranch extends _base_js__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    static lc_name() {\n        return \"RunnableBranch\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"default\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"branches\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.branches = fields.branches;\n        this.default = fields.default;\n    }\n    /**\n     * Convenience method for instantiating a RunnableBranch from\n     * RunnableLikes (objects, functions, or Runnables).\n     *\n     * Each item in the input except for the last one should be a\n     * tuple with two items. The first is a \"condition\" RunnableLike that\n     * returns \"true\" if the second RunnableLike in the tuple should run.\n     *\n     * The final item in the input should be a RunnableLike that acts as a\n     * default branch if no other branches match.\n     *\n     * @example\n     * ```ts\n     * import { RunnableBranch } from \"@langchain/core/runnables\";\n     *\n     * const branch = RunnableBranch.from([\n     *   [(x: number) => x > 0, (x: number) => x + 1],\n     *   [(x: number) => x < 0, (x: number) => x - 1],\n     *   (x: number) => x\n     * ]);\n     * ```\n     * @param branches An array where the every item except the last is a tuple of [condition, runnable]\n     *   pairs. The last item is a default runnable which is invoked if no other condition matches.\n     * @returns A new RunnableBranch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from(branches) {\n        if (branches.length < 1) {\n            throw new Error(\"RunnableBranch requires at least one branch\");\n        }\n        const branchLikes = branches.slice(0, -1);\n        const coercedBranches = branchLikes.map(([condition, runnable]) => [\n            (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(condition),\n            (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(runnable),\n        ]);\n        const defaultBranch = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(branches[branches.length - 1]);\n        return new this({\n            branches: coercedBranches,\n            default: defaultBranch,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        let result;\n        for (let i = 0; i < this.branches.length; i += 1) {\n            const [condition, branchRunnable] = this.branches[i];\n            const conditionValue = await condition.invoke(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n                callbacks: runManager?.getChild(`condition:${i + 1}`),\n            }));\n            if (conditionValue) {\n                result = await branchRunnable.invoke(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n                    callbacks: runManager?.getChild(`branch:${i + 1}`),\n                }));\n                break;\n            }\n        }\n        if (!result) {\n            result = await this.default.invoke(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n                callbacks: runManager?.getChild(\"branch:default\"),\n            }));\n        }\n        return result;\n    }\n    async invoke(input, config = {}) {\n        return this._callWithConfig(this._invoke, input, config);\n    }\n    async *_streamIterator(input, config) {\n        const callbackManager_ = await (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.getCallbackManagerForConfig)(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), (0,_base_js__WEBPACK_IMPORTED_MODULE_0__._coerceToDict)(input, \"input\"), config?.runId, undefined, undefined, undefined, config?.runName);\n        let finalOutput;\n        let finalOutputSupported = true;\n        let stream;\n        try {\n            for (let i = 0; i < this.branches.length; i += 1) {\n                const [condition, branchRunnable] = this.branches[i];\n                const conditionValue = await condition.invoke(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n                    callbacks: runManager?.getChild(`condition:${i + 1}`),\n                }));\n                if (conditionValue) {\n                    stream = await branchRunnable.stream(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n                        callbacks: runManager?.getChild(`branch:${i + 1}`),\n                    }));\n                    for await (const chunk of stream) {\n                        yield chunk;\n                        if (finalOutputSupported) {\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                try {\n                                    finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_2__.concat)(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = undefined;\n                                    finalOutputSupported = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            if (stream === undefined) {\n                stream = await this.default.stream(input, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)(config, {\n                    callbacks: runManager?.getChild(\"branch:default\"),\n                }));\n                for await (const chunk of stream) {\n                    yield chunk;\n                    if (finalOutputSupported) {\n                        if (finalOutput === undefined) {\n                            finalOutput = chunk;\n                        }\n                        else {\n                            try {\n                                finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_2__.concat)(finalOutput, chunk);\n                            }\n                            catch (e) {\n                                finalOutput = undefined;\n                                finalOutputSupported = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {});\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/branch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RECURSION_LIMIT: () => (/* binding */ DEFAULT_RECURSION_LIMIT),\n/* harmony export */   ensureConfig: () => (/* binding */ ensureConfig),\n/* harmony export */   getCallbackManagerForConfig: () => (/* binding */ getCallbackManagerForConfig),\n/* harmony export */   mergeConfigs: () => (/* binding */ mergeConfigs),\n/* harmony export */   patchConfig: () => (/* binding */ patchConfig)\n/* harmony export */ });\n/* harmony import */ var _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../callbacks/manager.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js\");\n/* harmony import */ var _singletons_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../singletons/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/singletons/index.js\");\n\n\nconst DEFAULT_RECURSION_LIMIT = 25;\nasync function getCallbackManagerForConfig(config) {\n    return _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManager.configure(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nfunction mergeConfigs(...configs) {\n    // We do not want to call ensureConfig on the empty state here as this may cause\n    // double loading of callbacks if async local storage is being used.\n    const copy = {};\n    for (const options of configs.filter((c) => !!c)) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                const baseKeys = copy[key] ?? [];\n                copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler((0,_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.ensureHandler)(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler((0,_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.ensureHandler)(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManager(providedCallbacks._parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const typedKey = key;\n                copy[typedKey] = options[typedKey] ?? copy[typedKey];\n            }\n        }\n    }\n    return copy;\n}\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n/**\n * Ensure that a passed config is an object with all required keys present.\n *\n * Note: To make sure async local storage loading works correctly, this\n * should not be called with a default or prepopulated config argument.\n */\nfunction ensureConfig(config) {\n    const loadedConfig = config ?? _singletons_index_js__WEBPACK_IMPORTED_MODULE_1__.AsyncLocalStorageProviderSingleton.getInstance().getStore();\n    let empty = {\n        tags: [],\n        metadata: {},\n        callbacks: undefined,\n        recursionLimit: 25,\n        runId: undefined,\n    };\n    if (loadedConfig) {\n        empty = { ...empty, ...loadedConfig };\n    }\n    if (loadedConfig?.configurable) {\n        for (const key of Object.keys(loadedConfig.configurable)) {\n            if (PRIMITIVES.has(typeof loadedConfig.configurable[key]) &&\n                !empty.metadata?.[key]) {\n                if (!empty.metadata) {\n                    empty.metadata = {};\n                }\n                empty.metadata[key] = loadedConfig.configurable[key];\n            }\n        }\n    }\n    return empty;\n}\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nfunction patchConfig(config = {}, { callbacks, maxConcurrency, recursionLimit, runName, configurable, runId, } = {}) {\n    const newConfig = ensureConfig(config);\n    if (callbacks !== undefined) {\n        /**\n         * If we're replacing callbacks we need to unset runName\n         * since that should apply only to the same run as the original callbacks\n         */\n        delete newConfig.runName;\n        newConfig.callbacks = callbacks;\n    }\n    if (recursionLimit !== undefined) {\n        newConfig.recursionLimit = recursionLimit;\n    }\n    if (maxConcurrency !== undefined) {\n        newConfig.maxConcurrency = maxConcurrency;\n    }\n    if (runName !== undefined) {\n        newConfig.runName = runName;\n    }\n    if (configurable !== undefined) {\n        newConfig.configurable = { ...newConfig.configurable, ...configurable };\n    }\n    if (runId !== undefined) {\n        delete newConfig.runId;\n    }\n    return newConfig;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/graph.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/graph.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graph: () => (/* binding */ Graph),\n/* harmony export */   nodeDataStr: () => (/* binding */ nodeDataStr)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/utils.js\");\n\n\n\nconst MAX_DATA_DISPLAY_NAME_LENGTH = 42;\nfunction nodeDataStr(node) {\n    if (!(0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(node.id)) {\n        return node.id;\n    }\n    else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isRunnableInterface)(node.data)) {\n        try {\n            let data = node.data.toString();\n            if (data.startsWith(\"<\") ||\n                data[0] !== data[0].toUpperCase() ||\n                data.split(\"\\n\").length > 1) {\n                data = node.data.getName();\n            }\n            else if (data.length > MAX_DATA_DISPLAY_NAME_LENGTH) {\n                data = `${data.substring(0, MAX_DATA_DISPLAY_NAME_LENGTH)}...`;\n            }\n            return data.startsWith(\"Runnable\") ? data.slice(\"Runnable\".length) : data;\n        }\n        catch (error) {\n            return node.data.getName();\n        }\n    }\n    else {\n        return node.data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data is implements Runnable\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isRunnableInterface)(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...(0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(node.data.schema), title: node.data.name },\n        };\n    }\n}\nclass Graph {\n    constructor() {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => edge.data\n                ? {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                    data: edge.data,\n                }\n                : {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                }),\n        };\n    }\n    addNode(data, id) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id || (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n        const node = { id: nodeId, data };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = { source: source.id, target: target.id, data };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        const targets = new Set(this.edges.map((edge) => edge.target));\n        const found = [];\n        Object.values(this.nodes).forEach((node) => {\n            if (!targets.has(node.id)) {\n                found.push(node);\n            }\n        });\n        return found[0];\n    }\n    lastNode() {\n        const sources = new Set(this.edges.map((edge) => edge.source));\n        const found = [];\n        Object.values(this.nodes).forEach((node) => {\n            if (!sources.has(node.id)) {\n                found.push(node);\n            }\n        });\n        return found[0];\n    }\n    extend(graph) {\n        // Add all nodes from the other graph, taking care to avoid duplicates\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[key] = value;\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...graph.edges];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode) {\n            const outgoingEdges = this.edges.filter((edge) => edge.source === firstNode.id);\n            if (Object.keys(this.nodes).length === 1 || outgoingEdges.length === 1) {\n                this.removeNode(firstNode);\n            }\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode) {\n            const incomingEdges = this.edges.filter((edge) => edge.target === lastNode.id);\n            if (Object.keys(this.nodes).length === 1 || incomingEdges.length === 1) {\n                this.removeNode(lastNode);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/graph.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/history.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/history.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunnableWithMessageHistory: () => (/* binding */ RunnableWithMessageHistory)\n/* harmony export */ });\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _passthrough_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./passthrough.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/passthrough.js\");\n\n\n\n/**\n * Wraps a LCEL chain and manages history. It appends input messages\n * and chain outputs as history, and adds the current history messages to\n * the chain input.\n * @example\n * ```typescript\n * // yarn add @langchain/anthropic @langchain/community @upstash/redis\n *\n * import {\n *   ChatPromptTemplate,\n *   MessagesPlaceholder,\n * } from \"@langchain/core/prompts\";\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n * import { UpstashRedisChatMessageHistory } from \"@langchain/community/stores/message/upstash_redis\";\n * // For demos, you can also use an in-memory store:\n * // import { ChatMessageHistory } from \"langchain/stores/message/in_memory\";\n *\n * const prompt = ChatPromptTemplate.fromMessages([\n *   [\"system\", \"You're an assistant who's good at {ability}\"],\n *   new MessagesPlaceholder(\"history\"),\n *   [\"human\", \"{question}\"],\n * ]);\n *\n * const chain = prompt.pipe(new ChatAnthropic({}));\n *\n * const chainWithHistory = new RunnableWithMessageHistory({\n *   runnable: chain,\n *   getMessageHistory: (sessionId) =>\n *     new UpstashRedisChatMessageHistory({\n *       sessionId,\n *       config: {\n *         url: process.env.UPSTASH_REDIS_REST_URL!,\n *         token: process.env.UPSTASH_REDIS_REST_TOKEN!,\n *       },\n *     }),\n *   inputMessagesKey: \"question\",\n *   historyMessagesKey: \"history\",\n * });\n *\n * const result = await chainWithHistory.invoke(\n *   {\n *     ability: \"math\",\n *     question: \"What does cosine mean?\",\n *   },\n *   {\n *     configurable: {\n *       sessionId: \"some_string_identifying_a_user\",\n *     },\n *   }\n * );\n *\n * const result2 = await chainWithHistory.invoke(\n *   {\n *     ability: \"math\",\n *     question: \"What's its inverse?\",\n *   },\n *   {\n *     configurable: {\n *       sessionId: \"some_string_identifying_a_user\",\n *     },\n *   }\n * );\n * ```\n */\nclass RunnableWithMessageHistory extends _base_js__WEBPACK_IMPORTED_MODULE_1__.RunnableBinding {\n    constructor(fields) {\n        let historyChain = new _base_js__WEBPACK_IMPORTED_MODULE_1__.RunnableLambda({\n            func: (input, options) => this._enterHistory(input, options ?? {}),\n        }).withConfig({ runName: \"loadHistory\" });\n        const messagesKey = fields.historyMessagesKey ?? fields.inputMessagesKey;\n        if (messagesKey) {\n            historyChain = _passthrough_js__WEBPACK_IMPORTED_MODULE_2__.RunnablePassthrough.assign({\n                [messagesKey]: historyChain,\n            }).withConfig({ runName: \"insertHistory\" });\n        }\n        const bound = historyChain\n            .pipe(fields.runnable.withListeners({\n            onEnd: (run, config) => this._exitHistory(run, config ?? {}),\n        }))\n            .withConfig({ runName: \"RunnableWithMessageHistory\" });\n        const config = fields.config ?? {};\n        super({\n            ...fields,\n            config,\n            bound,\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputMessagesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputMessagesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"historyMessagesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"getMessageHistory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.getMessageHistory = fields.getMessageHistory;\n        this.inputMessagesKey = fields.inputMessagesKey;\n        this.outputMessagesKey = fields.outputMessagesKey;\n        this.historyMessagesKey = fields.historyMessagesKey;\n    }\n    _getInputMessages(inputValue) {\n        if (typeof inputValue === \"string\") {\n            return [new _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.HumanMessage(inputValue)];\n        }\n        else if (Array.isArray(inputValue)) {\n            return inputValue;\n        }\n        else {\n            return [inputValue];\n        }\n    }\n    _getOutputMessages(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    outputValue) {\n        let newOutputValue = outputValue;\n        if (!Array.isArray(outputValue) &&\n            !(0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(outputValue) &&\n            typeof outputValue !== \"string\") {\n            newOutputValue = outputValue[this.outputMessagesKey ?? \"output\"];\n        }\n        if (typeof newOutputValue === \"string\") {\n            return [new _messages_index_js__WEBPACK_IMPORTED_MODULE_0__.AIMessage(newOutputValue)];\n        }\n        else if (Array.isArray(newOutputValue)) {\n            return newOutputValue;\n        }\n        else if ((0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(newOutputValue)) {\n            return [newOutputValue];\n        }\n        throw new Error(`Expected a string, BaseMessage, or array of BaseMessages. Received: ${JSON.stringify(newOutputValue, null, 2)}`);\n    }\n    async _enterHistory(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, kwargs) {\n        const history = kwargs?.config?.configurable?.messageHistory;\n        if (this.historyMessagesKey) {\n            return history.getMessages();\n        }\n        const inputVal = input ||\n            (this.inputMessagesKey ? input[this.inputMessagesKey] : undefined);\n        const historyMessages = history ? await history.getMessages() : [];\n        const returnType = [\n            ...historyMessages,\n            ...this._getInputMessages(inputVal),\n        ];\n        return returnType;\n    }\n    async _exitHistory(run, config) {\n        const history = config.configurable?.messageHistory;\n        // Get input messages\n        const { inputs } = run;\n        const inputValue = inputs[this.inputMessagesKey ?? \"input\"];\n        const inputMessages = this._getInputMessages(inputValue);\n        // Get output messages\n        const outputValue = run.outputs;\n        if (!outputValue) {\n            throw new Error(`Output values from 'Run' undefined. Run: ${JSON.stringify(run, null, 2)}`);\n        }\n        const outputMessages = this._getOutputMessages(outputValue);\n        for await (const message of [...inputMessages, ...outputMessages]) {\n            await history.addMessage(message);\n        }\n    }\n    async _mergeConfig(...configs) {\n        const config = await super._mergeConfig(...configs);\n        // Extract sessionId\n        if (!config.configurable || !config.configurable.sessionId) {\n            const exampleInput = {\n                [this.inputMessagesKey ?? \"input\"]: \"foo\",\n            };\n            const exampleConfig = { configurable: { sessionId: \"123\" } };\n            throw new Error(`sessionId is required. Pass it in as part of the config argument to .invoke() or .stream()\\n` +\n                `eg. chain.invoke(${JSON.stringify(exampleInput)}, ${JSON.stringify(exampleConfig)})`);\n        }\n        // attach messageHistory\n        const { sessionId } = config.configurable;\n        config.configurable.messageHistory = await this.getMessageHistory(sessionId);\n        return config;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/history.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RouterRunnable: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_3__.RouterRunnable),\n/* harmony export */   Runnable: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.Runnable),\n/* harmony export */   RunnableAssign: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableAssign),\n/* harmony export */   RunnableBinding: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableBinding),\n/* harmony export */   RunnableBranch: () => (/* reexport safe */ _branch_js__WEBPACK_IMPORTED_MODULE_4__.RunnableBranch),\n/* harmony export */   RunnableEach: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableEach),\n/* harmony export */   RunnableLambda: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableLambda),\n/* harmony export */   RunnableMap: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableMap),\n/* harmony export */   RunnableParallel: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableParallel),\n/* harmony export */   RunnablePassthrough: () => (/* reexport safe */ _passthrough_js__WEBPACK_IMPORTED_MODULE_2__.RunnablePassthrough),\n/* harmony export */   RunnablePick: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnablePick),\n/* harmony export */   RunnableRetry: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableRetry),\n/* harmony export */   RunnableSequence: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence),\n/* harmony export */   RunnableWithFallbacks: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.RunnableWithFallbacks),\n/* harmony export */   RunnableWithMessageHistory: () => (/* reexport safe */ _history_js__WEBPACK_IMPORTED_MODULE_5__.RunnableWithMessageHistory),\n/* harmony export */   _coerceToRunnable: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable),\n/* harmony export */   ensureConfig: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_1__.ensureConfig),\n/* harmony export */   getCallbackManagerForConfig: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_1__.getCallbackManagerForConfig),\n/* harmony export */   mergeConfigs: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_1__.mergeConfigs),\n/* harmony export */   patchConfig: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_1__.patchConfig)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n/* harmony import */ var _passthrough_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./passthrough.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/passthrough.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./router.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/router.js\");\n/* harmony import */ var _branch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./branch.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/branch.js\");\n/* harmony import */ var _history_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./history.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/history.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNk47QUFDekg7QUFDN0M7QUFDVjtBQUNBO0FBQ2MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvcnVubmFibGVzL2luZGV4LmpzP2QxNmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgUnVubmFibGUsIFJ1bm5hYmxlQmluZGluZywgUnVubmFibGVFYWNoLCBSdW5uYWJsZVJldHJ5LCBSdW5uYWJsZVNlcXVlbmNlLCBSdW5uYWJsZU1hcCwgUnVubmFibGVQYXJhbGxlbCwgUnVubmFibGVMYW1iZGEsIFJ1bm5hYmxlV2l0aEZhbGxiYWNrcywgUnVubmFibGVBc3NpZ24sIFJ1bm5hYmxlUGljaywgX2NvZXJjZVRvUnVubmFibGUsIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuZXhwb3J0IHsgZ2V0Q2FsbGJhY2tNYW5hZ2VyRm9yQ29uZmlnLCBwYXRjaENvbmZpZywgZW5zdXJlQ29uZmlnLCBtZXJnZUNvbmZpZ3MsIH0gZnJvbSBcIi4vY29uZmlnLmpzXCI7XG5leHBvcnQgeyBSdW5uYWJsZVBhc3N0aHJvdWdoIH0gZnJvbSBcIi4vcGFzc3Rocm91Z2guanNcIjtcbmV4cG9ydCB7IFJvdXRlclJ1bm5hYmxlIH0gZnJvbSBcIi4vcm91dGVyLmpzXCI7XG5leHBvcnQgeyBSdW5uYWJsZUJyYW5jaCB9IGZyb20gXCIuL2JyYW5jaC5qc1wiO1xuZXhwb3J0IHsgUnVubmFibGVXaXRoTWVzc2FnZUhpc3RvcnksIH0gZnJvbSBcIi4vaGlzdG9yeS5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/iter.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/iter.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   consumeAsyncIterableInContext: () => (/* binding */ consumeAsyncIterableInContext),\n/* harmony export */   consumeIteratorInContext: () => (/* binding */ consumeIteratorInContext),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   isIterator: () => (/* binding */ isIterator)\n/* harmony export */ });\n/* harmony import */ var _singletons_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../singletons/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/singletons/index.js\");\n\nfunction isIterator(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.iterator] === \"function\" &&\n        // avoid detecting array/set as iterator\n        typeof thing.next === \"function\");\n}\nfunction isAsyncIterable(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.asyncIterator] ===\n            \"function\");\n}\nfunction* consumeIteratorInContext(context, iter) {\n    const storage = _singletons_index_js__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getInstance();\n    while (true) {\n        const { value, done } = storage.run(context, iter.next.bind(iter));\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\nasync function* consumeAsyncIterableInContext(context, iter) {\n    const storage = _singletons_index_js__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getInstance();\n    const iterator = iter[Symbol.asyncIterator]();\n    while (true) {\n        const { value, done } = await storage.run(context, iterator.next.bind(iter));\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvaXRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RTtBQUNyRTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asb0JBQW9CLG9GQUFrQztBQUN0RDtBQUNBLGdCQUFnQixjQUFjO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQixvRkFBa0M7QUFDdEQ7QUFDQTtBQUNBLGdCQUFnQixjQUFjO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvcnVubmFibGVzL2l0ZXIuanM/ODJjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyU2luZ2xldG9uIH0gZnJvbSBcIi4uL3NpbmdsZXRvbnMvaW5kZXguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc0l0ZXJhdG9yKHRoaW5nKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgdGhpbmcgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgdGhpbmcgIT09IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIHRoaW5nW1N5bWJvbC5pdGVyYXRvcl0gPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAvLyBhdm9pZCBkZXRlY3RpbmcgYXJyYXkvc2V0IGFzIGl0ZXJhdG9yXG4gICAgICAgIHR5cGVvZiB0aGluZy5uZXh0ID09PSBcImZ1bmN0aW9uXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQXN5bmNJdGVyYWJsZSh0aGluZykge1xuICAgIHJldHVybiAodHlwZW9mIHRoaW5nID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHRoaW5nICE9PSBudWxsICYmXG4gICAgICAgIHR5cGVvZiB0aGluZ1tTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPT09XG4gICAgICAgICAgICBcImZ1bmN0aW9uXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uKiBjb25zdW1lSXRlcmF0b3JJbkNvbnRleHQoY29udGV4dCwgaXRlcikge1xuICAgIGNvbnN0IHN0b3JhZ2UgPSBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyU2luZ2xldG9uLmdldEluc3RhbmNlKCk7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSwgZG9uZSB9ID0gc3RvcmFnZS5ydW4oY29udGV4dCwgaXRlci5uZXh0LmJpbmQoaXRlcikpO1xuICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB5aWVsZCB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiogY29uc3VtZUFzeW5jSXRlcmFibGVJbkNvbnRleHQoY29udGV4dCwgaXRlcikge1xuICAgIGNvbnN0IHN0b3JhZ2UgPSBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyU2luZ2xldG9uLmdldEluc3RhbmNlKCk7XG4gICAgY29uc3QgaXRlcmF0b3IgPSBpdGVyW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHN0b3JhZ2UucnVuKGNvbnRleHQsIGl0ZXJhdG9yLm5leHQuYmluZChpdGVyKSk7XG4gICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/iter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/passthrough.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/passthrough.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunnablePassthrough: () => (/* binding */ RunnablePassthrough)\n/* harmony export */ });\n/* harmony import */ var _utils_stream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/stream.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n\n\n\n/**\n * A runnable to passthrough inputs unchanged or with additional keys.\n *\n * This runnable behaves almost like the identity function, except that it\n * can be configured to add additional keys to the output, if the input is\n * an object.\n *\n * The example below demonstrates how to use `RunnablePassthrough to\n * passthrough the input from the `.invoke()`\n *\n * @example\n * ```typescript\n * const chain = RunnableSequence.from([\n *   {\n *     question: new RunnablePassthrough(),\n *     context: async () => loadContextFromStore(),\n *   },\n *   prompt,\n *   llm,\n *   outputParser,\n * ]);\n * const response = await chain.invoke(\n *   \"I can pass a single string instead of an object since I'm using `RunnablePassthrough`.\"\n * );\n * ```\n */\nclass RunnablePassthrough extends _base_js__WEBPACK_IMPORTED_MODULE_1__.Runnable {\n    static lc_name() {\n        return \"RunnablePassthrough\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (fields) {\n            this.func = fields.func;\n        }\n    }\n    async invoke(input, options) {\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(options);\n        if (this.func) {\n            await this.func(input, config);\n        }\n        return this._callWithConfig((input) => Promise.resolve(input), input, config);\n    }\n    async *transform(generator, options) {\n        const config = (0,_config_js__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(options);\n        let finalOutput;\n        let finalOutputSupported = true;\n        for await (const chunk of this._transformStreamWithConfig(generator, (input) => input, config)) {\n            yield chunk;\n            if (finalOutputSupported) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        finalOutput = (0,_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.concat)(finalOutput, chunk);\n                    }\n                    catch {\n                        finalOutput = undefined;\n                        finalOutputSupported = false;\n                    }\n                }\n            }\n        }\n        if (this.func && finalOutput !== undefined) {\n            await this.func(finalOutput, config);\n        }\n    }\n    /**\n     * A runnable that assigns key-value pairs to the input.\n     *\n     * The example below shows how you could use it with an inline function.\n     *\n     * @example\n     * ```typescript\n     * const prompt =\n     *   PromptTemplate.fromTemplate(`Write a SQL query to answer the question using the following schema: {schema}\n     * Question: {question}\n     * SQL Query:`);\n     *\n     * // The `RunnablePassthrough.assign()` is used here to passthrough the input from the `.invoke()`\n     * // call (in this example it's the question), along with any inputs passed to the `.assign()` method.\n     * // In this case, we're passing the schema.\n     * const sqlQueryGeneratorChain = RunnableSequence.from([\n     *   RunnablePassthrough.assign({\n     *     schema: async () => db.getTableInfo(),\n     *   }),\n     *   prompt,\n     *   new ChatOpenAI({}).bind({ stop: [\"\\nSQLResult:\"] }),\n     *   new StringOutputParser(),\n     * ]);\n     * const result = await sqlQueryGeneratorChain.invoke({\n     *   question: \"How many employees are there?\",\n     * });\n     * ```\n     */\n    static assign(mapping) {\n        return new _base_js__WEBPACK_IMPORTED_MODULE_1__.RunnableAssign(new _base_js__WEBPACK_IMPORTED_MODULE_1__.RunnableMap({ steps: mapping }));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvcGFzc3Rocm91Z2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QztBQUN1QjtBQUN4QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrQ0FBa0MsOENBQVE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0RBQVk7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFZO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msd0RBQU07QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRHQUE0RztBQUM1RyxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLDBCQUEwQixTQUFTLHdCQUF3QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0RBQWMsS0FBSyxpREFBVyxHQUFHLGdCQUFnQjtBQUNwRTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3J1bm5hYmxlcy9wYXNzdGhyb3VnaC5qcz81OTZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmNhdCB9IGZyb20gXCIuLi91dGlscy9zdHJlYW0uanNcIjtcbmltcG9ydCB7IFJ1bm5hYmxlLCBSdW5uYWJsZUFzc2lnbiwgUnVubmFibGVNYXAsIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuaW1wb3J0IHsgZW5zdXJlQ29uZmlnIH0gZnJvbSBcIi4vY29uZmlnLmpzXCI7XG4vKipcbiAqIEEgcnVubmFibGUgdG8gcGFzc3Rocm91Z2ggaW5wdXRzIHVuY2hhbmdlZCBvciB3aXRoIGFkZGl0aW9uYWwga2V5cy5cbiAqXG4gKiBUaGlzIHJ1bm5hYmxlIGJlaGF2ZXMgYWxtb3N0IGxpa2UgdGhlIGlkZW50aXR5IGZ1bmN0aW9uLCBleGNlcHQgdGhhdCBpdFxuICogY2FuIGJlIGNvbmZpZ3VyZWQgdG8gYWRkIGFkZGl0aW9uYWwga2V5cyB0byB0aGUgb3V0cHV0LCBpZiB0aGUgaW5wdXQgaXNcbiAqIGFuIG9iamVjdC5cbiAqXG4gKiBUaGUgZXhhbXBsZSBiZWxvdyBkZW1vbnN0cmF0ZXMgaG93IHRvIHVzZSBgUnVubmFibGVQYXNzdGhyb3VnaCB0b1xuICogcGFzc3Rocm91Z2ggdGhlIGlucHV0IGZyb20gdGhlIGAuaW52b2tlKClgXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IGNoYWluID0gUnVubmFibGVTZXF1ZW5jZS5mcm9tKFtcbiAqICAge1xuICogICAgIHF1ZXN0aW9uOiBuZXcgUnVubmFibGVQYXNzdGhyb3VnaCgpLFxuICogICAgIGNvbnRleHQ6IGFzeW5jICgpID0+IGxvYWRDb250ZXh0RnJvbVN0b3JlKCksXG4gKiAgIH0sXG4gKiAgIHByb21wdCxcbiAqICAgbGxtLFxuICogICBvdXRwdXRQYXJzZXIsXG4gKiBdKTtcbiAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2hhaW4uaW52b2tlKFxuICogICBcIkkgY2FuIHBhc3MgYSBzaW5nbGUgc3RyaW5nIGluc3RlYWQgb2YgYW4gb2JqZWN0IHNpbmNlIEknbSB1c2luZyBgUnVubmFibGVQYXNzdGhyb3VnaGAuXCJcbiAqICk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIFJ1bm5hYmxlUGFzc3Rocm91Z2ggZXh0ZW5kcyBSdW5uYWJsZSB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlJ1bm5hYmxlUGFzc3Rocm91Z2hcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluX2NvcmVcIiwgXCJydW5uYWJsZXNcIl1cbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX3NlcmlhbGl6YWJsZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZnVuY1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZmllbGRzKSB7XG4gICAgICAgICAgICB0aGlzLmZ1bmMgPSBmaWVsZHMuZnVuYztcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBpbnZva2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgY29uZmlnID0gZW5zdXJlQ29uZmlnKG9wdGlvbnMpO1xuICAgICAgICBpZiAodGhpcy5mdW5jKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmZ1bmMoaW5wdXQsIGNvbmZpZyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhbGxXaXRoQ29uZmlnKChpbnB1dCkgPT4gUHJvbWlzZS5yZXNvbHZlKGlucHV0KSwgaW5wdXQsIGNvbmZpZyk7XG4gICAgfVxuICAgIGFzeW5jICp0cmFuc2Zvcm0oZ2VuZXJhdG9yLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IGVuc3VyZUNvbmZpZyhvcHRpb25zKTtcbiAgICAgICAgbGV0IGZpbmFsT3V0cHV0O1xuICAgICAgICBsZXQgZmluYWxPdXRwdXRTdXBwb3J0ZWQgPSB0cnVlO1xuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHRoaXMuX3RyYW5zZm9ybVN0cmVhbVdpdGhDb25maWcoZ2VuZXJhdG9yLCAoaW5wdXQpID0+IGlucHV0LCBjb25maWcpKSB7XG4gICAgICAgICAgICB5aWVsZCBjaHVuaztcbiAgICAgICAgICAgIGlmIChmaW5hbE91dHB1dFN1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgIGlmIChmaW5hbE91dHB1dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpbmFsT3V0cHV0ID0gY2h1bms7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsT3V0cHV0ID0gY29uY2F0KGZpbmFsT3V0cHV0LCBjaHVuayk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxPdXRwdXQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaW5hbE91dHB1dFN1cHBvcnRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmZ1bmMgJiYgZmluYWxPdXRwdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5mdW5jKGZpbmFsT3V0cHV0LCBjb25maWcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEEgcnVubmFibGUgdGhhdCBhc3NpZ25zIGtleS12YWx1ZSBwYWlycyB0byB0aGUgaW5wdXQuXG4gICAgICpcbiAgICAgKiBUaGUgZXhhbXBsZSBiZWxvdyBzaG93cyBob3cgeW91IGNvdWxkIHVzZSBpdCB3aXRoIGFuIGlubGluZSBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IHByb21wdCA9XG4gICAgICogICBQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoYFdyaXRlIGEgU1FMIHF1ZXJ5IHRvIGFuc3dlciB0aGUgcXVlc3Rpb24gdXNpbmcgdGhlIGZvbGxvd2luZyBzY2hlbWE6IHtzY2hlbWF9XG4gICAgICogUXVlc3Rpb246IHtxdWVzdGlvbn1cbiAgICAgKiBTUUwgUXVlcnk6YCk7XG4gICAgICpcbiAgICAgKiAvLyBUaGUgYFJ1bm5hYmxlUGFzc3Rocm91Z2guYXNzaWduKClgIGlzIHVzZWQgaGVyZSB0byBwYXNzdGhyb3VnaCB0aGUgaW5wdXQgZnJvbSB0aGUgYC5pbnZva2UoKWBcbiAgICAgKiAvLyBjYWxsIChpbiB0aGlzIGV4YW1wbGUgaXQncyB0aGUgcXVlc3Rpb24pLCBhbG9uZyB3aXRoIGFueSBpbnB1dHMgcGFzc2VkIHRvIHRoZSBgLmFzc2lnbigpYCBtZXRob2QuXG4gICAgICogLy8gSW4gdGhpcyBjYXNlLCB3ZSdyZSBwYXNzaW5nIHRoZSBzY2hlbWEuXG4gICAgICogY29uc3Qgc3FsUXVlcnlHZW5lcmF0b3JDaGFpbiA9IFJ1bm5hYmxlU2VxdWVuY2UuZnJvbShbXG4gICAgICogICBSdW5uYWJsZVBhc3N0aHJvdWdoLmFzc2lnbih7XG4gICAgICogICAgIHNjaGVtYTogYXN5bmMgKCkgPT4gZGIuZ2V0VGFibGVJbmZvKCksXG4gICAgICogICB9KSxcbiAgICAgKiAgIHByb21wdCxcbiAgICAgKiAgIG5ldyBDaGF0T3BlbkFJKHt9KS5iaW5kKHsgc3RvcDogW1wiXFxuU1FMUmVzdWx0OlwiXSB9KSxcbiAgICAgKiAgIG5ldyBTdHJpbmdPdXRwdXRQYXJzZXIoKSxcbiAgICAgKiBdKTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBhd2FpdCBzcWxRdWVyeUdlbmVyYXRvckNoYWluLmludm9rZSh7XG4gICAgICogICBxdWVzdGlvbjogXCJIb3cgbWFueSBlbXBsb3llZXMgYXJlIHRoZXJlP1wiLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHN0YXRpYyBhc3NpZ24obWFwcGluZykge1xuICAgICAgICByZXR1cm4gbmV3IFJ1bm5hYmxlQXNzaWduKG5ldyBSdW5uYWJsZU1hcCh7IHN0ZXBzOiBtYXBwaW5nIH0pKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/passthrough.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/router.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/router.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RouterRunnable: () => (/* binding */ RouterRunnable)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/base.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n\n\n/**\n * A runnable that routes to a set of runnables based on Input['key'].\n * Returns the output of the selected runnable.\n */\nclass RouterRunnable extends _base_js__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    static lc_name() {\n        return \"RouterRunnable\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnables = fields.runnables;\n    }\n    async invoke(input, options) {\n        const { key, input: actualInput } = input;\n        const runnable = this.runnables[key];\n        if (runnable === undefined) {\n            throw new Error(`No runnable associated with key \"${key}\".`);\n        }\n        return runnable.invoke(actualInput, (0,_config_js__WEBPACK_IMPORTED_MODULE_1__.ensureConfig)(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const keys = inputs.map((input) => input.key);\n        const actualInputs = inputs.map((input) => input.input);\n        const missingKey = keys.find((key) => this.runnables[key] === undefined);\n        if (missingKey !== undefined) {\n            throw new Error(`One or more keys do not have a corresponding runnable.`);\n        }\n        const runnables = keys.map((key) => this.runnables[key]);\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = optionsList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const batchSize = maxConcurrency && maxConcurrency > 0 ? maxConcurrency : inputs.length;\n        const batchResults = [];\n        for (let i = 0; i < actualInputs.length; i += batchSize) {\n            const batchPromises = actualInputs\n                .slice(i, i + batchSize)\n                .map((actualInput, i) => runnables[i].invoke(actualInput, optionsList[i]));\n            const batchResult = await Promise.all(batchPromises);\n            batchResults.push(batchResult);\n        }\n        return batchResults.flat();\n    }\n    async stream(input, options) {\n        const { key, input: actualInput } = input;\n        const runnable = this.runnables[key];\n        if (runnable === undefined) {\n            throw new Error(`No runnable associated with key \"${key}\".`);\n        }\n        return runnable.stream(actualInput, options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvcm91dGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNNO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkJBQTZCLDhDQUFRO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMEJBQTBCO0FBQzFDO0FBQ0E7QUFDQSxnRUFBZ0UsSUFBSTtBQUNwRTtBQUNBLDRDQUE0Qyx3REFBWTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlCQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMEJBQTBCO0FBQzFDO0FBQ0E7QUFDQSxnRUFBZ0UsSUFBSTtBQUNwRTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvcm91dGVyLmpzPzA0YTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUnVubmFibGUgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5pbXBvcnQgeyBlbnN1cmVDb25maWcgfSBmcm9tIFwiLi9jb25maWcuanNcIjtcbi8qKlxuICogQSBydW5uYWJsZSB0aGF0IHJvdXRlcyB0byBhIHNldCBvZiBydW5uYWJsZXMgYmFzZWQgb24gSW5wdXRbJ2tleSddLlxuICogUmV0dXJucyB0aGUgb3V0cHV0IG9mIHRoZSBzZWxlY3RlZCBydW5uYWJsZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFJvdXRlclJ1bm5hYmxlIGV4dGVuZHMgUnVubmFibGUge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJSb3V0ZXJSdW5uYWJsZVwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgc3VwZXIoZmllbGRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfbmFtZXNwYWNlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBbXCJsYW5nY2hhaW5fY29yZVwiLCBcInJ1bm5hYmxlc1wiXVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfc2VyaWFsaXphYmxlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJydW5uYWJsZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5ydW5uYWJsZXMgPSBmaWVsZHMucnVubmFibGVzO1xuICAgIH1cbiAgICBhc3luYyBpbnZva2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBrZXksIGlucHV0OiBhY3R1YWxJbnB1dCB9ID0gaW5wdXQ7XG4gICAgICAgIGNvbnN0IHJ1bm5hYmxlID0gdGhpcy5ydW5uYWJsZXNba2V5XTtcbiAgICAgICAgaWYgKHJ1bm5hYmxlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gcnVubmFibGUgYXNzb2NpYXRlZCB3aXRoIGtleSBcIiR7a2V5fVwiLmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBydW5uYWJsZS5pbnZva2UoYWN0dWFsSW5wdXQsIGVuc3VyZUNvbmZpZyhvcHRpb25zKSk7XG4gICAgfVxuICAgIGFzeW5jIGJhdGNoKGlucHV0cywgb3B0aW9ucywgYmF0Y2hPcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGtleXMgPSBpbnB1dHMubWFwKChpbnB1dCkgPT4gaW5wdXQua2V5KTtcbiAgICAgICAgY29uc3QgYWN0dWFsSW5wdXRzID0gaW5wdXRzLm1hcCgoaW5wdXQpID0+IGlucHV0LmlucHV0KTtcbiAgICAgICAgY29uc3QgbWlzc2luZ0tleSA9IGtleXMuZmluZCgoa2V5KSA9PiB0aGlzLnJ1bm5hYmxlc1trZXldID09PSB1bmRlZmluZWQpO1xuICAgICAgICBpZiAobWlzc2luZ0tleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE9uZSBvciBtb3JlIGtleXMgZG8gbm90IGhhdmUgYSBjb3JyZXNwb25kaW5nIHJ1bm5hYmxlLmApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJ1bm5hYmxlcyA9IGtleXMubWFwKChrZXkpID0+IHRoaXMucnVubmFibGVzW2tleV0pO1xuICAgICAgICBjb25zdCBvcHRpb25zTGlzdCA9IHRoaXMuX2dldE9wdGlvbnNMaXN0KG9wdGlvbnMgPz8ge30sIGlucHV0cy5sZW5ndGgpO1xuICAgICAgICBjb25zdCBtYXhDb25jdXJyZW5jeSA9IG9wdGlvbnNMaXN0WzBdPy5tYXhDb25jdXJyZW5jeSA/PyBiYXRjaE9wdGlvbnM/Lm1heENvbmN1cnJlbmN5O1xuICAgICAgICBjb25zdCBiYXRjaFNpemUgPSBtYXhDb25jdXJyZW5jeSAmJiBtYXhDb25jdXJyZW5jeSA+IDAgPyBtYXhDb25jdXJyZW5jeSA6IGlucHV0cy5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGJhdGNoUmVzdWx0cyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFjdHVhbElucHV0cy5sZW5ndGg7IGkgKz0gYmF0Y2hTaXplKSB7XG4gICAgICAgICAgICBjb25zdCBiYXRjaFByb21pc2VzID0gYWN0dWFsSW5wdXRzXG4gICAgICAgICAgICAgICAgLnNsaWNlKGksIGkgKyBiYXRjaFNpemUpXG4gICAgICAgICAgICAgICAgLm1hcCgoYWN0dWFsSW5wdXQsIGkpID0+IHJ1bm5hYmxlc1tpXS5pbnZva2UoYWN0dWFsSW5wdXQsIG9wdGlvbnNMaXN0W2ldKSk7XG4gICAgICAgICAgICBjb25zdCBiYXRjaFJlc3VsdCA9IGF3YWl0IFByb21pc2UuYWxsKGJhdGNoUHJvbWlzZXMpO1xuICAgICAgICAgICAgYmF0Y2hSZXN1bHRzLnB1c2goYmF0Y2hSZXN1bHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYXRjaFJlc3VsdHMuZmxhdCgpO1xuICAgIH1cbiAgICBhc3luYyBzdHJlYW0oaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBrZXksIGlucHV0OiBhY3R1YWxJbnB1dCB9ID0gaW5wdXQ7XG4gICAgICAgIGNvbnN0IHJ1bm5hYmxlID0gdGhpcy5ydW5uYWJsZXNba2V5XTtcbiAgICAgICAgaWYgKHJ1bm5hYmxlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gcnVubmFibGUgYXNzb2NpYXRlZCB3aXRoIGtleSBcIiR7a2V5fVwiLmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBydW5uYWJsZS5zdHJlYW0oYWN0dWFsSW5wdXQsIG9wdGlvbnMpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/router.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/utils.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/utils.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _RootEventFilter: () => (/* binding */ _RootEventFilter),\n/* harmony export */   isRunnableInterface: () => (/* binding */ isRunnableInterface)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nclass _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvcnVubmFibGVzL3V0aWxzLmpzPzE5OGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmV4cG9ydCBmdW5jdGlvbiBpc1J1bm5hYmxlSW50ZXJmYWNlKHRoaW5nKSB7XG4gICAgcmV0dXJuIHRoaW5nID8gdGhpbmcubGNfcnVubmFibGUgOiBmYWxzZTtcbn1cbi8qKlxuICogVXRpbGl0eSB0byBmaWx0ZXIgdGhlIHJvb3QgZXZlbnQgaW4gdGhlIHN0cmVhbUV2ZW50cyBpbXBsZW1lbnRhdGlvbi5cbiAqIFRoaXMgaXMgc2ltcGx5IGJpbmRpbmcgdGhlIGFyZ3VtZW50cyB0byB0aGUgbmFtZXNwYWNlIHRvIG1ha2Ugc2F2ZSBvblxuICogYSBiaXQgb2YgdHlwaW5nIGluIHRoZSBzdHJlYW1FdmVudHMgaW1wbGVtZW50YXRpb24uXG4gKlxuICogVE9ETzogUmVmYWN0b3IgYW5kIHJlbW92ZS5cbiAqL1xuZXhwb3J0IGNsYXNzIF9Sb290RXZlbnRGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbmNsdWRlTmFtZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5jbHVkZVR5cGVzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImluY2x1ZGVUYWdzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImV4Y2x1ZGVOYW1lc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJleGNsdWRlVHlwZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZXhjbHVkZVRhZ3NcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5pbmNsdWRlTmFtZXMgPSBmaWVsZHMuaW5jbHVkZU5hbWVzO1xuICAgICAgICB0aGlzLmluY2x1ZGVUeXBlcyA9IGZpZWxkcy5pbmNsdWRlVHlwZXM7XG4gICAgICAgIHRoaXMuaW5jbHVkZVRhZ3MgPSBmaWVsZHMuaW5jbHVkZVRhZ3M7XG4gICAgICAgIHRoaXMuZXhjbHVkZU5hbWVzID0gZmllbGRzLmV4Y2x1ZGVOYW1lcztcbiAgICAgICAgdGhpcy5leGNsdWRlVHlwZXMgPSBmaWVsZHMuZXhjbHVkZVR5cGVzO1xuICAgICAgICB0aGlzLmV4Y2x1ZGVUYWdzID0gZmllbGRzLmV4Y2x1ZGVUYWdzO1xuICAgIH1cbiAgICBpbmNsdWRlRXZlbnQoZXZlbnQsIHJvb3RUeXBlKSB7XG4gICAgICAgIGxldCBpbmNsdWRlID0gdGhpcy5pbmNsdWRlTmFtZXMgPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgdGhpcy5pbmNsdWRlVHlwZXMgPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgdGhpcy5pbmNsdWRlVGFncyA9PT0gdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCBldmVudFRhZ3MgPSBldmVudC50YWdzID8/IFtdO1xuICAgICAgICBpZiAodGhpcy5pbmNsdWRlTmFtZXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaW5jbHVkZSA9IGluY2x1ZGUgfHwgdGhpcy5pbmNsdWRlTmFtZXMuaW5jbHVkZXMoZXZlbnQubmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaW5jbHVkZVR5cGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGluY2x1ZGUgPSBpbmNsdWRlIHx8IHRoaXMuaW5jbHVkZVR5cGVzLmluY2x1ZGVzKHJvb3RUeXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pbmNsdWRlVGFncyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpbmNsdWRlID1cbiAgICAgICAgICAgICAgICBpbmNsdWRlIHx8IGV2ZW50VGFncy5zb21lKCh0YWcpID0+IHRoaXMuaW5jbHVkZVRhZ3M/LmluY2x1ZGVzKHRhZykpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmV4Y2x1ZGVOYW1lcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpbmNsdWRlID0gaW5jbHVkZSAmJiAhdGhpcy5leGNsdWRlTmFtZXMuaW5jbHVkZXMoZXZlbnQubmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZXhjbHVkZVR5cGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGluY2x1ZGUgPSBpbmNsdWRlICYmICF0aGlzLmV4Y2x1ZGVUeXBlcy5pbmNsdWRlcyhyb290VHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZXhjbHVkZVRhZ3MgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaW5jbHVkZSA9XG4gICAgICAgICAgICAgICAgaW5jbHVkZSAmJiBldmVudFRhZ3MuZXZlcnkoKHRhZykgPT4gIXRoaXMuZXhjbHVkZVRhZ3M/LmluY2x1ZGVzKHRhZykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbmNsdWRlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/wrappers.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/runnables/wrappers.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertToHttpEventStream: () => (/* binding */ convertToHttpEventStream)\n/* harmony export */ });\n/* harmony import */ var _utils_stream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/stream.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js\");\n\nfunction convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return _utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.IterableReadableStream.fromReadableStream(finalStream);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvd3JhcHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEQ7QUFDckQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxzQkFBc0I7QUFDOUY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxXQUFXLG9FQUFzQjtBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9ydW5uYWJsZXMvd3JhcHBlcnMuanM/ZjZhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIi4uL3V0aWxzL3N0cmVhbS5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb0h0dHBFdmVudFN0cmVhbShzdHJlYW0pIHtcbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gICAgY29uc3QgZmluYWxTdHJlYW0gPSBuZXcgUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICBhc3luYyBzdGFydChjb250cm9sbGVyKSB7XG4gICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHN0cmVhbSkge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShlbmNvZGVyLmVuY29kZShgZXZlbnQ6IGRhdGFcXG5kYXRhOiAke0pTT04uc3RyaW5naWZ5KGNodW5rKX1cXG5cXG5gKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoZW5jb2Rlci5lbmNvZGUoXCJldmVudDogZW5kXFxuXFxuXCIpKTtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gSXRlcmFibGVSZWFkYWJsZVN0cmVhbS5mcm9tUmVhZGFibGVTdHJlYW0oZmluYWxTdHJlYW0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/wrappers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/singletons/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/singletons/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncLocalStorageProviderSingleton: () => (/* binding */ AsyncLocalStorageProviderSingleton),\n/* harmony export */   MockAsyncLocalStorage: () => (/* binding */ MockAsyncLocalStorage)\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n}\nclass AsyncLocalStorageProvider {\n    constructor() {\n        Object.defineProperty(this, \"asyncLocalStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new MockAsyncLocalStorage()\n        });\n        Object.defineProperty(this, \"hasBeenInitialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    getInstance() {\n        return this.asyncLocalStorage;\n    }\n    initializeGlobalInstance(instance) {\n        if (!this.hasBeenInitialized) {\n            this.hasBeenInitialized = true;\n            this.asyncLocalStorage = instance;\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC9zaW5nbGV0b25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3Qvc2luZ2xldG9ucy9pbmRleC5qcz8wNTE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbmV4cG9ydCBjbGFzcyBNb2NrQXN5bmNMb2NhbFN0b3JhZ2Uge1xuICAgIGdldFN0b3JlKCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBydW4oX3N0b3JlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgICB9XG59XG5jbGFzcyBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYXN5bmNMb2NhbFN0b3JhZ2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IG5ldyBNb2NrQXN5bmNMb2NhbFN0b3JhZ2UoKVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGFzQmVlbkluaXRpYWxpemVkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFzeW5jTG9jYWxTdG9yYWdlO1xuICAgIH1cbiAgICBpbml0aWFsaXplR2xvYmFsSW5zdGFuY2UoaW5zdGFuY2UpIHtcbiAgICAgICAgaWYgKCF0aGlzLmhhc0JlZW5Jbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5oYXNCZWVuSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5hc3luY0xvY2FsU3RvcmFnZSA9IGluc3RhbmNlO1xuICAgICAgICB9XG4gICAgfVxufVxuY29uc3QgQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbiA9IG5ldyBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyKCk7XG5leHBvcnQgeyBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyU2luZ2xldG9uIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/singletons/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tools.js":
/*!***************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tools.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseToolkit: () => (/* binding */ BaseToolkit),\n/* harmony export */   DynamicStructuredTool: () => (/* binding */ DynamicStructuredTool),\n/* harmony export */   DynamicTool: () => (/* binding */ DynamicTool),\n/* harmony export */   StructuredTool: () => (/* binding */ StructuredTool),\n/* harmony export */   Tool: () => (/* binding */ Tool),\n/* harmony export */   ToolInputParsingException: () => (/* binding */ ToolInputParsingException)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callbacks/manager.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/manager.js\");\n/* harmony import */ var _language_models_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language_models/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/language_models/base.js\");\n/* harmony import */ var _runnables_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runnables/config.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/config.js\");\n\n\n\n\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nclass ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n/**\n * Base class for Tools that accept input of any shape defined by a Zod schema.\n */\nclass StructuredTool extends _language_models_base_js__WEBPACK_IMPORTED_MODULE_1__.BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"tools\"];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"returnDirect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    /**\n     * Invokes the tool with the provided input and configuration.\n     * @param input The input for the tool.\n     * @param config Optional configuration for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async invoke(input, config) {\n        return this.call(input, (0,_runnables_config_js__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(config));\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument, configuration, and tags. It\n     * parses the input according to the schema, handles any errors, and\n     * manages callbacks.\n     * @param arg The input argument for the tool.\n     * @param configArg Optional configuration or callbacks for the tool.\n     * @param tags Optional tags for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        let parsed;\n        try {\n            parsed = await this.schema.parseAsync(arg);\n        }\n        catch (e) {\n            throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(arg));\n        }\n        const config = (0,_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.parseCallbackConfigArg)(configArg);\n        const callbackManager_ = await _callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.CallbackManager.configure(config.callbacks, this.callbacks, config.tags || tags, this.tags, config.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleToolStart(this.toJSON(), typeof parsed === \"string\" ? parsed : JSON.stringify(parsed), config.runId, undefined, undefined, undefined, config.runName);\n        delete config.runId;\n        let result;\n        try {\n            result = await this._call(parsed, runManager, config);\n        }\n        catch (e) {\n            await runManager?.handleToolError(e);\n            throw e;\n        }\n        await runManager?.handleToolEnd(result);\n        return result;\n    }\n}\n/**\n * Base class for Tools that accept input as a string.\n */\nclass Tool extends StructuredTool {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: zod__WEBPACK_IMPORTED_MODULE_3__.z\n                .object({ input: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional() })\n                .transform((obj) => obj.input)\n        });\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument and callbacks. It handles\n     * string inputs specifically.\n     * @param arg The input argument for the tool, which can be a string, undefined, or an input of the tool's schema.\n     * @param callbacks Optional callbacks for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    call(arg, callbacks) {\n        return super.call(typeof arg === \"string\" || !arg ? { input: arg } : arg, callbacks);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and description.\n */\nclass DynamicTool extends Tool {\n    static lc_name() {\n        return \"DynamicTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg) {\n        const config = (0,_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.parseCallbackConfigArg)(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        return super.call(arg, config);\n    }\n    /** @ignore */\n    async _call(input, runManager, config) {\n        return this.func(input, runManager, config);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and\n * description, designed to work with structured data. It extends the\n * StructuredTool class and overrides the _call method to execute the\n * provided function when the tool is called.\n */\nclass DynamicStructuredTool extends StructuredTool {\n    static lc_name() {\n        return \"DynamicStructuredTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n        this.schema = fields.schema;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        const config = (0,_callbacks_manager_js__WEBPACK_IMPORTED_MODULE_0__.parseCallbackConfigArg)(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        return super.call(arg, config, tags);\n    }\n    _call(arg, runManager, config) {\n        return this.func(arg, runManager, config);\n    }\n}\n/**\n * Abstract base class for toolkits in LangChain. Toolkits are collections\n * of tools that agents can use. Subclasses must implement the `tools`\n * property to provide the specific tools for the toolkit.\n */\nclass BaseToolkit {\n    getTools() {\n        return this.tools;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tools.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseTracer: () => (/* binding */ BaseTracer)\n/* harmony export */ });\n/* harmony import */ var _callbacks_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../callbacks/base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/callbacks/base.js\");\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId, executionOrder) {\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\nclass BaseTracer extends _callbacks_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    async _startTrace(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id, run.execution_order);\n        const storedRun = { ...run };\n        if (storedRun.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(storedRun.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        this.runMap.set(storedRun.id, storedRun);\n        await this.onRunCreate?.(storedRun);\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n        await this.onRunUpdate?.(run);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        await this._startTrace(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/console.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/console.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsoleCallbackHandler: () => (/* binding */ ConsoleCallbackHandler)\n/* harmony export */ });\n/* harmony import */ var ansi_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ansi-styles */ \"(rsc)/./node_modules/ansi-styles/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js\");\n\n\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = ansi_styles__WEBPACK_IMPORTED_MODULE_0__;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nclass ConsoleCallbackHandler extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(ansi_styles__WEBPACK_IMPORTED_MODULE_0__.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${run.inputs.input?.trim()}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${run.outputs?.output?.trim()}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC90cmFjZXJzL2NvbnNvbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ007QUFDdkM7QUFDQSxjQUFjLFdBQVcsRUFBRSxLQUFLLEVBQUUsWUFBWTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFFBQVE7QUFDMUI7QUFDQSxjQUFjLDRCQUE0QjtBQUMxQztBQUNBLFFBQVEsUUFBUSxFQUFFLHdDQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ08scUNBQXFDLGdEQUFVO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUJBQXVCLEdBQUcsZ0JBQWdCLEdBQUcsWUFBWTtBQUNyRiwrQ0FBK0MsNkNBQVc7QUFDMUQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0NBQW9DLEdBQUcsT0FBTyxtQ0FBbUMseUNBQXlDO0FBQ2pKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsaUNBQWlDLEdBQUcsT0FBTyxLQUFLLGFBQWEsbUNBQW1DLDJDQUEyQztBQUNsSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtDQUFrQyxHQUFHLE9BQU8sS0FBSyxhQUFhLGtDQUFrQyx1Q0FBdUM7QUFDOUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsdUJBQXVCLGtDQUFrQyxHQUFHLE9BQU8saUNBQWlDLHFDQUFxQztBQUN6STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLCtCQUErQixHQUFHLE9BQU8sS0FBSyxhQUFhLGlDQUFpQyw0Q0FBNEM7QUFDL0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnQ0FBZ0MsR0FBRyxPQUFPLEtBQUssYUFBYSxnQ0FBZ0MsdUNBQXVDO0FBQzFKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUNBQW1DLEdBQUcsT0FBTyxtQ0FBbUMseUJBQXlCO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsZ0NBQWdDLEdBQUcsT0FBTyxLQUFLLGFBQWEsbUNBQW1DLDRCQUE0QjtBQUNsSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlDQUFpQyxHQUFHLE9BQU8sS0FBSyxhQUFhLGlDQUFpQyx1Q0FBdUM7QUFDNUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix3Q0FBd0MsR0FBRyxPQUFPLHVDQUF1Qyx5Q0FBeUM7QUFDeko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixxQ0FBcUMsR0FBRyxPQUFPLEtBQUssYUFBYSx1Q0FBdUMsMkNBQTJDO0FBQzFLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0NBQXNDLEdBQUcsT0FBTyxLQUFLLGFBQWEsc0NBQXNDLHVDQUF1QztBQUN0SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0NBQW9DLEdBQUcsT0FBTywyQkFBMkIsNEVBQTRFO0FBQzVLO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdHJhY2Vycy9jb25zb2xlLmpzPzJlMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlcyBmcm9tIFwiYW5zaS1zdHlsZXNcIjtcbmltcG9ydCB7IEJhc2VUcmFjZXIgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5mdW5jdGlvbiB3cmFwKHN0eWxlLCB0ZXh0KSB7XG4gICAgcmV0dXJuIGAke3N0eWxlLm9wZW59JHt0ZXh0fSR7c3R5bGUuY2xvc2V9YDtcbn1cbmZ1bmN0aW9uIHRyeUpzb25TdHJpbmdpZnkob2JqLCBmYWxsYmFjaykge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShvYmosIG51bGwsIDIpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHJldHVybiBmYWxsYmFjaztcbiAgICB9XG59XG5mdW5jdGlvbiBlbGFwc2VkKHJ1bikge1xuICAgIGlmICghcnVuLmVuZF90aW1lKVxuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICBjb25zdCBlbGFwc2VkID0gcnVuLmVuZF90aW1lIC0gcnVuLnN0YXJ0X3RpbWU7XG4gICAgaWYgKGVsYXBzZWQgPCAxMDAwKSB7XG4gICAgICAgIHJldHVybiBgJHtlbGFwc2VkfW1zYDtcbiAgICB9XG4gICAgcmV0dXJuIGAkeyhlbGFwc2VkIC8gMTAwMCkudG9GaXhlZCgyKX1zYDtcbn1cbmNvbnN0IHsgY29sb3IgfSA9IHN0eWxlcztcbi8qKlxuICogQSB0cmFjZXIgdGhhdCBsb2dzIGFsbCBldmVudHMgdG8gdGhlIGNvbnNvbGUuIEl0IGV4dGVuZHMgZnJvbSB0aGVcbiAqIGBCYXNlVHJhY2VyYCBjbGFzcyBhbmQgb3ZlcnJpZGVzIGl0cyBtZXRob2RzIHRvIHByb3ZpZGUgY3VzdG9tIGxvZ2dpbmdcbiAqIGZ1bmN0aW9uYWxpdHkuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICpcbiAqIGNvbnN0IGxsbSA9IG5ldyBDaGF0QW50aHJvcGljKHtcbiAqICAgdGVtcGVyYXR1cmU6IDAsXG4gKiAgIHRhZ3M6IFtcImV4YW1wbGVcIiwgXCJjYWxsYmFja3NcIiwgXCJjb25zdHJ1Y3RvclwiXSxcbiAqICAgY2FsbGJhY2tzOiBbbmV3IENvbnNvbGVDYWxsYmFja0hhbmRsZXIoKV0sXG4gKiB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIENvbnNvbGVDYWxsYmFja0hhbmRsZXIgZXh0ZW5kcyBCYXNlVHJhY2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJjb25zb2xlX2NhbGxiYWNrX2hhbmRsZXJcIlxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHVzZWQgdG8gcGVyc2lzdCB0aGUgcnVuLiBJbiB0aGlzIGNhc2UsIGl0IHNpbXBseSByZXR1cm5zIGFcbiAgICAgKiByZXNvbHZlZCBwcm9taXNlIGFzIHRoZXJlJ3Mgbm8gcGVyc2lzdGVuY2UgbG9naWMuXG4gICAgICogQHBhcmFtIF9ydW4gVGhlIHJ1biB0byBwZXJzaXN0LlxuICAgICAqIEByZXR1cm5zIEEgcmVzb2x2ZWQgcHJvbWlzZS5cbiAgICAgKi9cbiAgICBwZXJzaXN0UnVuKF9ydW4pIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICAvLyB1dGlsaXR5IG1ldGhvZHNcbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBnZXQgYWxsIHRoZSBwYXJlbnQgcnVucyBvZiBhIGdpdmVuIHJ1bi5cbiAgICAgKiBAcGFyYW0gcnVuIFRoZSBydW4gd2hvc2UgcGFyZW50cyBhcmUgdG8gYmUgcmV0cmlldmVkLlxuICAgICAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHBhcmVudCBydW5zLlxuICAgICAqL1xuICAgIGdldFBhcmVudHMocnVuKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudHMgPSBbXTtcbiAgICAgICAgbGV0IGN1cnJlbnRSdW4gPSBydW47XG4gICAgICAgIHdoaWxlIChjdXJyZW50UnVuLnBhcmVudF9ydW5faWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMucnVuTWFwLmdldChjdXJyZW50UnVuLnBhcmVudF9ydW5faWQpO1xuICAgICAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgICAgIHBhcmVudHMucHVzaChwYXJlbnQpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRSdW4gPSBwYXJlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyZW50cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHVzZWQgdG8gZ2V0IGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBydW4ncyBsaW5lYWdlLCB3aGljaFxuICAgICAqIGlzIHVzZWQgaW4gbG9nZ2luZy5cbiAgICAgKiBAcGFyYW0gcnVuIFRoZSBydW4gd2hvc2UgbGluZWFnZSBpcyB0byBiZSByZXRyaWV2ZWQuXG4gICAgICogQHJldHVybnMgQSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHJ1bidzIGxpbmVhZ2UuXG4gICAgICovXG4gICAgZ2V0QnJlYWRjcnVtYnMocnVuKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudHMgPSB0aGlzLmdldFBhcmVudHMocnVuKS5yZXZlcnNlKCk7XG4gICAgICAgIGNvbnN0IHN0cmluZyA9IFsuLi5wYXJlbnRzLCBydW5dXG4gICAgICAgICAgICAubWFwKChwYXJlbnQsIGksIGFycikgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGAke3BhcmVudC5leGVjdXRpb25fb3JkZXJ9OiR7cGFyZW50LnJ1bl90eXBlfToke3BhcmVudC5uYW1lfWA7XG4gICAgICAgICAgICByZXR1cm4gaSA9PT0gYXJyLmxlbmd0aCAtIDEgPyB3cmFwKHN0eWxlcy5ib2xkLCBuYW1lKSA6IG5hbWU7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbihcIiA+IFwiKTtcbiAgICAgICAgcmV0dXJuIHdyYXAoY29sb3IuZ3JleSwgc3RyaW5nKTtcbiAgICB9XG4gICAgLy8gbG9nZ2luZyBtZXRob2RzXG4gICAgLyoqXG4gICAgICogTWV0aG9kIHVzZWQgdG8gbG9nIHRoZSBzdGFydCBvZiBhIGNoYWluIHJ1bi5cbiAgICAgKiBAcGFyYW0gcnVuIFRoZSBjaGFpbiBydW4gdGhhdCBoYXMgc3RhcnRlZC5cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgb25DaGFpblN0YXJ0KHJ1bikge1xuICAgICAgICBjb25zdCBjcnVtYnMgPSB0aGlzLmdldEJyZWFkY3J1bWJzKHJ1bik7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3dyYXAoY29sb3IuZ3JlZW4sIFwiW2NoYWluL3N0YXJ0XVwiKX0gWyR7Y3J1bWJzfV0gRW50ZXJpbmcgQ2hhaW4gcnVuIHdpdGggaW5wdXQ6ICR7dHJ5SnNvblN0cmluZ2lmeShydW4uaW5wdXRzLCBcIltpbnB1dHNdXCIpfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBsb2cgdGhlIGVuZCBvZiBhIGNoYWluIHJ1bi5cbiAgICAgKiBAcGFyYW0gcnVuIFRoZSBjaGFpbiBydW4gdGhhdCBoYXMgZW5kZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uQ2hhaW5FbmQocnVuKSB7XG4gICAgICAgIGNvbnN0IGNydW1icyA9IHRoaXMuZ2V0QnJlYWRjcnVtYnMocnVuKTtcbiAgICAgICAgY29uc29sZS5sb2coYCR7d3JhcChjb2xvci5jeWFuLCBcIltjaGFpbi9lbmRdXCIpfSBbJHtjcnVtYnN9XSBbJHtlbGFwc2VkKHJ1bil9XSBFeGl0aW5nIENoYWluIHJ1biB3aXRoIG91dHB1dDogJHt0cnlKc29uU3RyaW5naWZ5KHJ1bi5vdXRwdXRzLCBcIltvdXRwdXRzXVwiKX1gKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHVzZWQgdG8gbG9nIGFueSBlcnJvcnMgb2YgYSBjaGFpbiBydW4uXG4gICAgICogQHBhcmFtIHJ1biBUaGUgY2hhaW4gcnVuIHRoYXQgaGFzIGVycm9yZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uQ2hhaW5FcnJvcihydW4pIHtcbiAgICAgICAgY29uc3QgY3J1bWJzID0gdGhpcy5nZXRCcmVhZGNydW1icyhydW4pO1xuICAgICAgICBjb25zb2xlLmxvZyhgJHt3cmFwKGNvbG9yLnJlZCwgXCJbY2hhaW4vZXJyb3JdXCIpfSBbJHtjcnVtYnN9XSBbJHtlbGFwc2VkKHJ1bil9XSBDaGFpbiBydW4gZXJyb3JlZCB3aXRoIGVycm9yOiAke3RyeUpzb25TdHJpbmdpZnkocnVuLmVycm9yLCBcIltlcnJvcl1cIil9YCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB1c2VkIHRvIGxvZyB0aGUgc3RhcnQgb2YgYW4gTExNIHJ1bi5cbiAgICAgKiBAcGFyYW0gcnVuIFRoZSBMTE0gcnVuIHRoYXQgaGFzIHN0YXJ0ZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uTExNU3RhcnQocnVuKSB7XG4gICAgICAgIGNvbnN0IGNydW1icyA9IHRoaXMuZ2V0QnJlYWRjcnVtYnMocnVuKTtcbiAgICAgICAgY29uc3QgaW5wdXRzID0gXCJwcm9tcHRzXCIgaW4gcnVuLmlucHV0c1xuICAgICAgICAgICAgPyB7IHByb21wdHM6IHJ1bi5pbnB1dHMucHJvbXB0cy5tYXAoKHApID0+IHAudHJpbSgpKSB9XG4gICAgICAgICAgICA6IHJ1bi5pbnB1dHM7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3dyYXAoY29sb3IuZ3JlZW4sIFwiW2xsbS9zdGFydF1cIil9IFske2NydW1ic31dIEVudGVyaW5nIExMTSBydW4gd2l0aCBpbnB1dDogJHt0cnlKc29uU3RyaW5naWZ5KGlucHV0cywgXCJbaW5wdXRzXVwiKX1gKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHVzZWQgdG8gbG9nIHRoZSBlbmQgb2YgYW4gTExNIHJ1bi5cbiAgICAgKiBAcGFyYW0gcnVuIFRoZSBMTE0gcnVuIHRoYXQgaGFzIGVuZGVkLlxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBvbkxMTUVuZChydW4pIHtcbiAgICAgICAgY29uc3QgY3J1bWJzID0gdGhpcy5nZXRCcmVhZGNydW1icyhydW4pO1xuICAgICAgICBjb25zb2xlLmxvZyhgJHt3cmFwKGNvbG9yLmN5YW4sIFwiW2xsbS9lbmRdXCIpfSBbJHtjcnVtYnN9XSBbJHtlbGFwc2VkKHJ1bil9XSBFeGl0aW5nIExMTSBydW4gd2l0aCBvdXRwdXQ6ICR7dHJ5SnNvblN0cmluZ2lmeShydW4ub3V0cHV0cywgXCJbcmVzcG9uc2VdXCIpfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBsb2cgYW55IGVycm9ycyBvZiBhbiBMTE0gcnVuLlxuICAgICAqIEBwYXJhbSBydW4gVGhlIExMTSBydW4gdGhhdCBoYXMgZXJyb3JlZC5cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgb25MTE1FcnJvcihydW4pIHtcbiAgICAgICAgY29uc3QgY3J1bWJzID0gdGhpcy5nZXRCcmVhZGNydW1icyhydW4pO1xuICAgICAgICBjb25zb2xlLmxvZyhgJHt3cmFwKGNvbG9yLnJlZCwgXCJbbGxtL2Vycm9yXVwiKX0gWyR7Y3J1bWJzfV0gWyR7ZWxhcHNlZChydW4pfV0gTExNIHJ1biBlcnJvcmVkIHdpdGggZXJyb3I6ICR7dHJ5SnNvblN0cmluZ2lmeShydW4uZXJyb3IsIFwiW2Vycm9yXVwiKX1gKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHVzZWQgdG8gbG9nIHRoZSBzdGFydCBvZiBhIHRvb2wgcnVuLlxuICAgICAqIEBwYXJhbSBydW4gVGhlIHRvb2wgcnVuIHRoYXQgaGFzIHN0YXJ0ZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uVG9vbFN0YXJ0KHJ1bikge1xuICAgICAgICBjb25zdCBjcnVtYnMgPSB0aGlzLmdldEJyZWFkY3J1bWJzKHJ1bik7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3dyYXAoY29sb3IuZ3JlZW4sIFwiW3Rvb2wvc3RhcnRdXCIpfSBbJHtjcnVtYnN9XSBFbnRlcmluZyBUb29sIHJ1biB3aXRoIGlucHV0OiBcIiR7cnVuLmlucHV0cy5pbnB1dD8udHJpbSgpfVwiYCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB1c2VkIHRvIGxvZyB0aGUgZW5kIG9mIGEgdG9vbCBydW4uXG4gICAgICogQHBhcmFtIHJ1biBUaGUgdG9vbCBydW4gdGhhdCBoYXMgZW5kZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uVG9vbEVuZChydW4pIHtcbiAgICAgICAgY29uc3QgY3J1bWJzID0gdGhpcy5nZXRCcmVhZGNydW1icyhydW4pO1xuICAgICAgICBjb25zb2xlLmxvZyhgJHt3cmFwKGNvbG9yLmN5YW4sIFwiW3Rvb2wvZW5kXVwiKX0gWyR7Y3J1bWJzfV0gWyR7ZWxhcHNlZChydW4pfV0gRXhpdGluZyBUb29sIHJ1biB3aXRoIG91dHB1dDogXCIke3J1bi5vdXRwdXRzPy5vdXRwdXQ/LnRyaW0oKX1cImApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBsb2cgYW55IGVycm9ycyBvZiBhIHRvb2wgcnVuLlxuICAgICAqIEBwYXJhbSBydW4gVGhlIHRvb2wgcnVuIHRoYXQgaGFzIGVycm9yZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uVG9vbEVycm9yKHJ1bikge1xuICAgICAgICBjb25zdCBjcnVtYnMgPSB0aGlzLmdldEJyZWFkY3J1bWJzKHJ1bik7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3dyYXAoY29sb3IucmVkLCBcIlt0b29sL2Vycm9yXVwiKX0gWyR7Y3J1bWJzfV0gWyR7ZWxhcHNlZChydW4pfV0gVG9vbCBydW4gZXJyb3JlZCB3aXRoIGVycm9yOiAke3RyeUpzb25TdHJpbmdpZnkocnVuLmVycm9yLCBcIltlcnJvcl1cIil9YCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB1c2VkIHRvIGxvZyB0aGUgc3RhcnQgb2YgYSByZXRyaWV2ZXIgcnVuLlxuICAgICAqIEBwYXJhbSBydW4gVGhlIHJldHJpZXZlciBydW4gdGhhdCBoYXMgc3RhcnRlZC5cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgb25SZXRyaWV2ZXJTdGFydChydW4pIHtcbiAgICAgICAgY29uc3QgY3J1bWJzID0gdGhpcy5nZXRCcmVhZGNydW1icyhydW4pO1xuICAgICAgICBjb25zb2xlLmxvZyhgJHt3cmFwKGNvbG9yLmdyZWVuLCBcIltyZXRyaWV2ZXIvc3RhcnRdXCIpfSBbJHtjcnVtYnN9XSBFbnRlcmluZyBSZXRyaWV2ZXIgcnVuIHdpdGggaW5wdXQ6ICR7dHJ5SnNvblN0cmluZ2lmeShydW4uaW5wdXRzLCBcIltpbnB1dHNdXCIpfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBsb2cgdGhlIGVuZCBvZiBhIHJldHJpZXZlciBydW4uXG4gICAgICogQHBhcmFtIHJ1biBUaGUgcmV0cmlldmVyIHJ1biB0aGF0IGhhcyBlbmRlZC5cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgb25SZXRyaWV2ZXJFbmQocnVuKSB7XG4gICAgICAgIGNvbnN0IGNydW1icyA9IHRoaXMuZ2V0QnJlYWRjcnVtYnMocnVuKTtcbiAgICAgICAgY29uc29sZS5sb2coYCR7d3JhcChjb2xvci5jeWFuLCBcIltyZXRyaWV2ZXIvZW5kXVwiKX0gWyR7Y3J1bWJzfV0gWyR7ZWxhcHNlZChydW4pfV0gRXhpdGluZyBSZXRyaWV2ZXIgcnVuIHdpdGggb3V0cHV0OiAke3RyeUpzb25TdHJpbmdpZnkocnVuLm91dHB1dHMsIFwiW291dHB1dHNdXCIpfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBsb2cgYW55IGVycm9ycyBvZiBhIHJldHJpZXZlciBydW4uXG4gICAgICogQHBhcmFtIHJ1biBUaGUgcmV0cmlldmVyIHJ1biB0aGF0IGhhcyBlcnJvcmVkLlxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBvblJldHJpZXZlckVycm9yKHJ1bikge1xuICAgICAgICBjb25zdCBjcnVtYnMgPSB0aGlzLmdldEJyZWFkY3J1bWJzKHJ1bik7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3dyYXAoY29sb3IucmVkLCBcIltyZXRyaWV2ZXIvZXJyb3JdXCIpfSBbJHtjcnVtYnN9XSBbJHtlbGFwc2VkKHJ1bil9XSBSZXRyaWV2ZXIgcnVuIGVycm9yZWQgd2l0aCBlcnJvcjogJHt0cnlKc29uU3RyaW5naWZ5KHJ1bi5lcnJvciwgXCJbZXJyb3JdXCIpfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdXNlZCB0byBsb2cgdGhlIGFjdGlvbiBzZWxlY3RlZCBieSB0aGUgYWdlbnQuXG4gICAgICogQHBhcmFtIHJ1biBUaGUgcnVuIGluIHdoaWNoIHRoZSBhZ2VudCBhY3Rpb24gb2NjdXJyZWQuXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIG9uQWdlbnRBY3Rpb24ocnVuKSB7XG4gICAgICAgIGNvbnN0IGFnZW50UnVuID0gcnVuO1xuICAgICAgICBjb25zdCBjcnVtYnMgPSB0aGlzLmdldEJyZWFkY3J1bWJzKHJ1bik7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3dyYXAoY29sb3IuYmx1ZSwgXCJbYWdlbnQvYWN0aW9uXVwiKX0gWyR7Y3J1bWJzfV0gQWdlbnQgc2VsZWN0ZWQgYWN0aW9uOiAke3RyeUpzb25TdHJpbmdpZnkoYWdlbnRSdW4uYWN0aW9uc1thZ2VudFJ1bi5hY3Rpb25zLmxlbmd0aCAtIDFdLCBcIlthY3Rpb25dXCIpfWApO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/console.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/initialize.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/initialize.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTracingCallbackHandler: () => (/* binding */ getTracingCallbackHandler),\n/* harmony export */   getTracingV2CallbackHandler: () => (/* binding */ getTracingV2CallbackHandler)\n/* harmony export */ });\n/* harmony import */ var _tracer_langchain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracer_langchain.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain.js\");\n/* harmony import */ var _tracer_langchain_v1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracer_langchain_v1.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain_v1.js\");\n\n\n/**\n * @deprecated Use the V2 handler instead.\n *\n * Function that returns an instance of `LangChainTracerV1`. If a session\n * is provided, it loads that session into the tracer; otherwise, it loads\n * a default session.\n * @param session Optional session to load into the tracer.\n * @returns An instance of `LangChainTracerV1`.\n */\nasync function getTracingCallbackHandler(session) {\n    const tracer = new _tracer_langchain_v1_js__WEBPACK_IMPORTED_MODULE_1__.LangChainTracerV1();\n    if (session) {\n        await tracer.loadSession(session);\n    }\n    else {\n        await tracer.loadDefaultSession();\n    }\n    return tracer;\n}\n/**\n * Function that returns an instance of `LangChainTracer`. It does not\n * load any session data.\n * @returns An instance of `LangChainTracer`.\n */\nasync function getTracingV2CallbackHandler() {\n    return new _tracer_langchain_js__WEBPACK_IMPORTED_MODULE_0__.LangChainTracer();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC90cmFjZXJzL2luaXRpYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNLO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx1QkFBdUIsc0VBQWlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxlQUFlLGlFQUFlO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3RyYWNlcnMvaW5pdGlhbGl6ZS5qcz85OTJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExhbmdDaGFpblRyYWNlciB9IGZyb20gXCIuL3RyYWNlcl9sYW5nY2hhaW4uanNcIjtcbmltcG9ydCB7IExhbmdDaGFpblRyYWNlclYxIH0gZnJvbSBcIi4vdHJhY2VyX2xhbmdjaGFpbl92MS5qc1wiO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgdGhlIFYyIGhhbmRsZXIgaW5zdGVhZC5cbiAqXG4gKiBGdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gaW5zdGFuY2Ugb2YgYExhbmdDaGFpblRyYWNlclYxYC4gSWYgYSBzZXNzaW9uXG4gKiBpcyBwcm92aWRlZCwgaXQgbG9hZHMgdGhhdCBzZXNzaW9uIGludG8gdGhlIHRyYWNlcjsgb3RoZXJ3aXNlLCBpdCBsb2Fkc1xuICogYSBkZWZhdWx0IHNlc3Npb24uXG4gKiBAcGFyYW0gc2Vzc2lvbiBPcHRpb25hbCBzZXNzaW9uIHRvIGxvYWQgaW50byB0aGUgdHJhY2VyLlxuICogQHJldHVybnMgQW4gaW5zdGFuY2Ugb2YgYExhbmdDaGFpblRyYWNlclYxYC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRyYWNpbmdDYWxsYmFja0hhbmRsZXIoc2Vzc2lvbikge1xuICAgIGNvbnN0IHRyYWNlciA9IG5ldyBMYW5nQ2hhaW5UcmFjZXJWMSgpO1xuICAgIGlmIChzZXNzaW9uKSB7XG4gICAgICAgIGF3YWl0IHRyYWNlci5sb2FkU2Vzc2lvbihzZXNzaW9uKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGF3YWl0IHRyYWNlci5sb2FkRGVmYXVsdFNlc3Npb24oKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYWNlcjtcbn1cbi8qKlxuICogRnVuY3Rpb24gdGhhdCByZXR1cm5zIGFuIGluc3RhbmNlIG9mIGBMYW5nQ2hhaW5UcmFjZXJgLiBJdCBkb2VzIG5vdFxuICogbG9hZCBhbnkgc2Vzc2lvbiBkYXRhLlxuICogQHJldHVybnMgQW4gaW5zdGFuY2Ugb2YgYExhbmdDaGFpblRyYWNlcmAuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUcmFjaW5nVjJDYWxsYmFja0hhbmRsZXIoKSB7XG4gICAgcmV0dXJuIG5ldyBMYW5nQ2hhaW5UcmFjZXIoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/initialize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/log_stream.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/log_stream.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogStreamCallbackHandler: () => (/* binding */ LogStreamCallbackHandler),\n/* harmony export */   RunLog: () => (/* binding */ RunLog),\n/* harmony export */   RunLogPatch: () => (/* binding */ RunLogPatch)\n/* harmony export */ });\n/* harmony import */ var _utils_fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/fast-json-patch/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/index.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js\");\n/* harmony import */ var _utils_stream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/stream.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js\");\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n\n\n\n\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nclass RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops ?? [];\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = (0,_utils_fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__.applyPatch)({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nclass RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = (0,_utils_fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__.applyPatch)(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n    static fromRunLogPatch(patch) {\n        const states = (0,_utils_fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__.applyPatch)({}, patch.ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops: patch.ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run, schemaFormat) {\n    if (schemaFormat === \"original\") {\n        throw new Error(\"Do not assign inputs with original schema drop the key for now. \" +\n            \"When inputs are added to streamLog they should be added with \" +\n            \"standardized schema for streaming events.\");\n    }\n    const { inputs } = run;\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return inputs;\n    }\n    if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n        return undefined;\n    }\n    // new style chains\n    // These nest an additional 'input' key inside the 'inputs' to make sure\n    // the input is always a dict. We need to unpack and user the inner value.\n    // We should try to fix this in Runnables and callbacks/tracers\n    // Runnables should be using a null type here not a placeholder\n    // dict.\n    return inputs.input;\n}\nasync function _getStandardizedOutputs(run, schemaFormat) {\n    const { outputs } = run;\n    if (schemaFormat === \"original\") {\n        // Return the old schema, without standardizing anything\n        return outputs;\n    }\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return outputs;\n    }\n    // TODO: Remove this hacky check\n    if (outputs !== undefined &&\n        Object.keys(outputs).length === 1 &&\n        outputs?.output !== undefined) {\n        return outputs.output;\n    }\n    return outputs;\n}\nfunction isChatGenerationChunk(x) {\n    return x !== undefined && x.message !== undefined;\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nclass LogStreamCallbackHandler extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_schemaFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"original\"\n        });\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = _utils_stream_js__WEBPACK_IMPORTED_MODULE_2__.IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.id === this.rootId) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, output) {\n        // Tap an output async iterator to stream its values to the log.\n        for await (const chunk of output) {\n            // root run is handled in .streamLog()\n            if (runId !== this.rootId) {\n                // if we can't find the run silently ignore\n                // eg. because this run wasn't included in the log\n                const key = this.keyMapByRunId[runId];\n                if (key) {\n                    await this.writer.write(new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: `/logs/${key}/streamed_output/-`,\n                                value: chunk,\n                            },\n                        ],\n                    }));\n                }\n            }\n            yield chunk;\n        }\n    }\n    async onRunCreate(run) {\n        if (this.rootId === undefined) {\n            this.rootId = run.id;\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            name: run.name,\n                            type: run.run_type,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output: [],\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        if (this._schemaFormat === \"streaming_events\") {\n            logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n        }\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [];\n            if (this._schemaFormat === \"streaming_events\") {\n                ops.push({\n                    op: \"replace\",\n                    path: `/logs/${runName}/inputs`,\n                    value: await _getStandardizedInputs(run, this._schemaFormat),\n                });\n            }\n            ops.push({\n                op: \"add\",\n                path: `/logs/${runName}/final_output`,\n                value: await _getStandardizedOutputs(run, this._schemaFormat),\n            });\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.id === this.rootId) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: await _getStandardizedOutputs(run, this._schemaFormat),\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token, kwargs) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        // TODO: Remove hack\n        const isChatModel = run.inputs.messages !== undefined;\n        let streamedOutputValue;\n        if (isChatModel) {\n            if (isChatGenerationChunk(kwargs?.chunk)) {\n                streamedOutputValue = kwargs?.chunk;\n            }\n            else {\n                streamedOutputValue = new _messages_index_js__WEBPACK_IMPORTED_MODULE_3__.AIMessageChunk(token);\n            }\n        }\n        else {\n            streamedOutputValue = token;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output/-`,\n                    value: streamedOutputValue,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/log_stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/root_listener.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/root_listener.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RootListenersTracer: () => (/* binding */ RootListenersTracer)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js\");\n\nclass RootListenersTracer extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super({ _awaitHandler: true });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            if (this.argOnStart.length === 1) {\n                await this.argOnStart(run);\n            }\n            else if (this.argOnStart.length === 2) {\n                await this.argOnStart(run, this.config);\n            }\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                if (this.argOnEnd.length === 1) {\n                    await this.argOnEnd(run);\n                }\n                else if (this.argOnEnd.length === 2) {\n                    await this.argOnEnd(run, this.config);\n                }\n            }\n        }\n        else if (this.argOnError) {\n            if (this.argOnError.length === 1) {\n                await this.argOnError(run);\n            }\n            else if (this.argOnError.length === 2) {\n                await this.argOnError(run, this.config);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC90cmFjZXJzL3Jvb3RfbGlzdGVuZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDaEMsa0NBQWtDLGdEQUFVO0FBQ25ELGtCQUFrQixrQ0FBa0M7QUFDcEQsZ0JBQWdCLHFCQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3RyYWNlcnMvcm9vdF9saXN0ZW5lci5qcz83NWY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VUcmFjZXIgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5leHBvcnQgY2xhc3MgUm9vdExpc3RlbmVyc1RyYWNlciBleHRlbmRzIEJhc2VUcmFjZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgY29uZmlnLCBvblN0YXJ0LCBvbkVuZCwgb25FcnJvciwgfSkge1xuICAgICAgICBzdXBlcih7IF9hd2FpdEhhbmRsZXI6IHRydWUgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwiUm9vdExpc3RlbmVyc1RyYWNlclwiXG4gICAgICAgIH0pO1xuICAgICAgICAvKiogVGhlIFJ1bidzIElELiBUeXBlIFVVSUQgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicm9vdElkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvbmZpZ1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJhcmdPblN0YXJ0XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFyZ09uRW5kXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFyZ09uRXJyb3JcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgICAgIHRoaXMuYXJnT25TdGFydCA9IG9uU3RhcnQ7XG4gICAgICAgIHRoaXMuYXJnT25FbmQgPSBvbkVuZDtcbiAgICAgICAgdGhpcy5hcmdPbkVycm9yID0gb25FcnJvcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBpcyBhIGxlZ2FjeSBtZXRob2Qgb25seSBjYWxsZWQgb25jZSBmb3IgYW4gZW50aXJlIHJ1biB0cmVlXG4gICAgICogdGhlcmVmb3JlIG5vdCB1c2VmdWwgaGVyZVxuICAgICAqIEBwYXJhbSB7UnVufSBfIE5vdCB1c2VkXG4gICAgICovXG4gICAgcGVyc2lzdFJ1bihfKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gICAgYXN5bmMgb25SdW5DcmVhdGUocnVuKSB7XG4gICAgICAgIGlmICh0aGlzLnJvb3RJZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucm9vdElkID0gcnVuLmlkO1xuICAgICAgICBpZiAodGhpcy5hcmdPblN0YXJ0KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hcmdPblN0YXJ0Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuYXJnT25TdGFydChydW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5hcmdPblN0YXJ0Lmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuYXJnT25TdGFydChydW4sIHRoaXMuY29uZmlnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBvblJ1blVwZGF0ZShydW4pIHtcbiAgICAgICAgaWYgKHJ1bi5pZCAhPT0gdGhpcy5yb290SWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJ1bi5lcnJvcikge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXJnT25FbmQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hcmdPbkVuZC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5hcmdPbkVuZChydW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLmFyZ09uRW5kLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmFyZ09uRW5kKHJ1biwgdGhpcy5jb25maWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLmFyZ09uRXJyb3IpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmFyZ09uRXJyb3IubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5hcmdPbkVycm9yKHJ1bik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLmFyZ09uRXJyb3IubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5hcmdPbkVycm9yKHJ1biwgdGhpcy5jb25maWcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/root_listener.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LangChainTracer: () => (/* binding */ LangChainTracer)\n/* harmony export */ });\n/* harmony import */ var langsmith__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! langsmith */ \"(rsc)/./node_modules/langsmith/index.js\");\n/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/env.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js\");\n\n\n\nclass LangChainTracer extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_1__.getEnvironmentVariable)(\"LANGCHAIN_PROJECT\") ??\n                (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_1__.getEnvironmentVariable)(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? new langsmith__WEBPACK_IMPORTED_MODULE_0__.Client({});\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_1__.getRuntimeEnvironment)(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async onRunUpdate(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n            inputs: run.inputs,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            parent_run_id: run.parent_run_id,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    getRun(id) {\n        return this.runMap.get(id);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC90cmFjZXJzL3RyYWNlcl9sYW5nY2hhaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtQztBQUM2QztBQUN6QztBQUNoQyw4QkFBOEIsZ0RBQVU7QUFDL0MsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxnQkFBZ0IsaUNBQWlDO0FBQ2pEO0FBQ0E7QUFDQSxnQkFBZ0IscUVBQXNCO0FBQ3RDLGdCQUFnQixxRUFBc0I7QUFDdEM7QUFDQSxvQ0FBb0MsNkNBQU0sR0FBRztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isb0VBQXFCO0FBQ3BELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdHJhY2Vycy90cmFjZXJfbGFuZ2NoYWluLmpzP2Y5MjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSBcImxhbmdzbWl0aFwiO1xuaW1wb3J0IHsgZ2V0RW52aXJvbm1lbnRWYXJpYWJsZSwgZ2V0UnVudGltZUVudmlyb25tZW50IH0gZnJvbSBcIi4uL3V0aWxzL2Vudi5qc1wiO1xuaW1wb3J0IHsgQmFzZVRyYWNlciB9IGZyb20gXCIuL2Jhc2UuanNcIjtcbmV4cG9ydCBjbGFzcyBMYW5nQ2hhaW5UcmFjZXIgZXh0ZW5kcyBCYXNlVHJhY2VyIHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMgPSB7fSkge1xuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcImxhbmdjaGFpbl90cmFjZXJcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicHJvamVjdE5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZXhhbXBsZUlkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNsaWVudFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB7IGV4YW1wbGVJZCwgcHJvamVjdE5hbWUsIGNsaWVudCB9ID0gZmllbGRzO1xuICAgICAgICB0aGlzLnByb2plY3ROYW1lID1cbiAgICAgICAgICAgIHByb2plY3ROYW1lID8/XG4gICAgICAgICAgICAgICAgZ2V0RW52aXJvbm1lbnRWYXJpYWJsZShcIkxBTkdDSEFJTl9QUk9KRUNUXCIpID8/XG4gICAgICAgICAgICAgICAgZ2V0RW52aXJvbm1lbnRWYXJpYWJsZShcIkxBTkdDSEFJTl9TRVNTSU9OXCIpO1xuICAgICAgICB0aGlzLmV4YW1wbGVJZCA9IGV4YW1wbGVJZDtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQgPz8gbmV3IENsaWVudCh7fSk7XG4gICAgfVxuICAgIGFzeW5jIF9jb252ZXJ0VG9DcmVhdGUocnVuLCBleGFtcGxlX2lkID0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5ydW4sXG4gICAgICAgICAgICBleHRyYToge1xuICAgICAgICAgICAgICAgIC4uLnJ1bi5leHRyYSxcbiAgICAgICAgICAgICAgICBydW50aW1lOiBhd2FpdCBnZXRSdW50aW1lRW52aXJvbm1lbnQoKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZF9ydW5zOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBzZXNzaW9uX25hbWU6IHRoaXMucHJvamVjdE5hbWUsXG4gICAgICAgICAgICByZWZlcmVuY2VfZXhhbXBsZV9pZDogcnVuLnBhcmVudF9ydW5faWQgPyB1bmRlZmluZWQgOiBleGFtcGxlX2lkLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBhc3luYyBwZXJzaXN0UnVuKF9ydW4pIHsgfVxuICAgIGFzeW5jIG9uUnVuQ3JlYXRlKHJ1bikge1xuICAgICAgICBjb25zdCBwZXJzaXN0ZWRSdW4gPSBhd2FpdCB0aGlzLl9jb252ZXJ0VG9DcmVhdGUocnVuLCB0aGlzLmV4YW1wbGVJZCk7XG4gICAgICAgIGF3YWl0IHRoaXMuY2xpZW50LmNyZWF0ZVJ1bihwZXJzaXN0ZWRSdW4pO1xuICAgIH1cbiAgICBhc3luYyBvblJ1blVwZGF0ZShydW4pIHtcbiAgICAgICAgY29uc3QgcnVuVXBkYXRlID0ge1xuICAgICAgICAgICAgZW5kX3RpbWU6IHJ1bi5lbmRfdGltZSxcbiAgICAgICAgICAgIGVycm9yOiBydW4uZXJyb3IsXG4gICAgICAgICAgICBvdXRwdXRzOiBydW4ub3V0cHV0cyxcbiAgICAgICAgICAgIGV2ZW50czogcnVuLmV2ZW50cyxcbiAgICAgICAgICAgIGlucHV0czogcnVuLmlucHV0cyxcbiAgICAgICAgICAgIHRyYWNlX2lkOiBydW4udHJhY2VfaWQsXG4gICAgICAgICAgICBkb3R0ZWRfb3JkZXI6IHJ1bi5kb3R0ZWRfb3JkZXIsXG4gICAgICAgICAgICBwYXJlbnRfcnVuX2lkOiBydW4ucGFyZW50X3J1bl9pZCxcbiAgICAgICAgfTtcbiAgICAgICAgYXdhaXQgdGhpcy5jbGllbnQudXBkYXRlUnVuKHJ1bi5pZCwgcnVuVXBkYXRlKTtcbiAgICB9XG4gICAgZ2V0UnVuKGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJ1bk1hcC5nZXQoaWQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain_v1.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain_v1.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LangChainTracerV1: () => (/* binding */ LangChainTracerV1)\n/* harmony export */ });\n/* harmony import */ var _messages_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messages/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js\");\n/* harmony import */ var _utils_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/env.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/base.js\");\n\n\n\n/** @deprecated Use LangChainTracer instead. */\nclass LangChainTracerV1 extends _base_js__WEBPACK_IMPORTED_MODULE_2__.BaseTracer {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"endpoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_1__.getEnvironmentVariable)(\"LANGCHAIN_ENDPOINT\") || \"http://localhost:1984\"\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                \"Content-Type\": \"application/json\",\n            }\n        });\n        Object.defineProperty(this, \"session\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const apiKey = (0,_utils_env_js__WEBPACK_IMPORTED_MODULE_1__.getEnvironmentVariable)(\"LANGCHAIN_API_KEY\");\n        if (apiKey) {\n            this.headers[\"x-api-key\"] = apiKey;\n        }\n    }\n    async newSession(sessionName) {\n        const sessionCreate = {\n            start_time: Date.now(),\n            name: sessionName,\n        };\n        const session = await this.persistSession(sessionCreate);\n        this.session = session;\n        return session;\n    }\n    async loadSession(sessionName) {\n        const endpoint = `${this.endpoint}/sessions?name=${sessionName}`;\n        return this._handleSessionResponse(endpoint);\n    }\n    async loadDefaultSession() {\n        const endpoint = `${this.endpoint}/sessions?name=default`;\n        return this._handleSessionResponse(endpoint);\n    }\n    async convertV2RunToRun(run) {\n        const session = this.session ?? (await this.loadDefaultSession());\n        const serialized = run.serialized;\n        let runResult;\n        if (run.run_type === \"llm\") {\n            const prompts = run.inputs.prompts\n                ? run.inputs.prompts\n                : run.inputs.messages.map((x) => (0,_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.getBufferString)(x));\n            const llmRun = {\n                uuid: run.id,\n                start_time: run.start_time,\n                end_time: run.end_time,\n                execution_order: run.execution_order,\n                child_execution_order: run.child_execution_order,\n                serialized,\n                type: run.run_type,\n                session_id: session.id,\n                prompts,\n                response: run.outputs,\n            };\n            runResult = llmRun;\n        }\n        else if (run.run_type === \"chain\") {\n            const child_runs = await Promise.all(run.child_runs.map((child_run) => this.convertV2RunToRun(child_run)));\n            const chainRun = {\n                uuid: run.id,\n                start_time: run.start_time,\n                end_time: run.end_time,\n                execution_order: run.execution_order,\n                child_execution_order: run.child_execution_order,\n                serialized,\n                type: run.run_type,\n                session_id: session.id,\n                inputs: run.inputs,\n                outputs: run.outputs,\n                child_llm_runs: child_runs.filter((child_run) => child_run.type === \"llm\"),\n                child_chain_runs: child_runs.filter((child_run) => child_run.type === \"chain\"),\n                child_tool_runs: child_runs.filter((child_run) => child_run.type === \"tool\"),\n            };\n            runResult = chainRun;\n        }\n        else if (run.run_type === \"tool\") {\n            const child_runs = await Promise.all(run.child_runs.map((child_run) => this.convertV2RunToRun(child_run)));\n            const toolRun = {\n                uuid: run.id,\n                start_time: run.start_time,\n                end_time: run.end_time,\n                execution_order: run.execution_order,\n                child_execution_order: run.child_execution_order,\n                serialized,\n                type: run.run_type,\n                session_id: session.id,\n                tool_input: run.inputs.input,\n                output: run.outputs?.output,\n                action: JSON.stringify(serialized),\n                child_llm_runs: child_runs.filter((child_run) => child_run.type === \"llm\"),\n                child_chain_runs: child_runs.filter((child_run) => child_run.type === \"chain\"),\n                child_tool_runs: child_runs.filter((child_run) => child_run.type === \"tool\"),\n            };\n            runResult = toolRun;\n        }\n        else {\n            throw new Error(`Unknown run type: ${run.run_type}`);\n        }\n        return runResult;\n    }\n    async persistRun(run) {\n        let endpoint;\n        let v1Run;\n        if (run.run_type !== undefined) {\n            v1Run = await this.convertV2RunToRun(run);\n        }\n        else {\n            v1Run = run;\n        }\n        if (v1Run.type === \"llm\") {\n            endpoint = `${this.endpoint}/llm-runs`;\n        }\n        else if (v1Run.type === \"chain\") {\n            endpoint = `${this.endpoint}/chain-runs`;\n        }\n        else {\n            endpoint = `${this.endpoint}/tool-runs`;\n        }\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(v1Run),\n        });\n        if (!response.ok) {\n            console.error(`Failed to persist run: ${response.status} ${response.statusText}`);\n        }\n    }\n    async persistSession(sessionCreate) {\n        const endpoint = `${this.endpoint}/sessions`;\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(sessionCreate),\n        });\n        if (!response.ok) {\n            console.error(`Failed to persist session: ${response.status} ${response.statusText}, using default session.`);\n            return {\n                id: 1,\n                ...sessionCreate,\n            };\n        }\n        return {\n            id: (await response.json()).id,\n            ...sessionCreate,\n        };\n    }\n    async _handleSessionResponse(endpoint) {\n        const response = await fetch(endpoint, {\n            method: \"GET\",\n            headers: this.headers,\n        });\n        let tracerSession;\n        if (!response.ok) {\n            console.error(`Failed to load session: ${response.status} ${response.statusText}`);\n            tracerSession = {\n                id: 1,\n                start_time: Date.now(),\n            };\n            this.session = tracerSession;\n            return tracerSession;\n        }\n        const resp = (await response.json());\n        if (resp.length === 0) {\n            tracerSession = {\n                id: 1,\n                start_time: Date.now(),\n            };\n            this.session = tracerSession;\n            return tracerSession;\n        }\n        [tracerSession] = resp;\n        this.session = tracerSession;\n        return tracerSession;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC90cmFjZXJzL3RyYWNlcl9sYW5nY2hhaW5fdjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1RDtBQUNFO0FBQ2xCO0FBQ3ZDO0FBQ08sZ0NBQWdDLGdEQUFVO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFFQUFzQjtBQUN6QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCx1QkFBdUIscUVBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsY0FBYyxpQkFBaUIsWUFBWTtBQUN2RTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsY0FBYztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsbUVBQWU7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGFBQWE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsY0FBYztBQUN4QztBQUNBO0FBQ0EsMEJBQTBCLGNBQWM7QUFDeEM7QUFDQTtBQUNBLDBCQUEwQixjQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxvREFBb0QsaUJBQWlCLEVBQUUsb0JBQW9CO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esd0RBQXdELGlCQUFpQixFQUFFLG9CQUFvQjtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxREFBcUQsaUJBQWlCLEVBQUUsb0JBQW9CO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC90cmFjZXJzL3RyYWNlcl9sYW5nY2hhaW5fdjEuanM/ZTU2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRCdWZmZXJTdHJpbmcgfSBmcm9tIFwiLi4vbWVzc2FnZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IGdldEVudmlyb25tZW50VmFyaWFibGUgfSBmcm9tIFwiLi4vdXRpbHMvZW52LmpzXCI7XG5pbXBvcnQgeyBCYXNlVHJhY2VyIH0gZnJvbSBcIi4vYmFzZS5qc1wiO1xuLyoqIEBkZXByZWNhdGVkIFVzZSBMYW5nQ2hhaW5UcmFjZXIgaW5zdGVhZC4gKi9cbmV4cG9ydCBjbGFzcyBMYW5nQ2hhaW5UcmFjZXJWMSBleHRlbmRzIEJhc2VUcmFjZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcImxhbmdjaGFpbl90cmFjZXJcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZW5kcG9pbnRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IGdldEVudmlyb25tZW50VmFyaWFibGUoXCJMQU5HQ0hBSU5fRU5EUE9JTlRcIikgfHwgXCJodHRwOi8vbG9jYWxob3N0OjE5ODRcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2Vzc2lvblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBhcGlLZXkgPSBnZXRFbnZpcm9ubWVudFZhcmlhYmxlKFwiTEFOR0NIQUlOX0FQSV9LRVlcIik7XG4gICAgICAgIGlmIChhcGlLZXkpIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyc1tcIngtYXBpLWtleVwiXSA9IGFwaUtleTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBuZXdTZXNzaW9uKHNlc3Npb25OYW1lKSB7XG4gICAgICAgIGNvbnN0IHNlc3Npb25DcmVhdGUgPSB7XG4gICAgICAgICAgICBzdGFydF90aW1lOiBEYXRlLm5vdygpLFxuICAgICAgICAgICAgbmFtZTogc2Vzc2lvbk5hbWUsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCB0aGlzLnBlcnNpc3RTZXNzaW9uKHNlc3Npb25DcmVhdGUpO1xuICAgICAgICB0aGlzLnNlc3Npb24gPSBzZXNzaW9uO1xuICAgICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICB9XG4gICAgYXN5bmMgbG9hZFNlc3Npb24oc2Vzc2lvbk5hbWUpIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBgJHt0aGlzLmVuZHBvaW50fS9zZXNzaW9ucz9uYW1lPSR7c2Vzc2lvbk5hbWV9YDtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hhbmRsZVNlc3Npb25SZXNwb25zZShlbmRwb2ludCk7XG4gICAgfVxuICAgIGFzeW5jIGxvYWREZWZhdWx0U2Vzc2lvbigpIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBgJHt0aGlzLmVuZHBvaW50fS9zZXNzaW9ucz9uYW1lPWRlZmF1bHRgO1xuICAgICAgICByZXR1cm4gdGhpcy5faGFuZGxlU2Vzc2lvblJlc3BvbnNlKGVuZHBvaW50KTtcbiAgICB9XG4gICAgYXN5bmMgY29udmVydFYyUnVuVG9SdW4ocnVuKSB7XG4gICAgICAgIGNvbnN0IHNlc3Npb24gPSB0aGlzLnNlc3Npb24gPz8gKGF3YWl0IHRoaXMubG9hZERlZmF1bHRTZXNzaW9uKCkpO1xuICAgICAgICBjb25zdCBzZXJpYWxpemVkID0gcnVuLnNlcmlhbGl6ZWQ7XG4gICAgICAgIGxldCBydW5SZXN1bHQ7XG4gICAgICAgIGlmIChydW4ucnVuX3R5cGUgPT09IFwibGxtXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb21wdHMgPSBydW4uaW5wdXRzLnByb21wdHNcbiAgICAgICAgICAgICAgICA/IHJ1bi5pbnB1dHMucHJvbXB0c1xuICAgICAgICAgICAgICAgIDogcnVuLmlucHV0cy5tZXNzYWdlcy5tYXAoKHgpID0+IGdldEJ1ZmZlclN0cmluZyh4KSk7XG4gICAgICAgICAgICBjb25zdCBsbG1SdW4gPSB7XG4gICAgICAgICAgICAgICAgdXVpZDogcnVuLmlkLFxuICAgICAgICAgICAgICAgIHN0YXJ0X3RpbWU6IHJ1bi5zdGFydF90aW1lLFxuICAgICAgICAgICAgICAgIGVuZF90aW1lOiBydW4uZW5kX3RpbWUsXG4gICAgICAgICAgICAgICAgZXhlY3V0aW9uX29yZGVyOiBydW4uZXhlY3V0aW9uX29yZGVyLFxuICAgICAgICAgICAgICAgIGNoaWxkX2V4ZWN1dGlvbl9vcmRlcjogcnVuLmNoaWxkX2V4ZWN1dGlvbl9vcmRlcixcbiAgICAgICAgICAgICAgICBzZXJpYWxpemVkLFxuICAgICAgICAgICAgICAgIHR5cGU6IHJ1bi5ydW5fdHlwZSxcbiAgICAgICAgICAgICAgICBzZXNzaW9uX2lkOiBzZXNzaW9uLmlkLFxuICAgICAgICAgICAgICAgIHByb21wdHMsXG4gICAgICAgICAgICAgICAgcmVzcG9uc2U6IHJ1bi5vdXRwdXRzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJ1blJlc3VsdCA9IGxsbVJ1bjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChydW4ucnVuX3R5cGUgPT09IFwiY2hhaW5cIikge1xuICAgICAgICAgICAgY29uc3QgY2hpbGRfcnVucyA9IGF3YWl0IFByb21pc2UuYWxsKHJ1bi5jaGlsZF9ydW5zLm1hcCgoY2hpbGRfcnVuKSA9PiB0aGlzLmNvbnZlcnRWMlJ1blRvUnVuKGNoaWxkX3J1bikpKTtcbiAgICAgICAgICAgIGNvbnN0IGNoYWluUnVuID0ge1xuICAgICAgICAgICAgICAgIHV1aWQ6IHJ1bi5pZCxcbiAgICAgICAgICAgICAgICBzdGFydF90aW1lOiBydW4uc3RhcnRfdGltZSxcbiAgICAgICAgICAgICAgICBlbmRfdGltZTogcnVuLmVuZF90aW1lLFxuICAgICAgICAgICAgICAgIGV4ZWN1dGlvbl9vcmRlcjogcnVuLmV4ZWN1dGlvbl9vcmRlcixcbiAgICAgICAgICAgICAgICBjaGlsZF9leGVjdXRpb25fb3JkZXI6IHJ1bi5jaGlsZF9leGVjdXRpb25fb3JkZXIsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplZCxcbiAgICAgICAgICAgICAgICB0eXBlOiBydW4ucnVuX3R5cGUsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbl9pZDogc2Vzc2lvbi5pZCxcbiAgICAgICAgICAgICAgICBpbnB1dHM6IHJ1bi5pbnB1dHMsXG4gICAgICAgICAgICAgICAgb3V0cHV0czogcnVuLm91dHB1dHMsXG4gICAgICAgICAgICAgICAgY2hpbGRfbGxtX3J1bnM6IGNoaWxkX3J1bnMuZmlsdGVyKChjaGlsZF9ydW4pID0+IGNoaWxkX3J1bi50eXBlID09PSBcImxsbVwiKSxcbiAgICAgICAgICAgICAgICBjaGlsZF9jaGFpbl9ydW5zOiBjaGlsZF9ydW5zLmZpbHRlcigoY2hpbGRfcnVuKSA9PiBjaGlsZF9ydW4udHlwZSA9PT0gXCJjaGFpblwiKSxcbiAgICAgICAgICAgICAgICBjaGlsZF90b29sX3J1bnM6IGNoaWxkX3J1bnMuZmlsdGVyKChjaGlsZF9ydW4pID0+IGNoaWxkX3J1bi50eXBlID09PSBcInRvb2xcIiksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcnVuUmVzdWx0ID0gY2hhaW5SdW47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocnVuLnJ1bl90eXBlID09PSBcInRvb2xcIikge1xuICAgICAgICAgICAgY29uc3QgY2hpbGRfcnVucyA9IGF3YWl0IFByb21pc2UuYWxsKHJ1bi5jaGlsZF9ydW5zLm1hcCgoY2hpbGRfcnVuKSA9PiB0aGlzLmNvbnZlcnRWMlJ1blRvUnVuKGNoaWxkX3J1bikpKTtcbiAgICAgICAgICAgIGNvbnN0IHRvb2xSdW4gPSB7XG4gICAgICAgICAgICAgICAgdXVpZDogcnVuLmlkLFxuICAgICAgICAgICAgICAgIHN0YXJ0X3RpbWU6IHJ1bi5zdGFydF90aW1lLFxuICAgICAgICAgICAgICAgIGVuZF90aW1lOiBydW4uZW5kX3RpbWUsXG4gICAgICAgICAgICAgICAgZXhlY3V0aW9uX29yZGVyOiBydW4uZXhlY3V0aW9uX29yZGVyLFxuICAgICAgICAgICAgICAgIGNoaWxkX2V4ZWN1dGlvbl9vcmRlcjogcnVuLmNoaWxkX2V4ZWN1dGlvbl9vcmRlcixcbiAgICAgICAgICAgICAgICBzZXJpYWxpemVkLFxuICAgICAgICAgICAgICAgIHR5cGU6IHJ1bi5ydW5fdHlwZSxcbiAgICAgICAgICAgICAgICBzZXNzaW9uX2lkOiBzZXNzaW9uLmlkLFxuICAgICAgICAgICAgICAgIHRvb2xfaW5wdXQ6IHJ1bi5pbnB1dHMuaW5wdXQsXG4gICAgICAgICAgICAgICAgb3V0cHV0OiBydW4ub3V0cHV0cz8ub3V0cHV0LFxuICAgICAgICAgICAgICAgIGFjdGlvbjogSlNPTi5zdHJpbmdpZnkoc2VyaWFsaXplZCksXG4gICAgICAgICAgICAgICAgY2hpbGRfbGxtX3J1bnM6IGNoaWxkX3J1bnMuZmlsdGVyKChjaGlsZF9ydW4pID0+IGNoaWxkX3J1bi50eXBlID09PSBcImxsbVwiKSxcbiAgICAgICAgICAgICAgICBjaGlsZF9jaGFpbl9ydW5zOiBjaGlsZF9ydW5zLmZpbHRlcigoY2hpbGRfcnVuKSA9PiBjaGlsZF9ydW4udHlwZSA9PT0gXCJjaGFpblwiKSxcbiAgICAgICAgICAgICAgICBjaGlsZF90b29sX3J1bnM6IGNoaWxkX3J1bnMuZmlsdGVyKChjaGlsZF9ydW4pID0+IGNoaWxkX3J1bi50eXBlID09PSBcInRvb2xcIiksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcnVuUmVzdWx0ID0gdG9vbFJ1bjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBydW4gdHlwZTogJHtydW4ucnVuX3R5cGV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJ1blJlc3VsdDtcbiAgICB9XG4gICAgYXN5bmMgcGVyc2lzdFJ1bihydW4pIHtcbiAgICAgICAgbGV0IGVuZHBvaW50O1xuICAgICAgICBsZXQgdjFSdW47XG4gICAgICAgIGlmIChydW4ucnVuX3R5cGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdjFSdW4gPSBhd2FpdCB0aGlzLmNvbnZlcnRWMlJ1blRvUnVuKHJ1bik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2MVJ1biA9IHJ1bjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodjFSdW4udHlwZSA9PT0gXCJsbG1cIikge1xuICAgICAgICAgICAgZW5kcG9pbnQgPSBgJHt0aGlzLmVuZHBvaW50fS9sbG0tcnVuc2A7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodjFSdW4udHlwZSA9PT0gXCJjaGFpblwiKSB7XG4gICAgICAgICAgICBlbmRwb2ludCA9IGAke3RoaXMuZW5kcG9pbnR9L2NoYWluLXJ1bnNgO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZW5kcG9pbnQgPSBgJHt0aGlzLmVuZHBvaW50fS90b29sLXJ1bnNgO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh2MVJ1biksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gcGVyc2lzdCBydW46ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcGVyc2lzdFNlc3Npb24oc2Vzc2lvbkNyZWF0ZSkge1xuICAgICAgICBjb25zdCBlbmRwb2ludCA9IGAke3RoaXMuZW5kcG9pbnR9L3Nlc3Npb25zYDtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChlbmRwb2ludCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHNlc3Npb25DcmVhdGUpLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkIHRvIHBlcnNpc3Qgc2Vzc2lvbjogJHtyZXNwb25zZS5zdGF0dXN9ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH0sIHVzaW5nIGRlZmF1bHQgc2Vzc2lvbi5gKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaWQ6IDEsXG4gICAgICAgICAgICAgICAgLi4uc2Vzc2lvbkNyZWF0ZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiAoYXdhaXQgcmVzcG9uc2UuanNvbigpKS5pZCxcbiAgICAgICAgICAgIC4uLnNlc3Npb25DcmVhdGUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGFzeW5jIF9oYW5kbGVTZXNzaW9uUmVzcG9uc2UoZW5kcG9pbnQpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChlbmRwb2ludCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICB9KTtcbiAgICAgICAgbGV0IHRyYWNlclNlc3Npb247XG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byBsb2FkIHNlc3Npb246ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICAgICAgICB0cmFjZXJTZXNzaW9uID0ge1xuICAgICAgICAgICAgICAgIGlkOiAxLFxuICAgICAgICAgICAgICAgIHN0YXJ0X3RpbWU6IERhdGUubm93KCksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zZXNzaW9uID0gdHJhY2VyU2Vzc2lvbjtcbiAgICAgICAgICAgIHJldHVybiB0cmFjZXJTZXNzaW9uO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3AgPSAoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICAgICAgaWYgKHJlc3AubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0cmFjZXJTZXNzaW9uID0ge1xuICAgICAgICAgICAgICAgIGlkOiAxLFxuICAgICAgICAgICAgICAgIHN0YXJ0X3RpbWU6IERhdGUubm93KCksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zZXNzaW9uID0gdHJhY2VyU2Vzc2lvbjtcbiAgICAgICAgICAgIHJldHVybiB0cmFjZXJTZXNzaW9uO1xuICAgICAgICB9XG4gICAgICAgIFt0cmFjZXJTZXNzaW9uXSA9IHJlc3A7XG4gICAgICAgIHRoaXMuc2Vzc2lvbiA9IHRyYWNlclNlc3Npb247XG4gICAgICAgIHJldHVybiB0cmFjZXJTZXNzaW9uO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tracers/tracer_langchain_v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/index.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Validator: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.Validator),\n/* harmony export */   deepCompareStrict: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.deepCompareStrict),\n/* harmony export */   dereference: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.dereference),\n/* harmony export */   encodePointer: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.encodePointer),\n/* harmony export */   escapePointer: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.escapePointer),\n/* harmony export */   fastFormat: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.fastFormat),\n/* harmony export */   fullFormat: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.fullFormat),\n/* harmony export */   ignoredKeyword: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.ignoredKeyword),\n/* harmony export */   initialBaseURI: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.initialBaseURI),\n/* harmony export */   schemaArrayKeyword: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.schemaArrayKeyword),\n/* harmony export */   schemaKeyword: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.schemaKeyword),\n/* harmony export */   schemaMapKeyword: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.schemaMapKeyword),\n/* harmony export */   ucs2length: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.ucs2length),\n/* harmony export */   validate: () => (/* reexport safe */ _src_index_js__WEBPACK_IMPORTED_MODULE_0__.validate)\n/* harmony export */ });\n/* harmony import */ var _src_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3V0aWxzL0BjZndvcmtlci9qc29uLXNjaGVtYS9pbmRleC5qcz8zMDFmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3NyYy9pbmRleC5qc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/deep-compare-strict.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/deep-compare-strict.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepCompareStrict: () => (/* binding */ deepCompareStrict)\n/* harmony export */ });\nfunction deepCompareStrict(a, b) {\n    const typeofa = typeof a;\n    if (typeofa !== typeof b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        const length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!deepCompareStrict(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (typeofa === \"object\") {\n        if (!a || !b) {\n            return a === b;\n        }\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        const length = aKeys.length;\n        if (length !== bKeys.length) {\n            return false;\n        }\n        for (const k of aKeys) {\n            if (!deepCompareStrict(a[k], b[k])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2RlZXAtY29tcGFyZS1zdHJpY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdXRpbHMvQGNmd29ya2VyL2pzb24tc2NoZW1hL3NyYy9kZWVwLWNvbXBhcmUtc3RyaWN0LmpzPzczODYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRlZXBDb21wYXJlU3RyaWN0KGEsIGIpIHtcbiAgICBjb25zdCB0eXBlb2ZhID0gdHlwZW9mIGE7XG4gICAgaWYgKHR5cGVvZmEgIT09IHR5cGVvZiBiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGIpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGVuZ3RoID0gYS5sZW5ndGg7XG4gICAgICAgIGlmIChsZW5ndGggIT09IGIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKCFkZWVwQ29tcGFyZVN0cmljdChhW2ldLCBiW2ldKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZmEgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgaWYgKCFhIHx8ICFiKSB7XG4gICAgICAgICAgICByZXR1cm4gYSA9PT0gYjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhS2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgICAgICBjb25zdCBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuICAgICAgICBjb25zdCBsZW5ndGggPSBhS2V5cy5sZW5ndGg7XG4gICAgICAgIGlmIChsZW5ndGggIT09IGJLZXlzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgayBvZiBhS2V5cykge1xuICAgICAgICAgICAgaWYgKCFkZWVwQ29tcGFyZVN0cmljdChhW2tdLCBiW2tdKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGEgPT09IGI7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/deep-compare-strict.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dereference: () => (/* binding */ dereference),\n/* harmony export */   ignoredKeyword: () => (/* binding */ ignoredKeyword),\n/* harmony export */   initialBaseURI: () => (/* binding */ initialBaseURI),\n/* harmony export */   schemaArrayKeyword: () => (/* binding */ schemaArrayKeyword),\n/* harmony export */   schemaKeyword: () => (/* binding */ schemaKeyword),\n/* harmony export */   schemaMapKeyword: () => (/* binding */ schemaMapKeyword)\n/* harmony export */ });\n/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pointer.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/pointer.js\");\n\nconst schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true,\n};\nconst schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true,\n};\nconst schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true,\n};\nconst ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true,\n};\n/**\n * Default base URI for schemas without an $id.\n * https://json-schema.org/draft/2019-09/json-schema-core.html#initial-base\n * https://tools.ietf.org/html/rfc3986#section-5.1\n */\nlet initialBaseURI = \n// @ts-ignore\ntypeof self !== \"undefined\" &&\n    self.location &&\n    self.location.origin !== \"null\"\n    ? //@ts-ignore\n        /* #__PURE__ */ new URL(self.location.origin + self.location.pathname + location.search)\n    : /* #__PURE__ */ new URL(\"https://github.com/cfworker\");\nfunction dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = \"\") {\n    if (schema && typeof schema === \"object\" && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = \"\"; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n                if (basePointer === \"\") {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    // compute the schema's URI and add it to the mapping.\n    const schemaURI = baseURI.href + (basePointer ? \"#\" + basePointer : \"\");\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    // exit early if this is a boolean schema.\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    // set the schema's absolute URI.\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, \"__absolute_uri__\", {\n            enumerable: false,\n            value: schemaURI,\n        });\n    }\n    // if a $ref is found, resolve it's absolute URI.\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if a $recursiveRef is found, resolve it's absolute URI.\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_recursive_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if an $anchor is found, compute it's URI and add it to the mapping.\n    if (schema.$anchor) {\n        const url = new URL(\"#\" + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    // process subschemas.\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_0__.encodePointer)(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_0__.encodePointer)(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n// schema identification examples\n// https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.appendix.A\n// $ref delegation\n// https://github.com/json-schema-org/json-schema-spec/issues/514\n// output format\n// https://json-schema.org/draft/2019-09/json-schema-core.html#output\n// JSON pointer\n// https://tools.ietf.org/html/rfc6901\n// JSON relative pointer\n// https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2RlcmVmZXJlbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNkM7QUFDdEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsVUFBVTtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixZQUFZLEdBQUcsMERBQWEsTUFBTTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxZQUFZO0FBQzVDLGtFQUFrRSxRQUFRLEdBQUcsRUFBRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLFFBQVEsR0FBRywwREFBYSxTQUFTO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2RlcmVmZXJlbmNlLmpzPzQwMjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlUG9pbnRlciB9IGZyb20gXCIuL3BvaW50ZXIuanNcIjtcbmV4cG9ydCBjb25zdCBzY2hlbWFLZXl3b3JkID0ge1xuICAgIGFkZGl0aW9uYWxJdGVtczogdHJ1ZSxcbiAgICB1bmV2YWx1YXRlZEl0ZW1zOiB0cnVlLFxuICAgIGl0ZW1zOiB0cnVlLFxuICAgIGNvbnRhaW5zOiB0cnVlLFxuICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB0cnVlLFxuICAgIHVuZXZhbHVhdGVkUHJvcGVydGllczogdHJ1ZSxcbiAgICBwcm9wZXJ0eU5hbWVzOiB0cnVlLFxuICAgIG5vdDogdHJ1ZSxcbiAgICBpZjogdHJ1ZSxcbiAgICB0aGVuOiB0cnVlLFxuICAgIGVsc2U6IHRydWUsXG59O1xuZXhwb3J0IGNvbnN0IHNjaGVtYUFycmF5S2V5d29yZCA9IHtcbiAgICBwcmVmaXhJdGVtczogdHJ1ZSxcbiAgICBpdGVtczogdHJ1ZSxcbiAgICBhbGxPZjogdHJ1ZSxcbiAgICBhbnlPZjogdHJ1ZSxcbiAgICBvbmVPZjogdHJ1ZSxcbn07XG5leHBvcnQgY29uc3Qgc2NoZW1hTWFwS2V5d29yZCA9IHtcbiAgICAkZGVmczogdHJ1ZSxcbiAgICBkZWZpbml0aW9uczogdHJ1ZSxcbiAgICBwcm9wZXJ0aWVzOiB0cnVlLFxuICAgIHBhdHRlcm5Qcm9wZXJ0aWVzOiB0cnVlLFxuICAgIGRlcGVuZGVudFNjaGVtYXM6IHRydWUsXG59O1xuZXhwb3J0IGNvbnN0IGlnbm9yZWRLZXl3b3JkID0ge1xuICAgIGlkOiB0cnVlLFxuICAgICRpZDogdHJ1ZSxcbiAgICAkcmVmOiB0cnVlLFxuICAgICRzY2hlbWE6IHRydWUsXG4gICAgJGFuY2hvcjogdHJ1ZSxcbiAgICAkdm9jYWJ1bGFyeTogdHJ1ZSxcbiAgICAkY29tbWVudDogdHJ1ZSxcbiAgICBkZWZhdWx0OiB0cnVlLFxuICAgIGVudW06IHRydWUsXG4gICAgY29uc3Q6IHRydWUsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdHlwZTogdHJ1ZSxcbiAgICBtYXhpbXVtOiB0cnVlLFxuICAgIG1pbmltdW06IHRydWUsXG4gICAgZXhjbHVzaXZlTWF4aW11bTogdHJ1ZSxcbiAgICBleGNsdXNpdmVNaW5pbXVtOiB0cnVlLFxuICAgIG11bHRpcGxlT2Y6IHRydWUsXG4gICAgbWF4TGVuZ3RoOiB0cnVlLFxuICAgIG1pbkxlbmd0aDogdHJ1ZSxcbiAgICBwYXR0ZXJuOiB0cnVlLFxuICAgIGZvcm1hdDogdHJ1ZSxcbiAgICBtYXhJdGVtczogdHJ1ZSxcbiAgICBtaW5JdGVtczogdHJ1ZSxcbiAgICB1bmlxdWVJdGVtczogdHJ1ZSxcbiAgICBtYXhQcm9wZXJ0aWVzOiB0cnVlLFxuICAgIG1pblByb3BlcnRpZXM6IHRydWUsXG59O1xuLyoqXG4gKiBEZWZhdWx0IGJhc2UgVVJJIGZvciBzY2hlbWFzIHdpdGhvdXQgYW4gJGlkLlxuICogaHR0cHM6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQvMjAxOS0wOS9qc29uLXNjaGVtYS1jb3JlLmh0bWwjaW5pdGlhbC1iYXNlXG4gKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNzZWN0aW9uLTUuMVxuICovXG5leHBvcnQgbGV0IGluaXRpYWxCYXNlVVJJID0gXG4vLyBAdHMtaWdub3JlXG50eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHNlbGYubG9jYXRpb24gJiZcbiAgICBzZWxmLmxvY2F0aW9uLm9yaWdpbiAhPT0gXCJudWxsXCJcbiAgICA/IC8vQHRzLWlnbm9yZVxuICAgICAgICAvKiAjX19QVVJFX18gKi8gbmV3IFVSTChzZWxmLmxvY2F0aW9uLm9yaWdpbiArIHNlbGYubG9jYXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2gpXG4gICAgOiAvKiAjX19QVVJFX18gKi8gbmV3IFVSTChcImh0dHBzOi8vZ2l0aHViLmNvbS9jZndvcmtlclwiKTtcbmV4cG9ydCBmdW5jdGlvbiBkZXJlZmVyZW5jZShzY2hlbWEsIGxvb2t1cCA9IE9iamVjdC5jcmVhdGUobnVsbCksIGJhc2VVUkkgPSBpbml0aWFsQmFzZVVSSSwgYmFzZVBvaW50ZXIgPSBcIlwiKSB7XG4gICAgaWYgKHNjaGVtYSAmJiB0eXBlb2Ygc2NoZW1hID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcbiAgICAgICAgY29uc3QgaWQgPSBzY2hlbWEuJGlkIHx8IHNjaGVtYS5pZDtcbiAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGlkLCBiYXNlVVJJLmhyZWYpO1xuICAgICAgICAgICAgaWYgKHVybC5oYXNoLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICBsb29rdXBbdXJsLmhyZWZdID0gc2NoZW1hO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXJsLmhhc2ggPSBcIlwiOyAvLyBub3JtYWxpemUgaGFzaCBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmwtaGFzaFxuICAgICAgICAgICAgICAgIGlmIChiYXNlUG9pbnRlciA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBiYXNlVVJJID0gdXJsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGVyZWZlcmVuY2Uoc2NoZW1hLCBsb29rdXAsIGJhc2VVUkkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChzY2hlbWEgIT09IHRydWUgJiYgc2NoZW1hICE9PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gbG9va3VwO1xuICAgIH1cbiAgICAvLyBjb21wdXRlIHRoZSBzY2hlbWEncyBVUkkgYW5kIGFkZCBpdCB0byB0aGUgbWFwcGluZy5cbiAgICBjb25zdCBzY2hlbWFVUkkgPSBiYXNlVVJJLmhyZWYgKyAoYmFzZVBvaW50ZXIgPyBcIiNcIiArIGJhc2VQb2ludGVyIDogXCJcIik7XG4gICAgaWYgKGxvb2t1cFtzY2hlbWFVUkldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUgc2NoZW1hIFVSSSBcIiR7c2NoZW1hVVJJfVwiLmApO1xuICAgIH1cbiAgICBsb29rdXBbc2NoZW1hVVJJXSA9IHNjaGVtYTtcbiAgICAvLyBleGl0IGVhcmx5IGlmIHRoaXMgaXMgYSBib29sZWFuIHNjaGVtYS5cbiAgICBpZiAoc2NoZW1hID09PSB0cnVlIHx8IHNjaGVtYSA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIGxvb2t1cDtcbiAgICB9XG4gICAgLy8gc2V0IHRoZSBzY2hlbWEncyBhYnNvbHV0ZSBVUkkuXG4gICAgaWYgKHNjaGVtYS5fX2Fic29sdXRlX3VyaV9fID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNjaGVtYSwgXCJfX2Fic29sdXRlX3VyaV9fXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6IHNjaGVtYVVSSSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIGlmIGEgJHJlZiBpcyBmb3VuZCwgcmVzb2x2ZSBpdCdzIGFic29sdXRlIFVSSS5cbiAgICBpZiAoc2NoZW1hLiRyZWYgJiYgc2NoZW1hLl9fYWJzb2x1dGVfcmVmX18gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHNjaGVtYS4kcmVmLCBiYXNlVVJJLmhyZWYpO1xuICAgICAgICB1cmwuaGFzaCA9IHVybC5oYXNoOyAvLyBub3JtYWxpemUgaGFzaCBodHRwczovL3VybC5zcGVjLndoYXR3Zy5vcmcvI2RvbS11cmwtaGFzaFxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2NoZW1hLCBcIl9fYWJzb2x1dGVfcmVmX19cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICB2YWx1ZTogdXJsLmhyZWYsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBpZiBhICRyZWN1cnNpdmVSZWYgaXMgZm91bmQsIHJlc29sdmUgaXQncyBhYnNvbHV0ZSBVUkkuXG4gICAgaWYgKHNjaGVtYS4kcmVjdXJzaXZlUmVmICYmIHNjaGVtYS5fX2Fic29sdXRlX3JlY3Vyc2l2ZV9yZWZfXyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoc2NoZW1hLiRyZWN1cnNpdmVSZWYsIGJhc2VVUkkuaHJlZik7XG4gICAgICAgIHVybC5oYXNoID0gdXJsLmhhc2g7IC8vIG5vcm1hbGl6ZSBoYXNoIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jZG9tLXVybC1oYXNoXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzY2hlbWEsIFwiX19hYnNvbHV0ZV9yZWN1cnNpdmVfcmVmX19cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICB2YWx1ZTogdXJsLmhyZWYsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBpZiBhbiAkYW5jaG9yIGlzIGZvdW5kLCBjb21wdXRlIGl0J3MgVVJJIGFuZCBhZGQgaXQgdG8gdGhlIG1hcHBpbmcuXG4gICAgaWYgKHNjaGVtYS4kYW5jaG9yKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoXCIjXCIgKyBzY2hlbWEuJGFuY2hvciwgYmFzZVVSSS5ocmVmKTtcbiAgICAgICAgbG9va3VwW3VybC5ocmVmXSA9IHNjaGVtYTtcbiAgICB9XG4gICAgLy8gcHJvY2VzcyBzdWJzY2hlbWFzLlxuICAgIGZvciAobGV0IGtleSBpbiBzY2hlbWEpIHtcbiAgICAgICAgaWYgKGlnbm9yZWRLZXl3b3JkW2tleV0pIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGtleUJhc2UgPSBgJHtiYXNlUG9pbnRlcn0vJHtlbmNvZGVQb2ludGVyKGtleSl9YDtcbiAgICAgICAgY29uc3Qgc3ViU2NoZW1hID0gc2NoZW1hW2tleV07XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHN1YlNjaGVtYSkpIHtcbiAgICAgICAgICAgIGlmIChzY2hlbWFBcnJheUtleXdvcmRba2V5XSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IHN1YlNjaGVtYS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBkZXJlZmVyZW5jZShzdWJTY2hlbWFbaV0sIGxvb2t1cCwgYmFzZVVSSSwgYCR7a2V5QmFzZX0vJHtpfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzY2hlbWFNYXBLZXl3b3JkW2tleV0pIHtcbiAgICAgICAgICAgIGZvciAobGV0IHN1YktleSBpbiBzdWJTY2hlbWEpIHtcbiAgICAgICAgICAgICAgICBkZXJlZmVyZW5jZShzdWJTY2hlbWFbc3ViS2V5XSwgbG9va3VwLCBiYXNlVVJJLCBgJHtrZXlCYXNlfS8ke2VuY29kZVBvaW50ZXIoc3ViS2V5KX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRlcmVmZXJlbmNlKHN1YlNjaGVtYSwgbG9va3VwLCBiYXNlVVJJLCBrZXlCYXNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbG9va3VwO1xufVxuLy8gc2NoZW1hIGlkZW50aWZpY2F0aW9uIGV4YW1wbGVzXG4vLyBodHRwczovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC8yMDE5LTA5L2pzb24tc2NoZW1hLWNvcmUuaHRtbCNyZmMuYXBwZW5kaXguQVxuLy8gJHJlZiBkZWxlZ2F0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vanNvbi1zY2hlbWEtb3JnL2pzb24tc2NoZW1hLXNwZWMvaXNzdWVzLzUxNFxuLy8gb3V0cHV0IGZvcm1hdFxuLy8gaHR0cHM6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQvMjAxOS0wOS9qc29uLXNjaGVtYS1jb3JlLmh0bWwjb3V0cHV0XG4vLyBKU09OIHBvaW50ZXJcbi8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2OTAxXG4vLyBKU09OIHJlbGF0aXZlIHBvaW50ZXJcbi8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9kcmFmdC1oYW5kcmV3cy1yZWxhdGl2ZS1qc29uLXBvaW50ZXItMDFcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/format.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/format.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastFormat: () => (/* binding */ fastFormat),\n/* harmony export */   fullFormat: () => (/* binding */ fullFormat)\n/* harmony export */ });\n// based on https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\n// const URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n// date: http://tools.ietf.org/html/rfc3339#section-5.6\nconst FASTDATE = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/;\n// date-time: http://tools.ietf.org/html/rfc3339#section-5.6\nconst FASTTIME = /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst FASTDATETIME = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i;\n// uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n// const FASTURI = /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i;\nconst FASTURIREFERENCE = /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i;\n// https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split(\"@\");\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === \".\" || name.endsWith(\".\") || name.includes(\"..\"))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split(\".\")\n        .every((part) => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\n// optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\n// optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\n// https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nconst fullFormat = {\n    date,\n    time: /* #__PURE__ */ time.bind(undefined, false),\n    \"date-time\": date_time,\n    duration: DURATION,\n    uri,\n    \"uri-reference\": /* #__PURE__ */ bind(URIREF),\n    \"uri-template\": /* #__PURE__ */ bind(URITEMPLATE),\n    url: /* #__PURE__ */ bind(URL_),\n    email: EMAIL,\n    hostname: /* #__PURE__ */ bind(HOSTNAME),\n    ipv4: /* #__PURE__ */ bind(IPV4),\n    ipv6: /* #__PURE__ */ bind(IPV6),\n    regex: regex,\n    uuid: /* #__PURE__ */ bind(UUID),\n    \"json-pointer\": /* #__PURE__ */ bind(JSON_POINTER),\n    \"json-pointer-uri-fragment\": /* #__PURE__ */ bind(JSON_POINTER_URI_FRAGMENT),\n    \"relative-json-pointer\": /* #__PURE__ */ bind(RELATIVE_JSON_POINTER),\n};\nconst fastFormat = {\n    ...fullFormat,\n    date: /* #__PURE__ */ bind(FASTDATE),\n    time: /* #__PURE__ */ bind(FASTTIME),\n    \"date-time\": /* #__PURE__ */ bind(FASTDATETIME),\n    \"uri-reference\": /* #__PURE__ */ bind(FASTURIREFERENCE),\n};\nfunction isLeapYear(year) {\n    // https://tools.ietf.org/html/rfc3339#appendix-C\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    // http://tools.ietf.org/html/rfc3339#section-5.6\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2Zvcm1hdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLE1BQU0sMEJBQTBCLEtBQUssb0NBQW9DLEtBQUs7QUFDdEcsNEVBQTRFLGNBQWMsRUFBRSwrQkFBK0IsSUFBSSxHQUFHLEVBQUUsZUFBZSxJQUFJLEdBQUcsRUFBRSxhQUFhLElBQUksZ0JBQWdCLElBQUksR0FBRyxFQUFFLGdCQUFnQixJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUksZ0JBQWdCLElBQUksR0FBRyxFQUFFLGdCQUFnQixJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUksZ0JBQWdCLElBQUksR0FBRyxFQUFFLGdCQUFnQixJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUksYUFBYSxJQUFJLGlCQUFpQixJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUksaUJBQWlCLElBQUksVUFBVSxJQUFJLHVDQUF1QyxFQUFFLGdEQUFnRCxJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUksYUFBYSxJQUFJLGdCQUFnQixJQUFJLEdBQUcsSUFBSSxTQUFTLElBQUksMkNBQTJDLDhDQUE4QyxFQUFFLHlEQUF5RCxhQUFhLEVBQUUsMENBQTBDLGVBQWUsRUFBRSxtQ0FBbUMsZUFBZSxFQUFFLGdDQUFnQyxlQUFlLEVBQUUsZ0NBQWdDLGVBQWUsRUFBRSxnQ0FBZ0MsZUFBZSxFQUFFLG1DQUFtQyxpQkFBaUIsRUFBRSxpQ0FBaUMsaUJBQWlCLEVBQUU7QUFDdG9DLDZFQUE2RSxjQUFjLEVBQUUsK0JBQStCLElBQUksR0FBRyxFQUFFLGVBQWUsSUFBSSxHQUFHLEVBQUUsYUFBYSxJQUFJLGdCQUFnQixJQUFJLEdBQUcsRUFBRSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGdCQUFnQixJQUFJLEdBQUcsRUFBRSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGdCQUFnQixJQUFJLEdBQUcsRUFBRSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGFBQWEsSUFBSSxpQkFBaUIsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGlCQUFpQixJQUFJLFVBQVUsSUFBSSx1Q0FBdUMsRUFBRSxnREFBZ0QsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGFBQWEsSUFBSSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLDJDQUEyQyw4Q0FBOEMsRUFBRSwwREFBMEQsYUFBYSxFQUFFLDJDQUEyQyxlQUFlLEVBQUUsb0NBQW9DLGVBQWUsRUFBRSxpQ0FBaUMsZUFBZSxFQUFFLGlDQUFpQyxlQUFlLEVBQUUsaUNBQWlDLGVBQWUsRUFBRSxxQ0FBcUMsaUJBQWlCLEVBQUUsa0NBQWtDLGlCQUFpQixFQUFFO0FBQ2hwQztBQUNBLGlEQUFpRCxFQUFFLFlBQVksRUFBRSxJQUFJLE1BQU0sZ0NBQWdDLEVBQUUsaUJBQWlCLElBQUksZ0NBQWdDLEVBQUUsaUJBQWlCLElBQUksU0FBUztBQUNsTTtBQUNBO0FBQ0Esd0VBQXdFLElBQUksRUFBRSxFQUFFLGVBQWUsSUFBSSxFQUFFLEVBQUUsb0JBQW9CLElBQUksRUFBRSxFQUFFLG9CQUFvQixJQUFJLEVBQUUsRUFBRSxzQ0FBc0MsSUFBSSxFQUFFLEVBQUUsZ0RBQWdELElBQUksb0JBQW9CLEVBQUUsdURBQXVELEtBQUssSUFBSSxLQUFLLGdCQUFnQixLQUFLLElBQUksS0FBSyxxQkFBcUIsS0FBSyxJQUFJLEtBQUssZ0JBQWdCLEtBQUssSUFBSSxLQUFLLHNCQUFzQixLQUFLLElBQUksS0FBSyxFQUFFLEdBQUcsVUFBVSxJQUFJO0FBQ2xmLHNDQUFzQyxFQUFFLGFBQWEsRUFBRSxHQUFHLEVBQUUsU0FBUyxHQUFHO0FBQ3hFO0FBQ0Esa0VBQWtFLGVBQWUsRUFBRTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEVBQUU7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsOENBQThDLEtBQUs7QUFDbkQ7QUFDQTtBQUNBLHFEQUFxRCxFQUFFO0FBQ3ZEO0FBQ0EsMkJBQTJCLElBQUksR0FBRyxFQUFFLFVBQVUsSUFBSSxnQkFBZ0IsSUFBSSxHQUFHLEVBQUUsV0FBVyxJQUFJLHlFQUF5RSxFQUFFLGlCQUFpQixJQUFJLEdBQUcsRUFBRSxhQUFhLElBQUksRUFBRSxJQUFJLDJFQUEyRSxFQUFFLGlCQUFpQixJQUFJLEdBQUcsRUFBRSxhQUFhLElBQUksRUFBRSxJQUFJLGNBQWMsSUFBSSwyRUFBMkUsRUFBRSxrQkFBa0IsSUFBSSxHQUFHLEVBQUUsYUFBYSxJQUFJLEVBQUUsSUFBSSxjQUFjLElBQUksRUFBRSxJQUFJLHlFQUF5RSxFQUFFLGtCQUFrQixJQUFJLEdBQUcsRUFBRSxhQUFhLElBQUksRUFBRSxJQUFJLGNBQWMsSUFBSSxFQUFFLElBQUkseUVBQXlFLEVBQUUsa0JBQWtCLElBQUksR0FBRyxFQUFFLGFBQWEsSUFBSSxFQUFFLElBQUksY0FBYyxJQUFJLEVBQUUsSUFBSSx5RUFBeUUsRUFBRSxzQkFBc0IsSUFBSSxFQUFFLElBQUksY0FBYyxJQUFJLEVBQUUsSUFBSSx5RUFBeUUsRUFBRTtBQUNyL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixjQUFjLEVBQUUsK0JBQStCLElBQUksR0FBRyxFQUFFLGVBQWUsSUFBSSxHQUFHLEVBQUUsYUFBYSxJQUFJLGdCQUFnQixJQUFJLEdBQUcsRUFBRSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGdCQUFnQixJQUFJLEdBQUcsRUFBRSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGdCQUFnQixJQUFJLEdBQUcsRUFBRSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGFBQWEsSUFBSSxpQkFBaUIsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGlCQUFpQixJQUFJLFVBQVUsSUFBSSx1Q0FBdUMsRUFBRSxnREFBZ0QsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLGFBQWEsSUFBSSxnQkFBZ0IsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJLDJDQUEyQyw4Q0FBOEMsRUFBRSx5REFBeUQsYUFBYSxFQUFFLDBDQUEwQyxlQUFlLEVBQUUsbUNBQW1DLGVBQWUsRUFBRSxnQ0FBZ0MsZUFBZSxFQUFFLGdDQUFnQyxlQUFlLEVBQUUsZ0NBQWdDLGVBQWUsRUFBRSxtQ0FBbUMsaUJBQWlCLEVBQUUsaUNBQWlDLGlCQUFpQixFQUFFO0FBQzNvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2Zvcm1hdC5qcz8yMjRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9lcG9iZXJlemtpbi9hanYvYmxvYi9tYXN0ZXIvbGliL2NvbXBpbGUvZm9ybWF0cy5qc1xuY29uc3QgREFURSA9IC9eKFxcZFxcZFxcZFxcZCktKFxcZFxcZCktKFxcZFxcZCkkLztcbmNvbnN0IERBWVMgPSBbMCwgMzEsIDI4LCAzMSwgMzAsIDMxLCAzMCwgMzEsIDMxLCAzMCwgMzEsIDMwLCAzMV07XG5jb25zdCBUSU1FID0gL14oXFxkXFxkKTooXFxkXFxkKTooXFxkXFxkKShcXC5cXGQrKT8oenxbKy1dXFxkXFxkKD86Oj9cXGRcXGQpPyk/JC9pO1xuY29uc3QgSE9TVE5BTUUgPSAvXig/PS57MSwyNTN9XFwuPyQpW2EtejAtOV0oPzpbYS16MC05LV17MCw2MX1bYS16MC05XSk/KD86XFwuW2EtejAtOV0oPzpbLTAtOWEtel17MCw2MX1bMC05YS16XSk/KSpcXC4/JC9pO1xuLy8gY29uc3QgVVJJID0gL14oPzpbYS16XVthLXowLTkrXFwtLl0qOikoPzpcXC8/XFwvKD86KD86W2EtejAtOVxcLS5ffiEkJicoKSorLDs9Ol18JVswLTlhLWZdezJ9KSpAKT8oPzpcXFsoPzooPzooPzooPzpbMC05YS1mXXsxLDR9Oil7Nn18OjooPzpbMC05YS1mXXsxLDR9Oil7NX18KD86WzAtOWEtZl17MSw0fSk/OjooPzpbMC05YS1mXXsxLDR9Oil7NH18KD86KD86WzAtOWEtZl17MSw0fTopezAsMX1bMC05YS1mXXsxLDR9KT86Oig/OlswLTlhLWZdezEsNH06KXszfXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCwyfVswLTlhLWZdezEsNH0pPzo6KD86WzAtOWEtZl17MSw0fTopezJ9fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDN9WzAtOWEtZl17MSw0fSk/OjpbMC05YS1mXXsxLDR9OnwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCw0fVswLTlhLWZdezEsNH0pPzo6KSg/OlswLTlhLWZdezEsNH06WzAtOWEtZl17MSw0fXwoPzooPzoyNVswLTVdfDJbMC00XVxcZHxbMDFdP1xcZFxcZD8pXFwuKXszfSg/OjI1WzAtNV18MlswLTRdXFxkfFswMV0/XFxkXFxkPykpfCg/Oig/OlswLTlhLWZdezEsNH06KXswLDV9WzAtOWEtZl17MSw0fSk/OjpbMC05YS1mXXsxLDR9fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDZ9WzAtOWEtZl17MSw0fSk/OjopfFtWdl1bMC05YS1mXStcXC5bYS16MC05XFwtLl9+ISQmJygpKissOz06XSspXFxdfCg/Oig/OjI1WzAtNV18MlswLTRdXFxkfFswMV0/XFxkXFxkPylcXC4pezN9KD86MjVbMC01XXwyWzAtNF1cXGR8WzAxXT9cXGRcXGQ/KXwoPzpbYS16MC05XFwtLl9+ISQmJygpKissOz1dfCVbMC05YS1mXXsyfSkqKSg/OjpcXGQqKT8oPzpcXC8oPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06QF18JVswLTlhLWZdezJ9KSopKnxcXC8oPzooPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06QF18JVswLTlhLWZdezJ9KSsoPzpcXC8oPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06QF18JVswLTlhLWZdezJ9KSopKik/fCg/OlthLXowLTlcXC0uX34hJCYnKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKyg/OlxcLyg/OlthLXowLTlcXC0uX34hJCYnKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKikqKSg/OlxcPyg/OlthLXowLTlcXC0uX34hJCYnKCkqKyw7PTpALz9dfCVbMC05YS1mXXsyfSkqKT8oPzojKD86W2EtejAtOVxcLS5ffiEkJicoKSorLDs9OkAvP118JVswLTlhLWZdezJ9KSopPyQvaTtcbmNvbnN0IFVSSVJFRiA9IC9eKD86W2Etel1bYS16MC05K1xcLS5dKjopPyg/OlxcLz9cXC8oPzooPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06XXwlWzAtOWEtZl17Mn0pKkApPyg/OlxcWyg/Oig/Oig/Oig/OlswLTlhLWZdezEsNH06KXs2fXw6Oig/OlswLTlhLWZdezEsNH06KXs1fXwoPzpbMC05YS1mXXsxLDR9KT86Oig/OlswLTlhLWZdezEsNH06KXs0fXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCwxfVswLTlhLWZdezEsNH0pPzo6KD86WzAtOWEtZl17MSw0fTopezN9fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDJ9WzAtOWEtZl17MSw0fSk/OjooPzpbMC05YS1mXXsxLDR9Oil7Mn18KD86KD86WzAtOWEtZl17MSw0fTopezAsM31bMC05YS1mXXsxLDR9KT86OlswLTlhLWZdezEsNH06fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDR9WzAtOWEtZl17MSw0fSk/OjopKD86WzAtOWEtZl17MSw0fTpbMC05YS1mXXsxLDR9fCg/Oig/OjI1WzAtNV18MlswLTRdXFxkfFswMV0/XFxkXFxkPylcXC4pezN9KD86MjVbMC01XXwyWzAtNF1cXGR8WzAxXT9cXGRcXGQ/KSl8KD86KD86WzAtOWEtZl17MSw0fTopezAsNX1bMC05YS1mXXsxLDR9KT86OlswLTlhLWZdezEsNH18KD86KD86WzAtOWEtZl17MSw0fTopezAsNn1bMC05YS1mXXsxLDR9KT86Oil8W1Z2XVswLTlhLWZdK1xcLlthLXowLTlcXC0uX34hJCYnKCkqKyw7PTpdKylcXF18KD86KD86MjVbMC01XXwyWzAtNF1cXGR8WzAxXT9cXGRcXGQ/KVxcLil7M30oPzoyNVswLTVdfDJbMC00XVxcZHxbMDFdP1xcZFxcZD8pfCg/OlthLXowLTlcXC0uX34hJCYnXCIoKSorLDs9XXwlWzAtOWEtZl17Mn0pKikoPzo6XFxkKik/KD86XFwvKD86W2EtejAtOVxcLS5ffiEkJidcIigpKissOz06QF18JVswLTlhLWZdezJ9KSopKnxcXC8oPzooPzpbYS16MC05XFwtLl9+ISQmJ1wiKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKyg/OlxcLyg/OlthLXowLTlcXC0uX34hJCYnXCIoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSopP3woPzpbYS16MC05XFwtLl9+ISQmJ1wiKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKyg/OlxcLyg/OlthLXowLTlcXC0uX34hJCYnXCIoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSopPyg/OlxcPyg/OlthLXowLTlcXC0uX34hJCYnXCIoKSorLDs9OkAvP118JVswLTlhLWZdezJ9KSopPyg/OiMoPzpbYS16MC05XFwtLl9+ISQmJ1wiKCkqKyw7PTpALz9dfCVbMC05YS1mXXsyfSkqKT8kL2k7XG4vLyB1cmktdGVtcGxhdGU6IGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2NTcwXG5jb25zdCBVUklURU1QTEFURSA9IC9eKD86KD86W15cXHgwMC1cXHgyMFwiJzw+JVxcXFxeYHt8fV18JVswLTlhLWZdezJ9KXxcXHtbKyMuLzs/Jj0sIUB8XT8oPzpbYS16MC05X118JVswLTlhLWZdezJ9KSsoPzo6WzEtOV1bMC05XXswLDN9fFxcKik/KD86LCg/OlthLXowLTlfXXwlWzAtOWEtZl17Mn0pKyg/OjpbMS05XVswLTldezAsM318XFwqKT8pKlxcfSkqJC9pO1xuLy8gRm9yIHRoZSBzb3VyY2U6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2RwZXJpbmkvNzI5Mjk0XG4vLyBGb3IgdGVzdCBjYXNlczogaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL2RlbW8vdXJsLXJlZ2V4XG5jb25zdCBVUkxfID0gL14oPzooPzpodHRwcz98ZnRwKTpcXC9cXC8pKD86XFxTKyg/OjpcXFMqKT9AKT8oPzooPyExMCg/OlxcLlxcZHsxLDN9KXszfSkoPyExMjcoPzpcXC5cXGR7MSwzfSl7M30pKD8hMTY5XFwuMjU0KD86XFwuXFxkezEsM30pezJ9KSg/ITE5MlxcLjE2OCg/OlxcLlxcZHsxLDN9KXsyfSkoPyExNzJcXC4oPzoxWzYtOV18MlxcZHwzWzAtMV0pKD86XFwuXFxkezEsM30pezJ9KSg/OlsxLTldXFxkP3wxXFxkXFxkfDJbMDFdXFxkfDIyWzAtM10pKD86XFwuKD86MT9cXGR7MSwyfXwyWzAtNF1cXGR8MjVbMC01XSkpezJ9KD86XFwuKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNF0pKXwoPzooPzpbYS16XFx1ezAwYTF9LVxcdXtmZmZmfTAtOV0rLT8pKlthLXpcXHV7MDBhMX0tXFx1e2ZmZmZ9MC05XSspKD86XFwuKD86W2EtelxcdXswMGExfS1cXHV7ZmZmZn0wLTldKy0/KSpbYS16XFx1ezAwYTF9LVxcdXtmZmZmfTAtOV0rKSooPzpcXC4oPzpbYS16XFx1ezAwYTF9LVxcdXtmZmZmfV17Mix9KSkpKD86OlxcZHsyLDV9KT8oPzpcXC9bXlxcc10qKT8kL2l1O1xuY29uc3QgVVVJRCA9IC9eKD86dXJuOnV1aWQ6KT9bMC05YS1mXXs4fS0oPzpbMC05YS1mXXs0fS0pezN9WzAtOWEtZl17MTJ9JC9pO1xuY29uc3QgSlNPTl9QT0lOVEVSID0gL14oPzpcXC8oPzpbXn4vXXx+MHx+MSkqKSokLztcbmNvbnN0IEpTT05fUE9JTlRFUl9VUklfRlJBR01FTlQgPSAvXiMoPzpcXC8oPzpbYS16MC05X1xcLS4hJCYnKCkqKyw7Oj1AXXwlWzAtOWEtZl17Mn18fjB8fjEpKikqJC9pO1xuY29uc3QgUkVMQVRJVkVfSlNPTl9QT0lOVEVSID0gL14oPzowfFsxLTldWzAtOV0qKSg/OiN8KD86XFwvKD86W15+L118fjB8fjEpKikqKSQvO1xuLy8gZGF0ZTogaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzMzOSNzZWN0aW9uLTUuNlxuY29uc3QgRkFTVERBVEUgPSAvXlxcZFxcZFxcZFxcZC1bMC0xXVxcZC1bMC0zXVxcZCQvO1xuLy8gZGF0ZS10aW1lOiBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzMzM5I3NlY3Rpb24tNS42XG5jb25zdCBGQVNUVElNRSA9IC9eKD86WzAtMl1cXGQ6WzAtNV1cXGQ6WzAtNV1cXGR8MjM6NTk6NjApKD86XFwuXFxkKyk/KD86enxbKy1dXFxkXFxkKD86Oj9cXGRcXGQpPyk/JC9pO1xuY29uc3QgRkFTVERBVEVUSU1FID0gL15cXGRcXGRcXGRcXGQtWzAtMV1cXGQtWzAtM11cXGRbdFxcc10oPzpbMC0yXVxcZDpbMC01XVxcZDpbMC01XVxcZHwyMzo1OTo2MCkoPzpcXC5cXGQrKT8oPzp6fFsrLV1cXGRcXGQoPzo6P1xcZFxcZCk/KSQvaTtcbi8vIHVyaTogaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9pcy1teS1qc29uLXZhbGlkL2Jsb2IvbWFzdGVyL2Zvcm1hdHMuanNcbi8vIGNvbnN0IEZBU1RVUkkgPSAvXig/OlthLXpdW2EtejAtOSstLl0qOikoPzpcXC8/XFwvKT9bXlxcc10qJC9pO1xuY29uc3QgRkFTVFVSSVJFRkVSRU5DRSA9IC9eKD86KD86W2Etel1bYS16MC05Ky0uXSo6KT9cXC8/XFwvKT8oPzpbXlxcXFxcXHMjXVteXFxzI10qKT8oPzojW15cXFxcXFxzXSopPyQvaTtcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9FeG9kdXNNb3ZlbWVudC9zY2hlbWFzYWZlL2Jsb2IvbWFzdGVyL3NyYy9mb3JtYXRzLmpzXG5jb25zdCBFTUFJTCA9IChpbnB1dCkgPT4ge1xuICAgIGlmIChpbnB1dFswXSA9PT0gJ1wiJylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IFtuYW1lLCBob3N0LCAuLi5yZXN0XSA9IGlucHV0LnNwbGl0KFwiQFwiKTtcbiAgICBpZiAoIW5hbWUgfHxcbiAgICAgICAgIWhvc3QgfHxcbiAgICAgICAgcmVzdC5sZW5ndGggIT09IDAgfHxcbiAgICAgICAgbmFtZS5sZW5ndGggPiA2NCB8fFxuICAgICAgICBob3N0Lmxlbmd0aCA+IDI1MylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChuYW1lWzBdID09PSBcIi5cIiB8fCBuYW1lLmVuZHNXaXRoKFwiLlwiKSB8fCBuYW1lLmluY2x1ZGVzKFwiLi5cIikpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIS9eW2EtejAtOS4tXSskL2kudGVzdChob3N0KSB8fFxuICAgICAgICAhL15bYS16MC05LiEjJCUmJyorLz0/Xl9ge3x9fi1dKyQvaS50ZXN0KG5hbWUpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIGhvc3RcbiAgICAgICAgLnNwbGl0KFwiLlwiKVxuICAgICAgICAuZXZlcnkoKHBhcnQpID0+IC9eW2EtejAtOV0oW2EtejAtOS1dezAsNjF9W2EtejAtOV0pPyQvaS50ZXN0KHBhcnQpKTtcbn07XG4vLyBvcHRpbWl6ZWQgaHR0cHM6Ly93d3cuc2FmYXJpYm9va3NvbmxpbmUuY29tL2xpYnJhcnkvdmlldy9yZWd1bGFyLWV4cHJlc3Npb25zLWNvb2tib29rLzk3ODA1OTY4MDI4MzcvY2gwN3MxNi5odG1sXG5jb25zdCBJUFY0ID0gL14oPzooPzoyNVswLTVdfDJbMC00XVxcZHxbMDFdP1xcZFxcZD8pXFwuKXszfSg/OjI1WzAtNV18MlswLTRdXFxkfFswMV0/XFxkXFxkPykkLztcbi8vIG9wdGltaXplZCBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUzNDk3L3JlZ3VsYXItZXhwcmVzc2lvbi10aGF0LW1hdGNoZXMtdmFsaWQtaXB2Ni1hZGRyZXNzZXNcbmNvbnN0IElQVjYgPSAvXigoKFswLTlhLWZdezEsNH06KXs3fShbMC05YS1mXXsxLDR9fDopKXwoKFswLTlhLWZdezEsNH06KXs2fSg6WzAtOWEtZl17MSw0fXwoKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSl8OikpfCgoWzAtOWEtZl17MSw0fTopezV9KCgoOlswLTlhLWZdezEsNH0pezEsMn0pfDooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSl8OikpfCgoWzAtOWEtZl17MSw0fTopezR9KCgoOlswLTlhLWZdezEsNH0pezEsM30pfCgoOlswLTlhLWZdezEsNH0pPzooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSkpfDopKXwoKFswLTlhLWZdezEsNH06KXszfSgoKDpbMC05YS1mXXsxLDR9KXsxLDR9KXwoKDpbMC05YS1mXXsxLDR9KXswLDJ9OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KSl8OikpfCgoWzAtOWEtZl17MSw0fTopezJ9KCgoOlswLTlhLWZdezEsNH0pezEsNX0pfCgoOlswLTlhLWZdezEsNH0pezAsM306KCgyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkoXFwuKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKSl7M30pKXw6KSl8KChbMC05YS1mXXsxLDR9Oil7MX0oKCg6WzAtOWEtZl17MSw0fSl7MSw2fSl8KCg6WzAtOWEtZl17MSw0fSl7MCw0fTooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSkpfDopKXwoOigoKDpbMC05YS1mXXsxLDR9KXsxLDd9KXwoKDpbMC05YS1mXXsxLDR9KXswLDV9OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KSl8OikpKSQvaTtcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9FeG9kdXNNb3ZlbWVudC9zY2hlbWFzYWZlL2Jsb2IvbWFzdGVyL3NyYy9mb3JtYXRzLmpzXG5jb25zdCBEVVJBVElPTiA9IChpbnB1dCkgPT4gaW5wdXQubGVuZ3RoID4gMSAmJlxuICAgIGlucHV0Lmxlbmd0aCA8IDgwICYmXG4gICAgKC9eUFxcZCsoWy4sXVxcZCspP1ckLy50ZXN0KGlucHV0KSB8fFxuICAgICAgICAoL15QW1xcZFlNRFRIU10qKFxcZFsuLF1cXGQrKT9bWU1ESFNdJC8udGVzdChpbnB1dCkgJiZcbiAgICAgICAgICAgIC9eUChbLixcXGRdK1kpPyhbLixcXGRdK00pPyhbLixcXGRdK0QpPyhUKFsuLFxcZF0rSCk/KFsuLFxcZF0rTSk/KFsuLFxcZF0rUyk/KT8kLy50ZXN0KGlucHV0KSkpO1xuZnVuY3Rpb24gYmluZChyKSB7XG4gICAgcmV0dXJuIHIudGVzdC5iaW5kKHIpO1xufVxuZXhwb3J0IGNvbnN0IGZ1bGxGb3JtYXQgPSB7XG4gICAgZGF0ZSxcbiAgICB0aW1lOiAvKiAjX19QVVJFX18gKi8gdGltZS5iaW5kKHVuZGVmaW5lZCwgZmFsc2UpLFxuICAgIFwiZGF0ZS10aW1lXCI6IGRhdGVfdGltZSxcbiAgICBkdXJhdGlvbjogRFVSQVRJT04sXG4gICAgdXJpLFxuICAgIFwidXJpLXJlZmVyZW5jZVwiOiAvKiAjX19QVVJFX18gKi8gYmluZChVUklSRUYpLFxuICAgIFwidXJpLXRlbXBsYXRlXCI6IC8qICNfX1BVUkVfXyAqLyBiaW5kKFVSSVRFTVBMQVRFKSxcbiAgICB1cmw6IC8qICNfX1BVUkVfXyAqLyBiaW5kKFVSTF8pLFxuICAgIGVtYWlsOiBFTUFJTCxcbiAgICBob3N0bmFtZTogLyogI19fUFVSRV9fICovIGJpbmQoSE9TVE5BTUUpLFxuICAgIGlwdjQ6IC8qICNfX1BVUkVfXyAqLyBiaW5kKElQVjQpLFxuICAgIGlwdjY6IC8qICNfX1BVUkVfXyAqLyBiaW5kKElQVjYpLFxuICAgIHJlZ2V4OiByZWdleCxcbiAgICB1dWlkOiAvKiAjX19QVVJFX18gKi8gYmluZChVVUlEKSxcbiAgICBcImpzb24tcG9pbnRlclwiOiAvKiAjX19QVVJFX18gKi8gYmluZChKU09OX1BPSU5URVIpLFxuICAgIFwianNvbi1wb2ludGVyLXVyaS1mcmFnbWVudFwiOiAvKiAjX19QVVJFX18gKi8gYmluZChKU09OX1BPSU5URVJfVVJJX0ZSQUdNRU5UKSxcbiAgICBcInJlbGF0aXZlLWpzb24tcG9pbnRlclwiOiAvKiAjX19QVVJFX18gKi8gYmluZChSRUxBVElWRV9KU09OX1BPSU5URVIpLFxufTtcbmV4cG9ydCBjb25zdCBmYXN0Rm9ybWF0ID0ge1xuICAgIC4uLmZ1bGxGb3JtYXQsXG4gICAgZGF0ZTogLyogI19fUFVSRV9fICovIGJpbmQoRkFTVERBVEUpLFxuICAgIHRpbWU6IC8qICNfX1BVUkVfXyAqLyBiaW5kKEZBU1RUSU1FKSxcbiAgICBcImRhdGUtdGltZVwiOiAvKiAjX19QVVJFX18gKi8gYmluZChGQVNUREFURVRJTUUpLFxuICAgIFwidXJpLXJlZmVyZW5jZVwiOiAvKiAjX19QVVJFX18gKi8gYmluZChGQVNUVVJJUkVGRVJFTkNFKSxcbn07XG5mdW5jdGlvbiBpc0xlYXBZZWFyKHllYXIpIHtcbiAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzMzOSNhcHBlbmRpeC1DXG4gICAgcmV0dXJuIHllYXIgJSA0ID09PSAwICYmICh5ZWFyICUgMTAwICE9PSAwIHx8IHllYXIgJSA0MDAgPT09IDApO1xufVxuZnVuY3Rpb24gZGF0ZShzdHIpIHtcbiAgICAvLyBmdWxsLWRhdGUgZnJvbSBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzMzM5I3NlY3Rpb24tNS42XG4gICAgY29uc3QgbWF0Y2hlcyA9IHN0ci5tYXRjaChEQVRFKTtcbiAgICBpZiAoIW1hdGNoZXMpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCB5ZWFyID0gK21hdGNoZXNbMV07XG4gICAgY29uc3QgbW9udGggPSArbWF0Y2hlc1syXTtcbiAgICBjb25zdCBkYXkgPSArbWF0Y2hlc1szXTtcbiAgICByZXR1cm4gKG1vbnRoID49IDEgJiZcbiAgICAgICAgbW9udGggPD0gMTIgJiZcbiAgICAgICAgZGF5ID49IDEgJiZcbiAgICAgICAgZGF5IDw9IChtb250aCA9PSAyICYmIGlzTGVhcFllYXIoeWVhcikgPyAyOSA6IERBWVNbbW9udGhdKSk7XG59XG5mdW5jdGlvbiB0aW1lKGZ1bGwsIHN0cikge1xuICAgIGNvbnN0IG1hdGNoZXMgPSBzdHIubWF0Y2goVElNRSk7XG4gICAgaWYgKCFtYXRjaGVzKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgaG91ciA9ICttYXRjaGVzWzFdO1xuICAgIGNvbnN0IG1pbnV0ZSA9ICttYXRjaGVzWzJdO1xuICAgIGNvbnN0IHNlY29uZCA9ICttYXRjaGVzWzNdO1xuICAgIGNvbnN0IHRpbWVab25lID0gISFtYXRjaGVzWzVdO1xuICAgIHJldHVybiAoKChob3VyIDw9IDIzICYmIG1pbnV0ZSA8PSA1OSAmJiBzZWNvbmQgPD0gNTkpIHx8XG4gICAgICAgIChob3VyID09IDIzICYmIG1pbnV0ZSA9PSA1OSAmJiBzZWNvbmQgPT0gNjApKSAmJlxuICAgICAgICAoIWZ1bGwgfHwgdGltZVpvbmUpKTtcbn1cbmNvbnN0IERBVEVfVElNRV9TRVBBUkFUT1IgPSAvdHxcXHMvaTtcbmZ1bmN0aW9uIGRhdGVfdGltZShzdHIpIHtcbiAgICAvLyBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzMzM5I3NlY3Rpb24tNS42XG4gICAgY29uc3QgZGF0ZVRpbWUgPSBzdHIuc3BsaXQoREFURV9USU1FX1NFUEFSQVRPUik7XG4gICAgcmV0dXJuIGRhdGVUaW1lLmxlbmd0aCA9PSAyICYmIGRhdGUoZGF0ZVRpbWVbMF0pICYmIHRpbWUodHJ1ZSwgZGF0ZVRpbWVbMV0pO1xufVxuY29uc3QgTk9UX1VSSV9GUkFHTUVOVCA9IC9cXC98Oi87XG5jb25zdCBVUklfUEFUVEVSTiA9IC9eKD86W2Etel1bYS16MC05K1xcLS5dKjopKD86XFwvP1xcLyg/Oig/OlthLXowLTlcXC0uX34hJCYnKCkqKyw7PTpdfCVbMC05YS1mXXsyfSkqQCk/KD86XFxbKD86KD86KD86KD86WzAtOWEtZl17MSw0fTopezZ9fDo6KD86WzAtOWEtZl17MSw0fTopezV9fCg/OlswLTlhLWZdezEsNH0pPzo6KD86WzAtOWEtZl17MSw0fTopezR9fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDF9WzAtOWEtZl17MSw0fSk/OjooPzpbMC05YS1mXXsxLDR9Oil7M318KD86KD86WzAtOWEtZl17MSw0fTopezAsMn1bMC05YS1mXXsxLDR9KT86Oig/OlswLTlhLWZdezEsNH06KXsyfXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCwzfVswLTlhLWZdezEsNH0pPzo6WzAtOWEtZl17MSw0fTp8KD86KD86WzAtOWEtZl17MSw0fTopezAsNH1bMC05YS1mXXsxLDR9KT86OikoPzpbMC05YS1mXXsxLDR9OlswLTlhLWZdezEsNH18KD86KD86MjVbMC01XXwyWzAtNF1cXGR8WzAxXT9cXGRcXGQ/KVxcLil7M30oPzoyNVswLTVdfDJbMC00XVxcZHxbMDFdP1xcZFxcZD8pKXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCw1fVswLTlhLWZdezEsNH0pPzo6WzAtOWEtZl17MSw0fXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCw2fVswLTlhLWZdezEsNH0pPzo6KXxbVnZdWzAtOWEtZl0rXFwuW2EtejAtOVxcLS5ffiEkJicoKSorLDs9Ol0rKVxcXXwoPzooPzoyNVswLTVdfDJbMC00XVxcZHxbMDFdP1xcZFxcZD8pXFwuKXszfSg/OjI1WzAtNV18MlswLTRdXFxkfFswMV0/XFxkXFxkPyl8KD86W2EtejAtOVxcLS5ffiEkJicoKSorLDs9XXwlWzAtOWEtZl17Mn0pKikoPzo6XFxkKik/KD86XFwvKD86W2EtejAtOVxcLS5ffiEkJicoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSp8XFwvKD86KD86W2EtejAtOVxcLS5ffiEkJicoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkrKD86XFwvKD86W2EtejAtOVxcLS5ffiEkJicoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSopP3woPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06QF18JVswLTlhLWZdezJ9KSsoPzpcXC8oPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06QF18JVswLTlhLWZdezJ9KSopKikoPzpcXD8oPzpbYS16MC05XFwtLl9+ISQmJygpKissOz06QC8/XXwlWzAtOWEtZl17Mn0pKik/KD86Iyg/OlthLXowLTlcXC0uX34hJCYnKCkqKyw7PTpALz9dfCVbMC05YS1mXXsyfSkqKT8kL2k7XG5mdW5jdGlvbiB1cmkoc3RyKSB7XG4gICAgLy8gaHR0cDovL2ptcndhcmUuY29tL2FydGljbGVzLzIwMDkvdXJpX3JlZ2V4cC9VUklfcmVnZXguaHRtbCArIG9wdGlvbmFsIHByb3RvY29sICsgcmVxdWlyZWQgXCIuXCJcbiAgICByZXR1cm4gTk9UX1VSSV9GUkFHTUVOVC50ZXN0KHN0cikgJiYgVVJJX1BBVFRFUk4udGVzdChzdHIpO1xufVxuY29uc3QgWl9BTkNIT1IgPSAvW15cXFxcXVxcXFxaLztcbmZ1bmN0aW9uIHJlZ2V4KHN0cikge1xuICAgIGlmIChaX0FOQ0hPUi50ZXN0KHN0cikpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB0cnkge1xuICAgICAgICBuZXcgUmVnRXhwKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/format.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/index.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/index.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Validator: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_7__.Validator),\n/* harmony export */   deepCompareStrict: () => (/* reexport safe */ _deep_compare_strict_js__WEBPACK_IMPORTED_MODULE_0__.deepCompareStrict),\n/* harmony export */   dereference: () => (/* reexport safe */ _dereference_js__WEBPACK_IMPORTED_MODULE_1__.dereference),\n/* harmony export */   encodePointer: () => (/* reexport safe */ _pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer),\n/* harmony export */   escapePointer: () => (/* reexport safe */ _pointer_js__WEBPACK_IMPORTED_MODULE_3__.escapePointer),\n/* harmony export */   fastFormat: () => (/* reexport safe */ _format_js__WEBPACK_IMPORTED_MODULE_2__.fastFormat),\n/* harmony export */   fullFormat: () => (/* reexport safe */ _format_js__WEBPACK_IMPORTED_MODULE_2__.fullFormat),\n/* harmony export */   ignoredKeyword: () => (/* reexport safe */ _dereference_js__WEBPACK_IMPORTED_MODULE_1__.ignoredKeyword),\n/* harmony export */   initialBaseURI: () => (/* reexport safe */ _dereference_js__WEBPACK_IMPORTED_MODULE_1__.initialBaseURI),\n/* harmony export */   schemaArrayKeyword: () => (/* reexport safe */ _dereference_js__WEBPACK_IMPORTED_MODULE_1__.schemaArrayKeyword),\n/* harmony export */   schemaKeyword: () => (/* reexport safe */ _dereference_js__WEBPACK_IMPORTED_MODULE_1__.schemaKeyword),\n/* harmony export */   schemaMapKeyword: () => (/* reexport safe */ _dereference_js__WEBPACK_IMPORTED_MODULE_1__.schemaMapKeyword),\n/* harmony export */   ucs2length: () => (/* reexport safe */ _ucs2_length_js__WEBPACK_IMPORTED_MODULE_5__.ucs2length),\n/* harmony export */   validate: () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__.validate)\n/* harmony export */ });\n/* harmony import */ var _deep_compare_strict_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deep-compare-strict.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/deep-compare-strict.js\");\n/* harmony import */ var _dereference_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dereference.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js\");\n/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./format.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/format.js\");\n/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pointer.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/pointer.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/types.js\");\n/* harmony import */ var _ucs2_length_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ucs2-length.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/ucs2-length.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validate.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validator.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validator.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUM7QUFDUjtBQUNMO0FBQ0M7QUFDRjtBQUNNO0FBQ0g7QUFDQyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL2luZGV4LmpzP2RiYWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZGVlcC1jb21wYXJlLXN0cmljdC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZGVyZWZlcmVuY2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zvcm1hdC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcG9pbnRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VjczItbGVuZ3RoLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdmFsaWRhdG9yLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/pointer.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/pointer.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePointer: () => (/* binding */ encodePointer),\n/* harmony export */   escapePointer: () => (/* binding */ escapePointer)\n/* harmony export */ });\nfunction encodePointer(p) {\n    return encodeURI(escapePointer(p));\n}\nfunction escapePointer(p) {\n    return p.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL3BvaW50ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdXRpbHMvQGNmd29ya2VyL2pzb24tc2NoZW1hL3NyYy9wb2ludGVyLmpzP2YzOTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVBvaW50ZXIocCkge1xuICAgIHJldHVybiBlbmNvZGVVUkkoZXNjYXBlUG9pbnRlcihwKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlUG9pbnRlcihwKSB7XG4gICAgcmV0dXJuIHAucmVwbGFjZSgvfi9nLCBcIn4wXCIpLnJlcGxhY2UoL1xcLy9nLCBcIn4xXCIpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/pointer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/types.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/types.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL3R5cGVzLmpzP2JhZGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/ucs2-length.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/ucs2-length.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ucs2length: () => (/* binding */ ucs2length)\n/* harmony export */ });\n/**\n * Get UCS-2 length of a string\n * https://mathiasbynens.be/notes/javascript-encoding\n * https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\n */\nfunction ucs2length(s) {\n    let result = 0;\n    let length = s.length;\n    let index = 0;\n    let charCode;\n    while (index < length) {\n        result++;\n        charCode = s.charCodeAt(index++);\n        if (charCode >= 0xd800 && charCode <= 0xdbff && index < length) {\n            // high surrogate, and there is a next character\n            charCode = s.charCodeAt(index);\n            if ((charCode & 0xfc00) == 0xdc00) {\n                // low surrogate\n                index++;\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL3VjczItbGVuZ3RoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdXRpbHMvQGNmd29ya2VyL2pzb24tc2NoZW1hL3NyYy91Y3MyLWxlbmd0aC5qcz9jZjM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IFVDUy0yIGxlbmd0aCBvZiBhIHN0cmluZ1xuICogaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2RpbmdcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9wdW55Y29kZS5qcyAtIHB1bnljb2RlLnVjczIuZGVjb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1Y3MybGVuZ3RoKHMpIHtcbiAgICBsZXQgcmVzdWx0ID0gMDtcbiAgICBsZXQgbGVuZ3RoID0gcy5sZW5ndGg7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBsZXQgY2hhckNvZGU7XG4gICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHJlc3VsdCsrO1xuICAgICAgICBjaGFyQ29kZSA9IHMuY2hhckNvZGVBdChpbmRleCsrKTtcbiAgICAgICAgaWYgKGNoYXJDb2RlID49IDB4ZDgwMCAmJiBjaGFyQ29kZSA8PSAweGRiZmYgJiYgaW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIGhpZ2ggc3Vycm9nYXRlLCBhbmQgdGhlcmUgaXMgYSBuZXh0IGNoYXJhY3RlclxuICAgICAgICAgICAgY2hhckNvZGUgPSBzLmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgICAgICAgICAgaWYgKChjaGFyQ29kZSAmIDB4ZmMwMCkgPT0gMHhkYzAwKSB7XG4gICAgICAgICAgICAgICAgLy8gbG93IHN1cnJvZ2F0ZVxuICAgICAgICAgICAgICAgIGluZGV4Kys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/ucs2-length.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validate.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validate.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validate: () => (/* binding */ validate)\n/* harmony export */ });\n/* harmony import */ var _deep_compare_strict_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deep-compare-strict.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/deep-compare-strict.js\");\n/* harmony import */ var _dereference_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dereference.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js\");\n/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./format.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/format.js\");\n/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pointer.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/pointer.js\");\n/* harmony import */ var _ucs2_length_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ucs2-length.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/ucs2-length.js\");\n\n\n\n\n\nfunction validate(instance, schema, draft = \"2019-09\", lookup = (0,_dereference_js__WEBPACK_IMPORTED_MODULE_1__.dereference)(schema), shortCircuit = true, recursiveAnchor = null, instanceLocation = \"#\", schemaLocation = \"#\", evaluated = Object.create(null)) {\n    if (schema === true) {\n        return { valid: true, errors: [] };\n    }\n    if (schema === false) {\n        return {\n            valid: false,\n            errors: [\n                {\n                    instanceLocation,\n                    keyword: \"false\",\n                    keywordLocation: instanceLocation,\n                    error: \"False boolean schema.\",\n                },\n            ],\n        };\n    }\n    const rawInstanceType = typeof instance;\n    let instanceType;\n    switch (rawInstanceType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            instanceType = rawInstanceType;\n            break;\n        case \"object\":\n            if (instance === null) {\n                instanceType = \"null\";\n            }\n            else if (Array.isArray(instance)) {\n                instanceType = \"array\";\n            }\n            else {\n                instanceType = \"object\";\n            }\n            break;\n        default:\n            // undefined, bigint, function, symbol\n            throw new Error(`Instances of \"${rawInstanceType}\" type are not supported.`);\n    }\n    const { $ref, $recursiveRef, $recursiveAnchor, type: $type, const: $const, enum: $enum, required: $required, not: $not, anyOf: $anyOf, allOf: $allOf, oneOf: $oneOf, if: $if, then: $then, else: $else, format: $format, properties: $properties, patternProperties: $patternProperties, additionalProperties: $additionalProperties, unevaluatedProperties: $unevaluatedProperties, minProperties: $minProperties, maxProperties: $maxProperties, propertyNames: $propertyNames, dependentRequired: $dependentRequired, dependentSchemas: $dependentSchemas, dependencies: $dependencies, prefixItems: $prefixItems, items: $items, additionalItems: $additionalItems, unevaluatedItems: $unevaluatedItems, contains: $contains, minContains: $minContains, maxContains: $maxContains, minItems: $minItems, maxItems: $maxItems, uniqueItems: $uniqueItems, minimum: $minimum, maximum: $maximum, exclusiveMinimum: $exclusiveMinimum, exclusiveMaximum: $exclusiveMaximum, multipleOf: $multipleOf, minLength: $minLength, maxLength: $maxLength, pattern: $pattern, __absolute_ref__, __absolute_recursive_ref__, } = schema;\n    const errors = [];\n    if ($recursiveAnchor === true && recursiveAnchor === null) {\n        recursiveAnchor = schema;\n    }\n    if ($recursiveRef === \"#\") {\n        const refSchema = recursiveAnchor === null\n            ? lookup[__absolute_recursive_ref__]\n            : recursiveAnchor;\n        const keywordLocation = `${schemaLocation}/$recursiveRef`;\n        const result = validate(instance, recursiveAnchor === null ? schema : recursiveAnchor, draft, lookup, shortCircuit, refSchema, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: \"$recursiveRef\",\n                keywordLocation,\n                error: \"A subschema had errors.\",\n            }, ...result.errors);\n        }\n    }\n    if ($ref !== undefined) {\n        const uri = __absolute_ref__ || $ref;\n        const refSchema = lookup[uri];\n        if (refSchema === undefined) {\n            let message = `Unresolved $ref \"${$ref}\".`;\n            if (__absolute_ref__ && __absolute_ref__ !== $ref) {\n                message += `  Absolute URI \"${__absolute_ref__}\".`;\n            }\n            message += `\\nKnown schemas:\\n- ${Object.keys(lookup).join(\"\\n- \")}`;\n            throw new Error(message);\n        }\n        const keywordLocation = `${schemaLocation}/$ref`;\n        const result = validate(instance, refSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: \"$ref\",\n                keywordLocation,\n                error: \"A subschema had errors.\",\n            }, ...result.errors);\n        }\n        if (draft === \"4\" || draft === \"7\") {\n            return { valid: errors.length === 0, errors };\n        }\n    }\n    if (Array.isArray($type)) {\n        let length = $type.length;\n        let valid = false;\n        for (let i = 0; i < length; i++) {\n            if (instanceType === $type[i] ||\n                ($type[i] === \"integer\" &&\n                    instanceType === \"number\" &&\n                    instance % 1 === 0 &&\n                    instance === instance)) {\n                valid = true;\n                break;\n            }\n        }\n        if (!valid) {\n            errors.push({\n                instanceLocation,\n                keyword: \"type\",\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type.join('\", \"')}\".`,\n            });\n        }\n    }\n    else if ($type === \"integer\") {\n        if (instanceType !== \"number\" || instance % 1 || instance !== instance) {\n            errors.push({\n                instanceLocation,\n                keyword: \"type\",\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`,\n            });\n        }\n    }\n    else if ($type !== undefined && instanceType !== $type) {\n        errors.push({\n            instanceLocation,\n            keyword: \"type\",\n            keywordLocation: `${schemaLocation}/type`,\n            error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`,\n        });\n    }\n    if ($const !== undefined) {\n        if (instanceType === \"object\" || instanceType === \"array\") {\n            if (!(0,_deep_compare_strict_js__WEBPACK_IMPORTED_MODULE_0__.deepCompareStrict)(instance, $const)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"const\",\n                    keywordLocation: `${schemaLocation}/const`,\n                    error: `Instance does not match ${JSON.stringify($const)}.`,\n                });\n            }\n        }\n        else if (instance !== $const) {\n            errors.push({\n                instanceLocation,\n                keyword: \"const\",\n                keywordLocation: `${schemaLocation}/const`,\n                error: `Instance does not match ${JSON.stringify($const)}.`,\n            });\n        }\n    }\n    if ($enum !== undefined) {\n        if (instanceType === \"object\" || instanceType === \"array\") {\n            if (!$enum.some((value) => (0,_deep_compare_strict_js__WEBPACK_IMPORTED_MODULE_0__.deepCompareStrict)(instance, value))) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"enum\",\n                    keywordLocation: `${schemaLocation}/enum`,\n                    error: `Instance does not match any of ${JSON.stringify($enum)}.`,\n                });\n            }\n        }\n        else if (!$enum.some((value) => instance === value)) {\n            errors.push({\n                instanceLocation,\n                keyword: \"enum\",\n                keywordLocation: `${schemaLocation}/enum`,\n                error: `Instance does not match any of ${JSON.stringify($enum)}.`,\n            });\n        }\n    }\n    if ($not !== undefined) {\n        const keywordLocation = `${schemaLocation}/not`;\n        const result = validate(instance, $not, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation /*,\n        evaluated*/);\n        if (result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: \"not\",\n                keywordLocation,\n                error: 'Instance matched \"not\" schema.',\n            });\n        }\n    }\n    let subEvaluateds = [];\n    if ($anyOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/anyOf`;\n        const errorsLength = errors.length;\n        let anyValid = false;\n        for (let i = 0; i < $anyOf.length; i++) {\n            const subSchema = $anyOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            anyValid = anyValid || result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (anyValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: \"anyOf\",\n                keywordLocation,\n                error: \"Instance does not match any subschemas.\",\n            });\n        }\n    }\n    if ($allOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/allOf`;\n        const errorsLength = errors.length;\n        let allValid = true;\n        for (let i = 0; i < $allOf.length; i++) {\n            const subSchema = $allOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            allValid = allValid && result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (allValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: \"allOf\",\n                keywordLocation,\n                error: `Instance does not match every subschema.`,\n            });\n        }\n    }\n    if ($oneOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/oneOf`;\n        const errorsLength = errors.length;\n        const matches = $oneOf.filter((subSchema, i) => {\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n            return result.valid;\n        }).length;\n        if (matches === 1) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: \"oneOf\",\n                keywordLocation,\n                error: `Instance does not match exactly one subschema (${matches} matches).`,\n            });\n        }\n    }\n    if (instanceType === \"object\" || instanceType === \"array\") {\n        Object.assign(evaluated, ...subEvaluateds);\n    }\n    if ($if !== undefined) {\n        const keywordLocation = `${schemaLocation}/if`;\n        const conditionResult = validate(instance, $if, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated).valid;\n        if (conditionResult) {\n            if ($then !== undefined) {\n                const thenResult = validate(instance, $then, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/then`, evaluated);\n                if (!thenResult.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"if\",\n                        keywordLocation,\n                        error: `Instance does not match \"then\" schema.`,\n                    }, ...thenResult.errors);\n                }\n            }\n        }\n        else if ($else !== undefined) {\n            const elseResult = validate(instance, $else, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/else`, evaluated);\n            if (!elseResult.valid) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"if\",\n                    keywordLocation,\n                    error: `Instance does not match \"else\" schema.`,\n                }, ...elseResult.errors);\n            }\n        }\n    }\n    if (instanceType === \"object\") {\n        if ($required !== undefined) {\n            for (const key of $required) {\n                if (!(key in instance)) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"required\",\n                        keywordLocation: `${schemaLocation}/required`,\n                        error: `Instance does not have required property \"${key}\".`,\n                    });\n                }\n            }\n        }\n        const keys = Object.keys(instance);\n        if ($minProperties !== undefined && keys.length < $minProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: \"minProperties\",\n                keywordLocation: `${schemaLocation}/minProperties`,\n                error: `Instance does not have at least ${$minProperties} properties.`,\n            });\n        }\n        if ($maxProperties !== undefined && keys.length > $maxProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: \"maxProperties\",\n                keywordLocation: `${schemaLocation}/maxProperties`,\n                error: `Instance does not have at least ${$maxProperties} properties.`,\n            });\n        }\n        if ($propertyNames !== undefined) {\n            const keywordLocation = `${schemaLocation}/propertyNames`;\n            for (const key in instance) {\n                const subInstancePointer = `${instanceLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`;\n                const result = validate(key, $propertyNames, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"propertyNames\",\n                        keywordLocation,\n                        error: `Property name \"${key}\" does not match schema.`,\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($dependentRequired !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependantRequired`;\n            for (const key in $dependentRequired) {\n                if (key in instance) {\n                    const required = $dependentRequired[key];\n                    for (const dependantKey of required) {\n                        if (!(dependantKey in instance)) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: \"dependentRequired\",\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if ($dependentSchemas !== undefined) {\n            for (const key in $dependentSchemas) {\n                const keywordLocation = `${schemaLocation}/dependentSchemas`;\n                if (key in instance) {\n                    const result = validate(instance, $dependentSchemas[key], draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`, evaluated);\n                    if (!result.valid) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"dependentSchemas\",\n                            keywordLocation,\n                            error: `Instance has \"${key}\" but does not match dependant schema.`,\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($dependencies !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependencies`;\n            for (const key in $dependencies) {\n                if (key in instance) {\n                    const propsOrSchema = $dependencies[key];\n                    if (Array.isArray(propsOrSchema)) {\n                        for (const dependantKey of propsOrSchema) {\n                            if (!(dependantKey in instance)) {\n                                errors.push({\n                                    instanceLocation,\n                                    keyword: \"dependencies\",\n                                    keywordLocation,\n                                    error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`,\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        const result = validate(instance, propsOrSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`);\n                        if (!result.valid) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: \"dependencies\",\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not match dependant schema.`,\n                            }, ...result.errors);\n                        }\n                    }\n                }\n            }\n        }\n        const thisEvaluated = Object.create(null);\n        let stop = false;\n        if ($properties !== undefined) {\n            const keywordLocation = `${schemaLocation}/properties`;\n            for (const key in $properties) {\n                if (!(key in instance)) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`;\n                const result = validate(instance[key], $properties[key], draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`);\n                if (result.valid) {\n                    evaluated[key] = thisEvaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"properties\",\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match schema.`,\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if (!stop && $patternProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/patternProperties`;\n            for (const pattern in $patternProperties) {\n                const regex = new RegExp(pattern);\n                const subSchema = $patternProperties[pattern];\n                for (const key in instance) {\n                    if (!regex.test(key)) {\n                        continue;\n                    }\n                    const subInstancePointer = `${instanceLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`;\n                    const result = validate(instance[key], subSchema, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(pattern)}`);\n                    if (result.valid) {\n                        evaluated[key] = thisEvaluated[key] = true;\n                    }\n                    else {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"patternProperties\",\n                            keywordLocation,\n                            error: `Property \"${key}\" matches pattern \"${pattern}\" but does not match associated schema.`,\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if (!stop && $additionalProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/additionalProperties`;\n            for (const key in instance) {\n                if (thisEvaluated[key]) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`;\n                const result = validate(instance[key], $additionalProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (result.valid) {\n                    evaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"additionalProperties\",\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match additional properties schema.`,\n                    }, ...result.errors);\n                }\n            }\n        }\n        else if (!stop && $unevaluatedProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedProperties`;\n            for (const key in instance) {\n                if (!evaluated[key]) {\n                    const subInstancePointer = `${instanceLocation}/${(0,_pointer_js__WEBPACK_IMPORTED_MODULE_3__.encodePointer)(key)}`;\n                    const result = validate(instance[key], $unevaluatedProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                    if (result.valid) {\n                        evaluated[key] = true;\n                    }\n                    else {\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"unevaluatedProperties\",\n                            keywordLocation,\n                            error: `Property \"${key}\" does not match unevaluated properties schema.`,\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === \"array\") {\n        if ($maxItems !== undefined && instance.length > $maxItems) {\n            errors.push({\n                instanceLocation,\n                keyword: \"maxItems\",\n                keywordLocation: `${schemaLocation}/maxItems`,\n                error: `Array has too many items (${instance.length} > ${$maxItems}).`,\n            });\n        }\n        if ($minItems !== undefined && instance.length < $minItems) {\n            errors.push({\n                instanceLocation,\n                keyword: \"minItems\",\n                keywordLocation: `${schemaLocation}/minItems`,\n                error: `Array has too few items (${instance.length} < ${$minItems}).`,\n            });\n        }\n        const length = instance.length;\n        let i = 0;\n        let stop = false;\n        if ($prefixItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/prefixItems`;\n            const length2 = Math.min($prefixItems.length, length);\n            for (; i < length2; i++) {\n                const result = validate(instance[i], $prefixItems[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"prefixItems\",\n                        keywordLocation,\n                        error: `Items did not match schema.`,\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if ($items !== undefined) {\n            const keywordLocation = `${schemaLocation}/items`;\n            if (Array.isArray($items)) {\n                const length2 = Math.min($items.length, length);\n                for (; i < length2; i++) {\n                    const result = validate(instance[i], $items[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"items\",\n                            keywordLocation,\n                            error: `Items did not match schema.`,\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            else {\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $items, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"items\",\n                            keywordLocation,\n                            error: `Items did not match schema.`,\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            if (!stop && $additionalItems !== undefined) {\n                const keywordLocation = `${schemaLocation}/additionalItems`;\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $additionalItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"additionalItems\",\n                            keywordLocation,\n                            error: `Items did not match additional items schema.`,\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($contains !== undefined) {\n            if (length === 0 && $minContains === undefined) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"contains\",\n                    keywordLocation: `${schemaLocation}/contains`,\n                    error: `Array is empty. It must contain at least one item matching the schema.`,\n                });\n            }\n            else if ($minContains !== undefined && length < $minContains) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"minContains\",\n                    keywordLocation: `${schemaLocation}/minContains`,\n                    error: `Array has less items (${length}) than minContains (${$minContains}).`,\n                });\n            }\n            else {\n                const keywordLocation = `${schemaLocation}/contains`;\n                const errorsLength = errors.length;\n                let contained = 0;\n                for (let j = 0; j < length; j++) {\n                    const result = validate(instance[j], $contains, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${j}`, keywordLocation);\n                    if (result.valid) {\n                        evaluated[j] = true;\n                        contained++;\n                    }\n                    else {\n                        errors.push(...result.errors);\n                    }\n                }\n                if (contained >= ($minContains || 0)) {\n                    errors.length = errorsLength;\n                }\n                if ($minContains === undefined &&\n                    $maxContains === undefined &&\n                    contained === 0) {\n                    errors.splice(errorsLength, 0, {\n                        instanceLocation,\n                        keyword: \"contains\",\n                        keywordLocation,\n                        error: `Array does not contain item matching schema.`,\n                    });\n                }\n                else if ($minContains !== undefined && contained < $minContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"minContains\",\n                        keywordLocation: `${schemaLocation}/minContains`,\n                        error: `Array must contain at least ${$minContains} items matching schema. Only ${contained} items were found.`,\n                    });\n                }\n                else if ($maxContains !== undefined && contained > $maxContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"maxContains\",\n                        keywordLocation: `${schemaLocation}/maxContains`,\n                        error: `Array may contain at most ${$maxContains} items matching schema. ${contained} items were found.`,\n                    });\n                }\n            }\n        }\n        if (!stop && $unevaluatedItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedItems`;\n            for (i; i < length; i++) {\n                if (evaluated[i]) {\n                    continue;\n                }\n                const result = validate(instance[i], $unevaluatedItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: \"unevaluatedItems\",\n                        keywordLocation,\n                        error: `Items did not match unevaluated items schema.`,\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($uniqueItems) {\n            for (let j = 0; j < length; j++) {\n                const a = instance[j];\n                const ao = typeof a === \"object\" && a !== null;\n                for (let k = 0; k < length; k++) {\n                    if (j === k) {\n                        continue;\n                    }\n                    const b = instance[k];\n                    const bo = typeof b === \"object\" && b !== null;\n                    if (a === b || (ao && bo && (0,_deep_compare_strict_js__WEBPACK_IMPORTED_MODULE_0__.deepCompareStrict)(a, b))) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: \"uniqueItems\",\n                            keywordLocation: `${schemaLocation}/uniqueItems`,\n                            error: `Duplicate items at indexes ${j} and ${k}.`,\n                        });\n                        j = Number.MAX_SAFE_INTEGER;\n                        k = Number.MAX_SAFE_INTEGER;\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === \"number\") {\n        if (draft === \"4\") {\n            if ($minimum !== undefined &&\n                (($exclusiveMinimum === true && instance <= $minimum) ||\n                    instance < $minimum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"minimum\",\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum ? \"or equal to \" : \"\"} ${$minimum}.`,\n                });\n            }\n            if ($maximum !== undefined &&\n                (($exclusiveMaximum === true && instance >= $maximum) ||\n                    instance > $maximum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"maximum\",\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$exclusiveMaximum ? \"or equal to \" : \"\"} ${$maximum}.`,\n                });\n            }\n        }\n        else {\n            if ($minimum !== undefined && instance < $minimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"minimum\",\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$minimum}.`,\n                });\n            }\n            if ($maximum !== undefined && instance > $maximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"maximum\",\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$maximum}.`,\n                });\n            }\n            if ($exclusiveMinimum !== undefined && instance <= $exclusiveMinimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"exclusiveMinimum\",\n                    keywordLocation: `${schemaLocation}/exclusiveMinimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum}.`,\n                });\n            }\n            if ($exclusiveMaximum !== undefined && instance >= $exclusiveMaximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"exclusiveMaximum\",\n                    keywordLocation: `${schemaLocation}/exclusiveMaximum`,\n                    error: `${instance} is greater than or equal to ${$exclusiveMaximum}.`,\n                });\n            }\n        }\n        if ($multipleOf !== undefined) {\n            const remainder = instance % $multipleOf;\n            if (Math.abs(0 - remainder) >= 1.1920929e-7 &&\n                Math.abs($multipleOf - remainder) >= 1.1920929e-7) {\n                errors.push({\n                    instanceLocation,\n                    keyword: \"multipleOf\",\n                    keywordLocation: `${schemaLocation}/multipleOf`,\n                    error: `${instance} is not a multiple of ${$multipleOf}.`,\n                });\n            }\n        }\n    }\n    else if (instanceType === \"string\") {\n        const length = $minLength === undefined && $maxLength === undefined\n            ? 0\n            : (0,_ucs2_length_js__WEBPACK_IMPORTED_MODULE_4__.ucs2length)(instance);\n        if ($minLength !== undefined && length < $minLength) {\n            errors.push({\n                instanceLocation,\n                keyword: \"minLength\",\n                keywordLocation: `${schemaLocation}/minLength`,\n                error: `String is too short (${length} < ${$minLength}).`,\n            });\n        }\n        if ($maxLength !== undefined && length > $maxLength) {\n            errors.push({\n                instanceLocation,\n                keyword: \"maxLength\",\n                keywordLocation: `${schemaLocation}/maxLength`,\n                error: `String is too long (${length} > ${$maxLength}).`,\n            });\n        }\n        if ($pattern !== undefined && !new RegExp($pattern).test(instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: \"pattern\",\n                keywordLocation: `${schemaLocation}/pattern`,\n                error: `String does not match pattern.`,\n            });\n        }\n        if ($format !== undefined &&\n            _format_js__WEBPACK_IMPORTED_MODULE_2__.fastFormat[$format] &&\n            !_format_js__WEBPACK_IMPORTED_MODULE_2__.fastFormat[$format](instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: \"format\",\n                keywordLocation: `${schemaLocation}/format`,\n                error: `String does not match format \"${$format}\".`,\n            });\n        }\n    }\n    return { valid: errors.length === 0, errors };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validator.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validator.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Validator: () => (/* binding */ Validator)\n/* harmony export */ });\n/* harmony import */ var _dereference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dereference.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validate.js\");\n\n\nclass Validator {\n    constructor(schema, draft = \"2019-09\", shortCircuit = true) {\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"draft\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: draft\n        });\n        Object.defineProperty(this, \"shortCircuit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: shortCircuit\n        });\n        Object.defineProperty(this, \"lookup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lookup = (0,_dereference_js__WEBPACK_IMPORTED_MODULE_0__.dereference)(schema);\n    }\n    validate(instance) {\n        return (0,_validate_js__WEBPACK_IMPORTED_MODULE_1__.validate)(instance, this.schema, this.draft, this.lookup, this.shortCircuit);\n    }\n    addSchema(schema, id) {\n        if (id) {\n            schema = { ...schema, $id: id };\n        }\n        (0,_dereference_js__WEBPACK_IMPORTED_MODULE_0__.dereference)(schema, this.lookup);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9AY2Z3b3JrZXIvanNvbi1zY2hlbWEvc3JjL3ZhbGlkYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDTjtBQUNsQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxzQkFBc0IsNERBQVc7QUFDakM7QUFDQTtBQUNBLGVBQWUsc0RBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsUUFBUSw0REFBVztBQUNuQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3V0aWxzL0BjZndvcmtlci9qc29uLXNjaGVtYS9zcmMvdmFsaWRhdG9yLmpzPzc3YWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVyZWZlcmVuY2UgfSBmcm9tIFwiLi9kZXJlZmVyZW5jZS5qc1wiO1xuaW1wb3J0IHsgdmFsaWRhdGUgfSBmcm9tIFwiLi92YWxpZGF0ZS5qc1wiO1xuZXhwb3J0IGNsYXNzIFZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3Ioc2NoZW1hLCBkcmFmdCA9IFwiMjAxOS0wOVwiLCBzaG9ydENpcmN1aXQgPSB0cnVlKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNjaGVtYVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogc2NoZW1hXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJkcmFmdFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZHJhZnRcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNob3J0Q2lyY3VpdFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogc2hvcnRDaXJjdWl0XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsb29rdXBcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5sb29rdXAgPSBkZXJlZmVyZW5jZShzY2hlbWEpO1xuICAgIH1cbiAgICB2YWxpZGF0ZShpbnN0YW5jZSkge1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUoaW5zdGFuY2UsIHRoaXMuc2NoZW1hLCB0aGlzLmRyYWZ0LCB0aGlzLmxvb2t1cCwgdGhpcy5zaG9ydENpcmN1aXQpO1xuICAgIH1cbiAgICBhZGRTY2hlbWEoc2NoZW1hLCBpZCkge1xuICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgIHNjaGVtYSA9IHsgLi4uc2NoZW1hLCAkaWQ6IGlkIH07XG4gICAgICAgIH1cbiAgICAgICAgZGVyZWZlcmVuY2Uoc2NoZW1hLCB0aGlzLmxvb2t1cCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/validator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncCaller: () => (/* binding */ AsyncCaller)\n/* harmony export */ });\n/* harmony import */ var p_retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p-retry */ \"(rsc)/./node_modules/p-retry/index.js\");\n/* harmony import */ var p_queue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! p-queue */ \"(rsc)/./node_modules/p-queue/dist/index.js\");\n\n\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nclass AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue =  true ? p_queue__WEBPACK_IMPORTED_MODULE_1__[\"default\"] : p_queue__WEBPACK_IMPORTED_MODULE_1__;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => p_retry__WEBPACK_IMPORTED_MODULE_0__(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9hc3luY19jYWxsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZCO0FBQ0c7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsS0FBc0IsR0FBRywrQ0FBaUIsR0FBRyxvQ0FBUztBQUM3RSxrQ0FBa0Msa0NBQWtDO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQ0FBTTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxLQUFLLHNCQUFzQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3V0aWxzL2FzeW5jX2NhbGxlci5qcz8wYzczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwUmV0cnkgZnJvbSBcInAtcmV0cnlcIjtcbmltcG9ydCBQUXVldWVNb2QgZnJvbSBcInAtcXVldWVcIjtcbmNvbnN0IFNUQVRVU19OT19SRVRSWSA9IFtcbiAgICA0MDAsXG4gICAgNDAxLFxuICAgIDQwMixcbiAgICA0MDMsXG4gICAgNDA0LFxuICAgIDQwNSxcbiAgICA0MDYsXG4gICAgNDA3LFxuICAgIDQwOSwgLy8gQ29uZmxpY3Rcbl07XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuY29uc3QgZGVmYXVsdEZhaWxlZEF0dGVtcHRIYW5kbGVyID0gKGVycm9yKSA9PiB7XG4gICAgaWYgKGVycm9yLm1lc3NhZ2Uuc3RhcnRzV2l0aChcIkNhbmNlbFwiKSB8fFxuICAgICAgICBlcnJvci5tZXNzYWdlLnN0YXJ0c1dpdGgoXCJBYm9ydEVycm9yXCIpIHx8XG4gICAgICAgIGVycm9yLm5hbWUgPT09IFwiQWJvcnRFcnJvclwiKSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGlmIChlcnJvcj8uY29kZSA9PT0gXCJFQ09OTkFCT1JURURcIikge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gICAgY29uc3Qgc3RhdHVzID0gXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBlcnJvcj8ucmVzcG9uc2U/LnN0YXR1cyA/PyBlcnJvcj8uc3RhdHVzO1xuICAgIGlmIChzdGF0dXMgJiYgU1RBVFVTX05PX1JFVFJZLmluY2x1ZGVzKCtzdGF0dXMpKSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGlmIChlcnJvcj8uZXJyb3I/LmNvZGUgPT09IFwiaW5zdWZmaWNpZW50X3F1b3RhXCIpIHtcbiAgICAgICAgY29uc3QgZXJyID0gbmV3IEVycm9yKGVycm9yPy5tZXNzYWdlKTtcbiAgICAgICAgZXJyLm5hbWUgPSBcIkluc3VmZmljaWVudFF1b3RhRXJyb3JcIjtcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbn07XG4vKipcbiAqIEEgY2xhc3MgdGhhdCBjYW4gYmUgdXNlZCB0byBtYWtlIGFzeW5jIGNhbGxzIHdpdGggY29uY3VycmVuY3kgYW5kIHJldHJ5IGxvZ2ljLlxuICpcbiAqIFRoaXMgaXMgdXNlZnVsIGZvciBtYWtpbmcgY2FsbHMgdG8gYW55IGtpbmQgb2YgXCJleHBlbnNpdmVcIiBleHRlcm5hbCByZXNvdXJjZSxcbiAqIGJlIGl0IGJlY2F1c2UgaXQncyByYXRlLWxpbWl0ZWQsIHN1YmplY3QgdG8gbmV0d29yayBpc3N1ZXMsIGV0Yy5cbiAqXG4gKiBDb25jdXJyZW50IGNhbGxzIGFyZSBsaW1pdGVkIGJ5IHRoZSBgbWF4Q29uY3VycmVuY3lgIHBhcmFtZXRlciwgd2hpY2ggZGVmYXVsdHNcbiAqIHRvIGBJbmZpbml0eWAuIFRoaXMgbWVhbnMgdGhhdCBieSBkZWZhdWx0LCBhbGwgY2FsbHMgd2lsbCBiZSBtYWRlIGluIHBhcmFsbGVsLlxuICpcbiAqIFJldHJpZXMgYXJlIGxpbWl0ZWQgYnkgdGhlIGBtYXhSZXRyaWVzYCBwYXJhbWV0ZXIsIHdoaWNoIGRlZmF1bHRzIHRvIDYuIFRoaXNcbiAqIG1lYW5zIHRoYXQgYnkgZGVmYXVsdCwgZWFjaCBjYWxsIHdpbGwgYmUgcmV0cmllZCB1cCB0byA2IHRpbWVzLCB3aXRoIGFuXG4gKiBleHBvbmVudGlhbCBiYWNrb2ZmIGJldHdlZW4gZWFjaCBhdHRlbXB0LlxuICovXG5leHBvcnQgY2xhc3MgQXN5bmNDYWxsZXIge1xuICAgIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtYXhDb25jdXJyZW5jeVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtYXhSZXRyaWVzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9uRmFpbGVkQXR0ZW1wdFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJxdWV1ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1heENvbmN1cnJlbmN5ID0gcGFyYW1zLm1heENvbmN1cnJlbmN5ID8/IEluZmluaXR5O1xuICAgICAgICB0aGlzLm1heFJldHJpZXMgPSBwYXJhbXMubWF4UmV0cmllcyA/PyA2O1xuICAgICAgICB0aGlzLm9uRmFpbGVkQXR0ZW1wdCA9XG4gICAgICAgICAgICBwYXJhbXMub25GYWlsZWRBdHRlbXB0ID8/IGRlZmF1bHRGYWlsZWRBdHRlbXB0SGFuZGxlcjtcbiAgICAgICAgY29uc3QgUFF1ZXVlID0gXCJkZWZhdWx0XCIgaW4gUFF1ZXVlTW9kID8gUFF1ZXVlTW9kLmRlZmF1bHQgOiBQUXVldWVNb2Q7XG4gICAgICAgIHRoaXMucXVldWUgPSBuZXcgUFF1ZXVlKHsgY29uY3VycmVuY3k6IHRoaXMubWF4Q29uY3VycmVuY3kgfSk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgY2FsbChjYWxsYWJsZSwgLi4uYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5xdWV1ZS5hZGQoKCkgPT4gcFJldHJ5KCgpID0+IGNhbGxhYmxlKC4uLmFyZ3MpLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWluc3RhbmNlb2Yvbm8taW5zdGFuY2VvZlxuICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCB7XG4gICAgICAgICAgICBvbkZhaWxlZEF0dGVtcHQ6IHRoaXMub25GYWlsZWRBdHRlbXB0LFxuICAgICAgICAgICAgcmV0cmllczogdGhpcy5tYXhSZXRyaWVzLFxuICAgICAgICAgICAgcmFuZG9taXplOiB0cnVlLFxuICAgICAgICAgICAgLy8gSWYgbmVlZGVkIHdlIGNhbiBjaGFuZ2Ugc29tZSBvZiB0aGUgZGVmYXVsdHMgaGVyZSxcbiAgICAgICAgICAgIC8vIGJ1dCB0aGV5J3JlIHF1aXRlIHNlbnNpYmxlLlxuICAgICAgICB9KSwgeyB0aHJvd09uVGltZW91dDogdHJ1ZSB9KTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjYWxsV2l0aE9wdGlvbnMob3B0aW9ucywgY2FsbGFibGUsIC4uLmFyZ3MpIHtcbiAgICAgICAgLy8gTm90ZSB0aGlzIGRvZXNuJ3QgY2FuY2VsIHRoZSB1bmRlcmx5aW5nIHJlcXVlc3QsXG4gICAgICAgIC8vIHdoZW4gYXZhaWxhYmxlIHByZWZlciB0byB1c2UgdGhlIHNpZ25hbCBvcHRpb24gb2YgdGhlIHVuZGVybHlpbmcgY2FsbFxuICAgICAgICBpZiAob3B0aW9ucy5zaWduYWwpIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJhY2UoW1xuICAgICAgICAgICAgICAgIHRoaXMuY2FsbChjYWxsYWJsZSwgLi4uYXJncyksXG4gICAgICAgICAgICAgICAgbmV3IFByb21pc2UoKF8sIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnNpZ25hbD8uYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJBYm9ydEVycm9yXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jYWxsKGNhbGxhYmxlLCAuLi5hcmdzKTtcbiAgICB9XG4gICAgZmV0Y2goLi4uYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxsKCgpID0+IGZldGNoKC4uLmFyZ3MpLnRoZW4oKHJlcykgPT4gKHJlcy5vayA/IHJlcyA6IFByb21pc2UucmVqZWN0KHJlcykpKSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnv: () => (/* binding */ getEnv),\n/* harmony export */   getEnvironmentVariable: () => (/* binding */ getEnvironmentVariable),\n/* harmony export */   getRuntimeEnvironment: () => (/* binding */ getRuntimeEnvironment),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isDeno: () => (/* binding */ isDeno),\n/* harmony export */   isJsDom: () => (/* binding */ isJsDom),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isWebWorker: () => (/* binding */ isWebWorker)\n/* harmony export */ });\nconst isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nconst isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nconst isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nconst isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nconst getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nasync function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nfunction getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3V0aWxzL2Vudi5qcz8yYTBiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0Jyb3dzZXIgPSAoKSA9PiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCI7XG5leHBvcnQgY29uc3QgaXNXZWJXb3JrZXIgPSAoKSA9PiB0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIiAmJlxuICAgIGdsb2JhbFRoaXMuY29uc3RydWN0b3IgJiZcbiAgICBnbG9iYWxUaGlzLmNvbnN0cnVjdG9yLm5hbWUgPT09IFwiRGVkaWNhdGVkV29ya2VyR2xvYmFsU2NvcGVcIjtcbmV4cG9ydCBjb25zdCBpc0pzRG9tID0gKCkgPT4gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Lm5hbWUgPT09IFwibm9kZWpzXCIpIHx8XG4gICAgKHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5jbHVkZXMoXCJOb2RlLmpzXCIpIHx8XG4gICAgICAgICAgICBuYXZpZ2F0b3IudXNlckFnZW50LmluY2x1ZGVzKFwianNkb21cIikpKTtcbi8vIFN1cGFiYXNlIEVkZ2UgRnVuY3Rpb24gcHJvdmlkZXMgYSBgRGVub2AgZ2xvYmFsIG9iamVjdFxuLy8gd2l0aG91dCBgdmVyc2lvbmAgcHJvcGVydHlcbmV4cG9ydCBjb25zdCBpc0Rlbm8gPSAoKSA9PiB0eXBlb2YgRGVubyAhPT0gXCJ1bmRlZmluZWRcIjtcbi8vIE1hcmsgbm90LWFzLW5vZGUgaWYgaW4gU3VwYWJhc2UgRWRnZSBGdW5jdGlvblxuZXhwb3J0IGNvbnN0IGlzTm9kZSA9ICgpID0+IHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgIWlzRGVubygpO1xuZXhwb3J0IGNvbnN0IGdldEVudiA9ICgpID0+IHtcbiAgICBsZXQgZW52O1xuICAgIGlmIChpc0Jyb3dzZXIoKSkge1xuICAgICAgICBlbnYgPSBcImJyb3dzZXJcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNOb2RlKCkpIHtcbiAgICAgICAgZW52ID0gXCJub2RlXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzV2ViV29ya2VyKCkpIHtcbiAgICAgICAgZW52ID0gXCJ3ZWJ3b3JrZXJcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNKc0RvbSgpKSB7XG4gICAgICAgIGVudiA9IFwianNkb21cIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNEZW5vKCkpIHtcbiAgICAgICAgZW52ID0gXCJkZW5vXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBlbnYgPSBcIm90aGVyXCI7XG4gICAgfVxuICAgIHJldHVybiBlbnY7XG59O1xubGV0IHJ1bnRpbWVFbnZpcm9ubWVudDtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSdW50aW1lRW52aXJvbm1lbnQoKSB7XG4gICAgaWYgKHJ1bnRpbWVFbnZpcm9ubWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IGVudiA9IGdldEVudigpO1xuICAgICAgICBydW50aW1lRW52aXJvbm1lbnQgPSB7XG4gICAgICAgICAgICBsaWJyYXJ5OiBcImxhbmdjaGFpbi1qc1wiLFxuICAgICAgICAgICAgcnVudGltZTogZW52LFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gcnVudGltZUVudmlyb25tZW50O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEVudmlyb25tZW50VmFyaWFibGUobmFtZSkge1xuICAgIC8vIENlcnRhaW4gRGVubyBzZXR1cHMgd2lsbCB0aHJvdyBhbiBlcnJvciBpZiB5b3UgdHJ5IHRvIGFjY2VzcyBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbGFuZ2NoYWluLWFpL2xhbmdjaGFpbmpzL2lzc3Vlcy8xNDEyXG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiXG4gICAgICAgICAgICA/IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm9jZXNzLWVudlxuICAgICAgICAgICAgICAgIHByb2Nlc3MuZW52Py5bbmFtZV1cbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonPatchError: () => (/* reexport safe */ _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__.PatchError),\n/* harmony export */   _areEquals: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__._areEquals),\n/* harmony export */   applyOperation: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__.applyOperation),\n/* harmony export */   applyPatch: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__.applyPatch),\n/* harmony export */   applyReducer: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__.applyReducer),\n/* harmony export */   compare: () => (/* reexport safe */ _src_duplex_js__WEBPACK_IMPORTED_MODULE_1__.compare),\n/* harmony export */   deepClone: () => (/* reexport safe */ _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__._deepClone),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   escapePathComponent: () => (/* reexport safe */ _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__.escapePathComponent),\n/* harmony export */   generate: () => (/* reexport safe */ _src_duplex_js__WEBPACK_IMPORTED_MODULE_1__.generate),\n/* harmony export */   getValueByPointer: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__.getValueByPointer),\n/* harmony export */   observe: () => (/* reexport safe */ _src_duplex_js__WEBPACK_IMPORTED_MODULE_1__.observe),\n/* harmony export */   unescapePathComponent: () => (/* reexport safe */ _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__.unescapePathComponent),\n/* harmony export */   unobserve: () => (/* reexport safe */ _src_duplex_js__WEBPACK_IMPORTED_MODULE_1__.unobserve),\n/* harmony export */   validate: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__.validate),\n/* harmony export */   validator: () => (/* reexport safe */ _src_core_js__WEBPACK_IMPORTED_MODULE_0__.validator)\n/* harmony export */ });\n/* harmony import */ var _src_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/core.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js\");\n/* harmony import */ var _src_duplex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/duplex.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js\");\n/* harmony import */ var _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/helpers.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js\");\n\n\n\n/**\n * Default export for backwards compat\n */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    ..._src_core_js__WEBPACK_IMPORTED_MODULE_0__,\n    // ...duplex,\n    JsonPatchError: _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__.PatchError,\n    deepClone: _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__._deepClone,\n    escapePathComponent: _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__.escapePathComponent,\n    unescapePathComponent: _src_helpers_js__WEBPACK_IMPORTED_MODULE_2__.unescapePathComponent,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9mYXN0LWpzb24tcGF0Y2gvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNFO0FBQ3NHO0FBQ3RJO0FBQ0E7QUFDQTtBQUNzQztBQUNnRztBQUN0SSxpRUFBZTtBQUNmLE9BQU8seUNBQUk7QUFDWDtBQUNBLGtCQUFrQjtBQUNsQixhQUFhO0FBQ2IsdUJBQXVCO0FBQ3ZCLHlCQUF5QjtBQUN6QixDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdXRpbHMvZmFzdC1qc29uLXBhdGNoL2luZGV4LmpzPzU1MTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vc3JjL2NvcmUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NyYy9kdXBsZXguanNcIjtcbmV4cG9ydCB7IFBhdGNoRXJyb3IgYXMgSnNvblBhdGNoRXJyb3IsIF9kZWVwQ2xvbmUgYXMgZGVlcENsb25lLCBlc2NhcGVQYXRoQ29tcG9uZW50LCB1bmVzY2FwZVBhdGhDb21wb25lbnQsIH0gZnJvbSBcIi4vc3JjL2hlbHBlcnMuanNcIjtcbi8qKlxuICogRGVmYXVsdCBleHBvcnQgZm9yIGJhY2t3YXJkcyBjb21wYXRcbiAqL1xuaW1wb3J0ICogYXMgY29yZSBmcm9tIFwiLi9zcmMvY29yZS5qc1wiO1xuaW1wb3J0IHsgUGF0Y2hFcnJvciBhcyBKc29uUGF0Y2hFcnJvciwgX2RlZXBDbG9uZSBhcyBkZWVwQ2xvbmUsIGVzY2FwZVBhdGhDb21wb25lbnQsIHVuZXNjYXBlUGF0aENvbXBvbmVudCwgfSBmcm9tIFwiLi9zcmMvaGVscGVycy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQge1xuICAgIC4uLmNvcmUsXG4gICAgLy8gLi4uZHVwbGV4LFxuICAgIEpzb25QYXRjaEVycm9yLFxuICAgIGRlZXBDbG9uZSxcbiAgICBlc2NhcGVQYXRoQ29tcG9uZW50LFxuICAgIHVuZXNjYXBlUGF0aENvbXBvbmVudCxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonPatchError: () => (/* binding */ JsonPatchError),\n/* harmony export */   _areEquals: () => (/* binding */ _areEquals),\n/* harmony export */   applyOperation: () => (/* binding */ applyOperation),\n/* harmony export */   applyPatch: () => (/* binding */ applyPatch),\n/* harmony export */   applyReducer: () => (/* binding */ applyReducer),\n/* harmony export */   deepClone: () => (/* binding */ deepClone),\n/* harmony export */   getValueByPointer: () => (/* binding */ getValueByPointer),\n/* harmony export */   validate: () => (/* binding */ validate),\n/* harmony export */   validator: () => (/* binding */ validator)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js\");\n// @ts-nocheck\n\nconst JsonPatchError = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.PatchError;\nconst deepClone = _helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nfunction getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nfunction applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.unescapePathComponent)(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nfunction applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nfunction applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nfunction validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.hasUndefined)(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nfunction validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(document), (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nfunction _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   generate: () => (/* binding */ generate),\n/* harmony export */   observe: () => (/* binding */ observe),\n/* harmony export */   unobserve: () => (/* binding */ unobserve)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js\");\n// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\n\n\nvar beforeDict = new WeakMap();\nclass Mirror {\n    constructor(obj) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.obj = obj;\n    }\n}\nclass ObserverInfo {\n    constructor(callback, observer) {\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callback = callback;\n        this.observer = observer;\n    }\n}\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nfunction unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nfunction observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        const observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = () => {\n            generate(observer);\n        };\n        var fastCheck = () => {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== \"undefined\") {\n            //not Node\n            window.addEventListener(\"mouseup\", fastCheck);\n            window.addEventListener(\"keyup\", fastCheck);\n            window.addEventListener(\"mousedown\", fastCheck);\n            window.addEventListener(\"keydown\", fastCheck);\n            window.addEventListener(\"change\", fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = () => {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"mouseup\", fastCheck);\n            window.removeEventListener(\"keyup\", fastCheck);\n            window.removeEventListener(\"mousedown\", fastCheck);\n            window.removeEventListener(\"keydown\", fastCheck);\n            window.removeEventListener(\"change\", fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nfunction generate(observer, invertible = false) {\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.applyPatch)(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._objectKeys)(obj);\n    var oldKeys = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._objectKeys)(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty)(obj, key) &&\n            !(obj[key] === undefined &&\n                oldVal !== undefined &&\n                Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" &&\n                oldVal != null &&\n                typeof newVal == \"object\" &&\n                newVal != null &&\n                Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.escapePathComponent)(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({\n                            op: \"test\",\n                            path: path + \"/\" + (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.escapePathComponent)(key),\n                            value: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(oldVal),\n                        });\n                    }\n                    patches.push({\n                        op: \"replace\",\n                        path: path + \"/\" + (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.escapePathComponent)(key),\n                        value: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(newVal),\n                    });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({\n                    op: \"test\",\n                    path: path + \"/\" + (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.escapePathComponent)(key),\n                    value: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(oldVal),\n                });\n            }\n            patches.push({\n                op: \"remove\",\n                path: path + \"/\" + (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.escapePathComponent)(key),\n            });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty)(mirror, key) && obj[key] !== undefined) {\n            patches.push({\n                op: \"add\",\n                path: path + \"/\" + (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.escapePathComponent)(key),\n                value: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__._deepClone)(obj[key]),\n            });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nfunction compare(tree1, tree2, invertible = false) {\n    var patches = [];\n    _generate(tree1, tree2, patches, \"\", invertible);\n    return patches;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PatchError: () => (/* binding */ PatchError),\n/* harmony export */   _deepClone: () => (/* binding */ _deepClone),\n/* harmony export */   _getPathRecursive: () => (/* binding */ _getPathRecursive),\n/* harmony export */   _objectKeys: () => (/* binding */ _objectKeys),\n/* harmony export */   escapePathComponent: () => (/* binding */ escapePathComponent),\n/* harmony export */   getPath: () => (/* binding */ getPath),\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   hasUndefined: () => (/* binding */ hasUndefined),\n/* harmony export */   isInteger: () => (/* binding */ isInteger),\n/* harmony export */   unescapePathComponent: () => (/* binding */ unescapePathComponent)\n/* harmony export */ });\n// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nfunction _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nfunction _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nfunction isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nfunction escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nfunction unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nfunction _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nfunction getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nfunction hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nclass PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/function_calling.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/function_calling.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertToOpenAIFunction: () => (/* binding */ convertToOpenAIFunction),\n/* harmony export */   convertToOpenAITool: () => (/* binding */ convertToOpenAITool),\n/* harmony export */   isStructuredTool: () => (/* binding */ isStructuredTool)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/zod-to-json-schema/dist/esm/index.js\");\n\n/**\n * Formats a `StructuredTool` instance into a format that is compatible\n * with OpenAI function calling. It uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` into a JSON\n * schema, which is then used as the parameters for the OpenAI function.\n */\nfunction convertToOpenAIFunction(tool) {\n    return {\n        name: tool.name,\n        description: tool.description,\n        parameters: (0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(tool.schema),\n    };\n}\n/**\n * Formats a `StructuredTool` instance into a format that is compatible\n * with OpenAI tool calling. It uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` into a JSON\n * schema, which is then used as the parameters for the OpenAI tool.\n */\nfunction convertToOpenAITool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool) {\n    if (isStructuredTool(tool)) {\n        return {\n            type: \"function\",\n            function: convertToOpenAIFunction(tool),\n        };\n    }\n    return tool;\n}\nfunction isStructuredTool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool) {\n    return (tool !== undefined &&\n        Array.isArray(tool.lc_namespace));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9mdW5jdGlvbl9jYWxsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUVBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWFsaWZpY2F0aW9uLWFnZW50Ly4vbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9jb3JlL2Rpc3QvdXRpbHMvZnVuY3Rpb25fY2FsbGluZy5qcz9iNjVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHpvZFRvSnNvblNjaGVtYSB9IGZyb20gXCJ6b2QtdG8tanNvbi1zY2hlbWFcIjtcbi8qKlxuICogRm9ybWF0cyBhIGBTdHJ1Y3R1cmVkVG9vbGAgaW5zdGFuY2UgaW50byBhIGZvcm1hdCB0aGF0IGlzIGNvbXBhdGlibGVcbiAqIHdpdGggT3BlbkFJIGZ1bmN0aW9uIGNhbGxpbmcuIEl0IHVzZXMgdGhlIGB6b2RUb0pzb25TY2hlbWFgXG4gKiBmdW5jdGlvbiB0byBjb252ZXJ0IHRoZSBzY2hlbWEgb2YgdGhlIGBTdHJ1Y3R1cmVkVG9vbGAgaW50byBhIEpTT05cbiAqIHNjaGVtYSwgd2hpY2ggaXMgdGhlbiB1c2VkIGFzIHRoZSBwYXJhbWV0ZXJzIGZvciB0aGUgT3BlbkFJIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvT3BlbkFJRnVuY3Rpb24odG9vbCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHRvb2wubmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb246IHRvb2wuZGVzY3JpcHRpb24sXG4gICAgICAgIHBhcmFtZXRlcnM6IHpvZFRvSnNvblNjaGVtYSh0b29sLnNjaGVtYSksXG4gICAgfTtcbn1cbi8qKlxuICogRm9ybWF0cyBhIGBTdHJ1Y3R1cmVkVG9vbGAgaW5zdGFuY2UgaW50byBhIGZvcm1hdCB0aGF0IGlzIGNvbXBhdGlibGVcbiAqIHdpdGggT3BlbkFJIHRvb2wgY2FsbGluZy4gSXQgdXNlcyB0aGUgYHpvZFRvSnNvblNjaGVtYWBcbiAqIGZ1bmN0aW9uIHRvIGNvbnZlcnQgdGhlIHNjaGVtYSBvZiB0aGUgYFN0cnVjdHVyZWRUb29sYCBpbnRvIGEgSlNPTlxuICogc2NoZW1hLCB3aGljaCBpcyB0aGVuIHVzZWQgYXMgdGhlIHBhcmFtZXRlcnMgZm9yIHRoZSBPcGVuQUkgdG9vbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb09wZW5BSVRvb2woXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxudG9vbCkge1xuICAgIGlmIChpc1N0cnVjdHVyZWRUb29sKHRvb2wpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgICAgICAgICBmdW5jdGlvbjogY29udmVydFRvT3BlbkFJRnVuY3Rpb24odG9vbCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB0b29sO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RydWN0dXJlZFRvb2woXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxudG9vbCkge1xuICAgIHJldHVybiAodG9vbCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIEFycmF5LmlzQXJyYXkodG9vbC5sY19uYW1lc3BhY2UpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/function_calling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/hash.js":
/*!********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/hash.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   insecureHash: () => (/* reexport safe */ _js_sha1_hash_js__WEBPACK_IMPORTED_MODULE_0__.insecureHash)\n/* harmony export */ });\n/* harmony import */ var _js_sha1_hash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js-sha1/hash.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/js-sha1/hash.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9oYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcXVhbGlmaWNhdGlvbi1hZ2VudC8uL25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vY29yZS9kaXN0L3V0aWxzL2hhc2guanM/ZTY0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBpbnNlY3VyZUhhc2ggfSBmcm9tIFwiLi9qcy1zaGExL2hhc2guanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/hash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/js-sha1/hash.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/js-sha1/hash.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   insecureHash: () => (/* binding */ insecureHash)\n/* harmony export */ });\n// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nconst insecureHash = (message) => {\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/js-sha1/hash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json.js":
/*!********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/json.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseJsonMarkdown: () => (/* binding */ parseJsonMarkdown),\n/* harmony export */   parsePartialJson: () => (/* binding */ parsePartialJson)\n/* harmony export */ });\nfunction parseJsonMarkdown(s, parser = parsePartialJson) {\n    // eslint-disable-next-line no-param-reassign\n    s = s.trim();\n    const match = /```(json)?(.*)```/s.exec(s);\n    if (!match) {\n        return parser(s);\n    }\n    else {\n        return parser(match[2]);\n    }\n}\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nfunction parsePartialJson(s) {\n    // If the input is undefined, return null to indicate failure.\n    if (typeof s === \"undefined\") {\n        return null;\n    }\n    // Attempt to parse the string as-is.\n    try {\n        return JSON.parse(s);\n    }\n    catch (error) {\n        // Pass\n    }\n    // Initialize variables.\n    let new_s = \"\";\n    const stack = [];\n    let isInsideString = false;\n    let escaped = false;\n    // Process each character in the string one at a time.\n    for (let char of s) {\n        if (isInsideString) {\n            if (char === '\"' && !escaped) {\n                isInsideString = false;\n            }\n            else if (char === \"\\n\" && !escaped) {\n                char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n            }\n            else if (char === \"\\\\\") {\n                escaped = !escaped;\n            }\n            else {\n                escaped = false;\n            }\n        }\n        else {\n            if (char === '\"') {\n                isInsideString = true;\n                escaped = false;\n            }\n            else if (char === \"{\") {\n                stack.push(\"}\");\n            }\n            else if (char === \"[\") {\n                stack.push(\"]\");\n            }\n            else if (char === \"}\" || char === \"]\") {\n                if (stack && stack[stack.length - 1] === char) {\n                    stack.pop();\n                }\n                else {\n                    // Mismatched closing character; the input is malformed.\n                    return null;\n                }\n            }\n        }\n        // Append the processed character to the new string.\n        new_s += char;\n    }\n    // If we're still inside a string at the end of processing,\n    // we need to close the string.\n    if (isInsideString) {\n        new_s += '\"';\n    }\n    // Close any remaining open structures in the reverse order that they were opened.\n    for (let i = stack.length - 1; i >= 0; i -= 1) {\n        new_s += stack[i];\n    }\n    // Attempt to parse the modified string as JSON.\n    try {\n        return JSON.parse(new_s);\n    }\n    catch (error) {\n        // If we still can't parse the string as JSON, return null to indicate failure.\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFFBQVE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9qc29uLmpzPzkzNmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSnNvbk1hcmtkb3duKHMsIHBhcnNlciA9IHBhcnNlUGFydGlhbEpzb24pIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBzID0gcy50cmltKCk7XG4gICAgY29uc3QgbWF0Y2ggPSAvYGBgKGpzb24pPyguKilgYGAvcy5leGVjKHMpO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlcihzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBwYXJzZXIobWF0Y2hbMl0pO1xuICAgIH1cbn1cbi8vIEFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vS2lsbGlhbkx1Y2FzL29wZW4taW50ZXJwcmV0ZXIvYmxvYi9tYWluL2ludGVycHJldGVyL2NvcmUvbGxtL3V0aWxzL3BhcnNlX3BhcnRpYWxfanNvbi5weVxuLy8gTUlUIExpY2Vuc2VcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVBhcnRpYWxKc29uKHMpIHtcbiAgICAvLyBJZiB0aGUgaW5wdXQgaXMgdW5kZWZpbmVkLCByZXR1cm4gbnVsbCB0byBpbmRpY2F0ZSBmYWlsdXJlLlxuICAgIGlmICh0eXBlb2YgcyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gQXR0ZW1wdCB0byBwYXJzZSB0aGUgc3RyaW5nIGFzLWlzLlxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHMpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy8gUGFzc1xuICAgIH1cbiAgICAvLyBJbml0aWFsaXplIHZhcmlhYmxlcy5cbiAgICBsZXQgbmV3X3MgPSBcIlwiO1xuICAgIGNvbnN0IHN0YWNrID0gW107XG4gICAgbGV0IGlzSW5zaWRlU3RyaW5nID0gZmFsc2U7XG4gICAgbGV0IGVzY2FwZWQgPSBmYWxzZTtcbiAgICAvLyBQcm9jZXNzIGVhY2ggY2hhcmFjdGVyIGluIHRoZSBzdHJpbmcgb25lIGF0IGEgdGltZS5cbiAgICBmb3IgKGxldCBjaGFyIG9mIHMpIHtcbiAgICAgICAgaWYgKGlzSW5zaWRlU3RyaW5nKSB7XG4gICAgICAgICAgICBpZiAoY2hhciA9PT0gJ1wiJyAmJiAhZXNjYXBlZCkge1xuICAgICAgICAgICAgICAgIGlzSW5zaWRlU3RyaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjaGFyID09PSBcIlxcblwiICYmICFlc2NhcGVkKSB7XG4gICAgICAgICAgICAgICAgY2hhciA9IFwiXFxcXG5cIjsgLy8gUmVwbGFjZSB0aGUgbmV3bGluZSBjaGFyYWN0ZXIgd2l0aCB0aGUgZXNjYXBlIHNlcXVlbmNlLlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhciA9PT0gXCJcXFxcXCIpIHtcbiAgICAgICAgICAgICAgICBlc2NhcGVkID0gIWVzY2FwZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlc2NhcGVkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoY2hhciA9PT0gJ1wiJykge1xuICAgICAgICAgICAgICAgIGlzSW5zaWRlU3RyaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBlc2NhcGVkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjaGFyID09PSBcIntcIikge1xuICAgICAgICAgICAgICAgIHN0YWNrLnB1c2goXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhciA9PT0gXCJbXCIpIHtcbiAgICAgICAgICAgICAgICBzdGFjay5wdXNoKFwiXVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNoYXIgPT09IFwifVwiIHx8IGNoYXIgPT09IFwiXVwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0YWNrICYmIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdID09PSBjaGFyKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YWNrLnBvcCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gTWlzbWF0Y2hlZCBjbG9zaW5nIGNoYXJhY3RlcjsgdGhlIGlucHV0IGlzIG1hbGZvcm1lZC5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIEFwcGVuZCB0aGUgcHJvY2Vzc2VkIGNoYXJhY3RlciB0byB0aGUgbmV3IHN0cmluZy5cbiAgICAgICAgbmV3X3MgKz0gY2hhcjtcbiAgICB9XG4gICAgLy8gSWYgd2UncmUgc3RpbGwgaW5zaWRlIGEgc3RyaW5nIGF0IHRoZSBlbmQgb2YgcHJvY2Vzc2luZyxcbiAgICAvLyB3ZSBuZWVkIHRvIGNsb3NlIHRoZSBzdHJpbmcuXG4gICAgaWYgKGlzSW5zaWRlU3RyaW5nKSB7XG4gICAgICAgIG5ld19zICs9ICdcIic7XG4gICAgfVxuICAgIC8vIENsb3NlIGFueSByZW1haW5pbmcgb3BlbiBzdHJ1Y3R1cmVzIGluIHRoZSByZXZlcnNlIG9yZGVyIHRoYXQgdGhleSB3ZXJlIG9wZW5lZC5cbiAgICBmb3IgKGxldCBpID0gc3RhY2subGVuZ3RoIC0gMTsgaSA+PSAwOyBpIC09IDEpIHtcbiAgICAgICAgbmV3X3MgKz0gc3RhY2tbaV07XG4gICAgfVxuICAgIC8vIEF0dGVtcHQgdG8gcGFyc2UgdGhlIG1vZGlmaWVkIHN0cmluZyBhcyBKU09OLlxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKG5ld19zKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIElmIHdlIHN0aWxsIGNhbid0IHBhcnNlIHRoZSBzdHJpbmcgYXMgSlNPTiwgcmV0dXJuIG51bGwgdG8gaW5kaWNhdGUgZmFpbHVyZS5cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json_patch.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/json_patch.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyPatch: () => (/* reexport safe */ _fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__.applyPatch),\n/* harmony export */   compare: () => (/* reexport safe */ _fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__.compare)\n/* harmony export */ });\n/* harmony import */ var _fast_json_patch_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fast-json-patch/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/fast-json-patch/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9qc29uX3BhdGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRSIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy9qc29uX3BhdGNoLmpzPzAyZmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY29tcGFyZSwgYXBwbHlQYXRjaCwgfSBmcm9tIFwiLi9mYXN0LWpzb24tcGF0Y2gvaW5kZXguanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/json_patch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/sax-js/sax.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/sax-js/sax.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sax: () => (/* binding */ sax)\n/* harmony export */ });\n// @ts-nocheck\n// Inlined to deal with portability issues\n// Originally from: https://github.com/isaacs/sax-js\nconst initializeSax = function () {\n    const sax = {};\n    sax.parser = function (strict, opt) {\n        return new SAXParser(strict, opt);\n    };\n    sax.SAXParser = SAXParser;\n    sax.SAXStream = SAXStream;\n    sax.createStream = createStream;\n    // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n    // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n    // since that's the earliest that a buffer overrun could occur.  This way, checks are\n    // as rare as required, but as often as necessary to ensure never crossing this bound.\n    // Furthermore, buffers are only tested at most once per write(), so passing a very\n    // large string into write() might have undesirable effects, but this is manageable by\n    // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n    // edge case, result in creating at most one complete copy of the string passed in.\n    // Set to Infinity to have unlimited buffers.\n    sax.MAX_BUFFER_LENGTH = 64 * 1024;\n    const buffers = [\n        \"comment\",\n        \"sgmlDecl\",\n        \"textNode\",\n        \"tagName\",\n        \"doctype\",\n        \"procInstName\",\n        \"procInstBody\",\n        \"entity\",\n        \"attribName\",\n        \"attribValue\",\n        \"cdata\",\n        \"script\",\n    ];\n    sax.EVENTS = [\n        \"text\",\n        \"processinginstruction\",\n        \"sgmldeclaration\",\n        \"doctype\",\n        \"comment\",\n        \"opentagstart\",\n        \"attribute\",\n        \"opentag\",\n        \"closetag\",\n        \"opencdata\",\n        \"cdata\",\n        \"closecdata\",\n        \"error\",\n        \"end\",\n        \"ready\",\n        \"script\",\n        \"opennamespace\",\n        \"closenamespace\",\n    ];\n    function SAXParser(strict, opt) {\n        if (!(this instanceof SAXParser)) {\n            return new SAXParser(strict, opt);\n        }\n        var parser = this;\n        clearBuffers(parser);\n        parser.q = parser.c = \"\";\n        parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH;\n        parser.opt = opt || {};\n        parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags;\n        parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\";\n        parser.tags = [];\n        parser.closed = parser.closedRoot = parser.sawRoot = false;\n        parser.tag = parser.error = null;\n        parser.strict = !!strict;\n        parser.noscript = !!(strict || parser.opt.noscript);\n        parser.state = S.BEGIN;\n        parser.strictEntities = parser.opt.strictEntities;\n        parser.ENTITIES = parser.strictEntities\n            ? Object.create(sax.XML_ENTITIES)\n            : Object.create(sax.ENTITIES);\n        parser.attribList = [];\n        // namespaces form a prototype chain.\n        // it always points at the current tag,\n        // which protos to its parent tag.\n        if (parser.opt.xmlns) {\n            parser.ns = Object.create(rootNS);\n        }\n        // mostly just for error reporting\n        parser.trackPosition = parser.opt.position !== false;\n        if (parser.trackPosition) {\n            parser.position = parser.line = parser.column = 0;\n        }\n        emit(parser, \"onready\");\n    }\n    if (!Object.create) {\n        Object.create = function (o) {\n            function F() { }\n            F.prototype = o;\n            var newf = new F();\n            return newf;\n        };\n    }\n    if (!Object.keys) {\n        Object.keys = function (o) {\n            var a = [];\n            for (var i in o)\n                if (o.hasOwnProperty(i))\n                    a.push(i);\n            return a;\n        };\n    }\n    function checkBufferLength(parser) {\n        var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10);\n        var maxActual = 0;\n        for (var i = 0, l = buffers.length; i < l; i++) {\n            var len = parser[buffers[i]].length;\n            if (len > maxAllowed) {\n                // Text/cdata nodes can get big, and since they're buffered,\n                // we can get here under normal conditions.\n                // Avoid issues by emitting the text node now,\n                // so at least it won't get any bigger.\n                switch (buffers[i]) {\n                    case \"textNode\":\n                        closeText(parser);\n                        break;\n                    case \"cdata\":\n                        emitNode(parser, \"oncdata\", parser.cdata);\n                        parser.cdata = \"\";\n                        break;\n                    case \"script\":\n                        emitNode(parser, \"onscript\", parser.script);\n                        parser.script = \"\";\n                        break;\n                    default:\n                        error(parser, \"Max buffer length exceeded: \" + buffers[i]);\n                }\n            }\n            maxActual = Math.max(maxActual, len);\n        }\n        // schedule the next check for the earliest possible buffer overrun.\n        var m = sax.MAX_BUFFER_LENGTH - maxActual;\n        parser.bufferCheckPosition = m + parser.position;\n    }\n    function clearBuffers(parser) {\n        for (var i = 0, l = buffers.length; i < l; i++) {\n            parser[buffers[i]] = \"\";\n        }\n    }\n    function flushBuffers(parser) {\n        closeText(parser);\n        if (parser.cdata !== \"\") {\n            emitNode(parser, \"oncdata\", parser.cdata);\n            parser.cdata = \"\";\n        }\n        if (parser.script !== \"\") {\n            emitNode(parser, \"onscript\", parser.script);\n            parser.script = \"\";\n        }\n    }\n    SAXParser.prototype = {\n        end: function () {\n            end(this);\n        },\n        write: write,\n        resume: function () {\n            this.error = null;\n            return this;\n        },\n        close: function () {\n            return this.write(null);\n        },\n        flush: function () {\n            flushBuffers(this);\n        },\n    };\n    var Stream = ReadableStream;\n    if (!Stream)\n        Stream = function () { };\n    var streamWraps = sax.EVENTS.filter(function (ev) {\n        return ev !== \"error\" && ev !== \"end\";\n    });\n    function createStream(strict, opt) {\n        return new SAXStream(strict, opt);\n    }\n    function SAXStream(strict, opt) {\n        if (!(this instanceof SAXStream)) {\n            return new SAXStream(strict, opt);\n        }\n        Stream.apply(this);\n        this._parser = new SAXParser(strict, opt);\n        this.writable = true;\n        this.readable = true;\n        var me = this;\n        this._parser.onend = function () {\n            me.emit(\"end\");\n        };\n        this._parser.onerror = function (er) {\n            me.emit(\"error\", er);\n            // if didn't throw, then means error was handled.\n            // go ahead and clear error, so we can write again.\n            me._parser.error = null;\n        };\n        this._decoder = null;\n        streamWraps.forEach(function (ev) {\n            Object.defineProperty(me, \"on\" + ev, {\n                get: function () {\n                    return me._parser[\"on\" + ev];\n                },\n                set: function (h) {\n                    if (!h) {\n                        me.removeAllListeners(ev);\n                        me._parser[\"on\" + ev] = h;\n                        return h;\n                    }\n                    me.on(ev, h);\n                },\n                enumerable: true,\n                configurable: false,\n            });\n        });\n    }\n    SAXStream.prototype = Object.create(Stream.prototype, {\n        constructor: {\n            value: SAXStream,\n        },\n    });\n    SAXStream.prototype.write = function (data) {\n        this._parser.write(data.toString());\n        this.emit(\"data\", data);\n        return true;\n    };\n    SAXStream.prototype.end = function (chunk) {\n        if (chunk && chunk.length) {\n            this.write(chunk);\n        }\n        this._parser.end();\n        return true;\n    };\n    SAXStream.prototype.on = function (ev, handler) {\n        var me = this;\n        if (!me._parser[\"on\" + ev] && streamWraps.indexOf(ev) !== -1) {\n            me._parser[\"on\" + ev] = function () {\n                var args = arguments.length === 1\n                    ? [arguments[0]]\n                    : Array.apply(null, arguments);\n                args.splice(0, 0, ev);\n                me.emit.apply(me, args);\n            };\n        }\n        return Stream.prototype.on.call(me, ev, handler);\n    };\n    // this really needs to be replaced with character classes.\n    // XML allows all manner of ridiculous numbers and digits.\n    var CDATA = \"[CDATA[\";\n    var DOCTYPE = \"DOCTYPE\";\n    var XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n    var XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\";\n    var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE };\n    // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n    // This implementation works on strings, a single character at a time\n    // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n    // without a significant breaking change to either this  parser, or the\n    // JavaScript language.  Implementation of an emoji-capable xml parser\n    // is left as an exercise for the reader.\n    var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    function isWhitespace(c) {\n        return c === \" \" || c === \"\\n\" || c === \"\\r\" || c === \"\\t\";\n    }\n    function isQuote(c) {\n        return c === '\"' || c === \"'\";\n    }\n    function isAttribEnd(c) {\n        return c === \">\" || isWhitespace(c);\n    }\n    function isMatch(regex, c) {\n        return regex.test(c);\n    }\n    function notMatch(regex, c) {\n        return !isMatch(regex, c);\n    }\n    var S = 0;\n    sax.STATE = {\n        BEGIN: S++,\n        BEGIN_WHITESPACE: S++,\n        TEXT: S++,\n        TEXT_ENTITY: S++,\n        OPEN_WAKA: S++,\n        SGML_DECL: S++,\n        SGML_DECL_QUOTED: S++,\n        DOCTYPE: S++,\n        DOCTYPE_QUOTED: S++,\n        DOCTYPE_DTD: S++,\n        DOCTYPE_DTD_QUOTED: S++,\n        COMMENT_STARTING: S++,\n        COMMENT: S++,\n        COMMENT_ENDING: S++,\n        COMMENT_ENDED: S++,\n        CDATA: S++,\n        CDATA_ENDING: S++,\n        CDATA_ENDING_2: S++,\n        PROC_INST: S++,\n        PROC_INST_BODY: S++,\n        PROC_INST_ENDING: S++,\n        OPEN_TAG: S++,\n        OPEN_TAG_SLASH: S++,\n        ATTRIB: S++,\n        ATTRIB_NAME: S++,\n        ATTRIB_NAME_SAW_WHITE: S++,\n        ATTRIB_VALUE: S++,\n        ATTRIB_VALUE_QUOTED: S++,\n        ATTRIB_VALUE_CLOSED: S++,\n        ATTRIB_VALUE_UNQUOTED: S++,\n        ATTRIB_VALUE_ENTITY_Q: S++,\n        ATTRIB_VALUE_ENTITY_U: S++,\n        CLOSE_TAG: S++,\n        CLOSE_TAG_SAW_WHITE: S++,\n        SCRIPT: S++,\n        SCRIPT_ENDING: S++, // <script> ... <\n    };\n    sax.XML_ENTITIES = {\n        amp: \"&\",\n        gt: \">\",\n        lt: \"<\",\n        quot: '\"',\n        apos: \"'\",\n    };\n    sax.ENTITIES = {\n        amp: \"&\",\n        gt: \">\",\n        lt: \"<\",\n        quot: '\"',\n        apos: \"'\",\n        AElig: 198,\n        Aacute: 193,\n        Acirc: 194,\n        Agrave: 192,\n        Aring: 197,\n        Atilde: 195,\n        Auml: 196,\n        Ccedil: 199,\n        ETH: 208,\n        Eacute: 201,\n        Ecirc: 202,\n        Egrave: 200,\n        Euml: 203,\n        Iacute: 205,\n        Icirc: 206,\n        Igrave: 204,\n        Iuml: 207,\n        Ntilde: 209,\n        Oacute: 211,\n        Ocirc: 212,\n        Ograve: 210,\n        Oslash: 216,\n        Otilde: 213,\n        Ouml: 214,\n        THORN: 222,\n        Uacute: 218,\n        Ucirc: 219,\n        Ugrave: 217,\n        Uuml: 220,\n        Yacute: 221,\n        aacute: 225,\n        acirc: 226,\n        aelig: 230,\n        agrave: 224,\n        aring: 229,\n        atilde: 227,\n        auml: 228,\n        ccedil: 231,\n        eacute: 233,\n        ecirc: 234,\n        egrave: 232,\n        eth: 240,\n        euml: 235,\n        iacute: 237,\n        icirc: 238,\n        igrave: 236,\n        iuml: 239,\n        ntilde: 241,\n        oacute: 243,\n        ocirc: 244,\n        ograve: 242,\n        oslash: 248,\n        otilde: 245,\n        ouml: 246,\n        szlig: 223,\n        thorn: 254,\n        uacute: 250,\n        ucirc: 251,\n        ugrave: 249,\n        uuml: 252,\n        yacute: 253,\n        yuml: 255,\n        copy: 169,\n        reg: 174,\n        nbsp: 160,\n        iexcl: 161,\n        cent: 162,\n        pound: 163,\n        curren: 164,\n        yen: 165,\n        brvbar: 166,\n        sect: 167,\n        uml: 168,\n        ordf: 170,\n        laquo: 171,\n        not: 172,\n        shy: 173,\n        macr: 175,\n        deg: 176,\n        plusmn: 177,\n        sup1: 185,\n        sup2: 178,\n        sup3: 179,\n        acute: 180,\n        micro: 181,\n        para: 182,\n        middot: 183,\n        cedil: 184,\n        ordm: 186,\n        raquo: 187,\n        frac14: 188,\n        frac12: 189,\n        frac34: 190,\n        iquest: 191,\n        times: 215,\n        divide: 247,\n        OElig: 338,\n        oelig: 339,\n        Scaron: 352,\n        scaron: 353,\n        Yuml: 376,\n        fnof: 402,\n        circ: 710,\n        tilde: 732,\n        Alpha: 913,\n        Beta: 914,\n        Gamma: 915,\n        Delta: 916,\n        Epsilon: 917,\n        Zeta: 918,\n        Eta: 919,\n        Theta: 920,\n        Iota: 921,\n        Kappa: 922,\n        Lambda: 923,\n        Mu: 924,\n        Nu: 925,\n        Xi: 926,\n        Omicron: 927,\n        Pi: 928,\n        Rho: 929,\n        Sigma: 931,\n        Tau: 932,\n        Upsilon: 933,\n        Phi: 934,\n        Chi: 935,\n        Psi: 936,\n        Omega: 937,\n        alpha: 945,\n        beta: 946,\n        gamma: 947,\n        delta: 948,\n        epsilon: 949,\n        zeta: 950,\n        eta: 951,\n        theta: 952,\n        iota: 953,\n        kappa: 954,\n        lambda: 955,\n        mu: 956,\n        nu: 957,\n        xi: 958,\n        omicron: 959,\n        pi: 960,\n        rho: 961,\n        sigmaf: 962,\n        sigma: 963,\n        tau: 964,\n        upsilon: 965,\n        phi: 966,\n        chi: 967,\n        psi: 968,\n        omega: 969,\n        thetasym: 977,\n        upsih: 978,\n        piv: 982,\n        ensp: 8194,\n        emsp: 8195,\n        thinsp: 8201,\n        zwnj: 8204,\n        zwj: 8205,\n        lrm: 8206,\n        rlm: 8207,\n        ndash: 8211,\n        mdash: 8212,\n        lsquo: 8216,\n        rsquo: 8217,\n        sbquo: 8218,\n        ldquo: 8220,\n        rdquo: 8221,\n        bdquo: 8222,\n        dagger: 8224,\n        Dagger: 8225,\n        bull: 8226,\n        hellip: 8230,\n        permil: 8240,\n        prime: 8242,\n        Prime: 8243,\n        lsaquo: 8249,\n        rsaquo: 8250,\n        oline: 8254,\n        frasl: 8260,\n        euro: 8364,\n        image: 8465,\n        weierp: 8472,\n        real: 8476,\n        trade: 8482,\n        alefsym: 8501,\n        larr: 8592,\n        uarr: 8593,\n        rarr: 8594,\n        darr: 8595,\n        harr: 8596,\n        crarr: 8629,\n        lArr: 8656,\n        uArr: 8657,\n        rArr: 8658,\n        dArr: 8659,\n        hArr: 8660,\n        forall: 8704,\n        part: 8706,\n        exist: 8707,\n        empty: 8709,\n        nabla: 8711,\n        isin: 8712,\n        notin: 8713,\n        ni: 8715,\n        prod: 8719,\n        sum: 8721,\n        minus: 8722,\n        lowast: 8727,\n        radic: 8730,\n        prop: 8733,\n        infin: 8734,\n        ang: 8736,\n        and: 8743,\n        or: 8744,\n        cap: 8745,\n        cup: 8746,\n        int: 8747,\n        there4: 8756,\n        sim: 8764,\n        cong: 8773,\n        asymp: 8776,\n        ne: 8800,\n        equiv: 8801,\n        le: 8804,\n        ge: 8805,\n        sub: 8834,\n        sup: 8835,\n        nsub: 8836,\n        sube: 8838,\n        supe: 8839,\n        oplus: 8853,\n        otimes: 8855,\n        perp: 8869,\n        sdot: 8901,\n        lceil: 8968,\n        rceil: 8969,\n        lfloor: 8970,\n        rfloor: 8971,\n        lang: 9001,\n        rang: 9002,\n        loz: 9674,\n        spades: 9824,\n        clubs: 9827,\n        hearts: 9829,\n        diams: 9830,\n    };\n    Object.keys(sax.ENTITIES).forEach(function (key) {\n        var e = sax.ENTITIES[key];\n        var s = typeof e === \"number\" ? String.fromCharCode(e) : e;\n        sax.ENTITIES[key] = s;\n    });\n    for (var s in sax.STATE) {\n        sax.STATE[sax.STATE[s]] = s;\n    }\n    // shorthand\n    S = sax.STATE;\n    function emit(parser, event, data) {\n        parser[event] && parser[event](data);\n    }\n    function emitNode(parser, nodeType, data) {\n        if (parser.textNode)\n            closeText(parser);\n        emit(parser, nodeType, data);\n    }\n    function closeText(parser) {\n        parser.textNode = textopts(parser.opt, parser.textNode);\n        if (parser.textNode)\n            emit(parser, \"ontext\", parser.textNode);\n        parser.textNode = \"\";\n    }\n    function textopts(opt, text) {\n        if (opt.trim)\n            text = text.trim();\n        if (opt.normalize)\n            text = text.replace(/\\s+/g, \" \");\n        return text;\n    }\n    function error(parser, er) {\n        closeText(parser);\n        if (parser.trackPosition) {\n            er +=\n                \"\\nLine: \" +\n                    parser.line +\n                    \"\\nColumn: \" +\n                    parser.column +\n                    \"\\nChar: \" +\n                    parser.c;\n        }\n        er = new Error(er);\n        parser.error = er;\n        emit(parser, \"onerror\", er);\n        return parser;\n    }\n    function end(parser) {\n        if (parser.sawRoot && !parser.closedRoot)\n            strictFail(parser, \"Unclosed root tag\");\n        if (parser.state !== S.BEGIN &&\n            parser.state !== S.BEGIN_WHITESPACE &&\n            parser.state !== S.TEXT) {\n            error(parser, \"Unexpected end\");\n        }\n        closeText(parser);\n        parser.c = \"\";\n        parser.closed = true;\n        emit(parser, \"onend\");\n        SAXParser.call(parser, parser.strict, parser.opt);\n        return parser;\n    }\n    function strictFail(parser, message) {\n        if (typeof parser !== \"object\" || !(parser instanceof SAXParser)) {\n            throw new Error(\"bad call to strictFail\");\n        }\n        if (parser.strict) {\n            error(parser, message);\n        }\n    }\n    function newTag(parser) {\n        if (!parser.strict)\n            parser.tagName = parser.tagName[parser.looseCase]();\n        var parent = parser.tags[parser.tags.length - 1] || parser;\n        var tag = (parser.tag = { name: parser.tagName, attributes: {} });\n        // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n        if (parser.opt.xmlns) {\n            tag.ns = parent.ns;\n        }\n        parser.attribList.length = 0;\n        emitNode(parser, \"onopentagstart\", tag);\n    }\n    function qname(name, attribute) {\n        var i = name.indexOf(\":\");\n        var qualName = i < 0 ? [\"\", name] : name.split(\":\");\n        var prefix = qualName[0];\n        var local = qualName[1];\n        // <x \"xmlns\"=\"http://foo\">\n        if (attribute && name === \"xmlns\") {\n            prefix = \"xmlns\";\n            local = \"\";\n        }\n        return { prefix: prefix, local: local };\n    }\n    function attrib(parser) {\n        if (!parser.strict) {\n            parser.attribName = parser.attribName[parser.looseCase]();\n        }\n        if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n            parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n            parser.attribName = parser.attribValue = \"\";\n            return;\n        }\n        if (parser.opt.xmlns) {\n            var qn = qname(parser.attribName, true);\n            var prefix = qn.prefix;\n            var local = qn.local;\n            if (prefix === \"xmlns\") {\n                // namespace binding attribute. push the binding into scope\n                if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n                    strictFail(parser, \"xml: prefix must be bound to \" +\n                        XML_NAMESPACE +\n                        \"\\n\" +\n                        \"Actual: \" +\n                        parser.attribValue);\n                }\n                else if (local === \"xmlns\" &&\n                    parser.attribValue !== XMLNS_NAMESPACE) {\n                    strictFail(parser, \"xmlns: prefix must be bound to \" +\n                        XMLNS_NAMESPACE +\n                        \"\\n\" +\n                        \"Actual: \" +\n                        parser.attribValue);\n                }\n                else {\n                    var tag = parser.tag;\n                    var parent = parser.tags[parser.tags.length - 1] || parser;\n                    if (tag.ns === parent.ns) {\n                        tag.ns = Object.create(parent.ns);\n                    }\n                    tag.ns[local] = parser.attribValue;\n                }\n            }\n            // defer onattribute events until all attributes have been seen\n            // so any new bindings can take effect. preserve attribute order\n            // so deferred events can be emitted in document order\n            parser.attribList.push([parser.attribName, parser.attribValue]);\n        }\n        else {\n            // in non-xmlns mode, we can emit the event right away\n            parser.tag.attributes[parser.attribName] = parser.attribValue;\n            emitNode(parser, \"onattribute\", {\n                name: parser.attribName,\n                value: parser.attribValue,\n            });\n        }\n        parser.attribName = parser.attribValue = \"\";\n    }\n    function openTag(parser, selfClosing) {\n        if (parser.opt.xmlns) {\n            // emit namespace binding events\n            var tag = parser.tag;\n            // add namespace info to tag\n            var qn = qname(parser.tagName);\n            tag.prefix = qn.prefix;\n            tag.local = qn.local;\n            tag.uri = tag.ns[qn.prefix] || \"\";\n            if (tag.prefix && !tag.uri) {\n                strictFail(parser, \"Unbound namespace prefix: \" + JSON.stringify(parser.tagName));\n                tag.uri = qn.prefix;\n            }\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n            if (tag.ns && parent.ns !== tag.ns) {\n                Object.keys(tag.ns).forEach(function (p) {\n                    emitNode(parser, \"onopennamespace\", {\n                        prefix: p,\n                        uri: tag.ns[p],\n                    });\n                });\n            }\n            // handle deferred onattribute events\n            // Note: do not apply default ns to attributes:\n            //   http://www.w3.org/TR/REC-xml-names/#defaulting\n            for (var i = 0, l = parser.attribList.length; i < l; i++) {\n                var nv = parser.attribList[i];\n                var name = nv[0];\n                var value = nv[1];\n                var qualName = qname(name, true);\n                var prefix = qualName.prefix;\n                var local = qualName.local;\n                var uri = prefix === \"\" ? \"\" : tag.ns[prefix] || \"\";\n                var a = {\n                    name: name,\n                    value: value,\n                    prefix: prefix,\n                    local: local,\n                    uri: uri,\n                };\n                // if there's any attributes with an undefined namespace,\n                // then fail on them now.\n                if (prefix && prefix !== \"xmlns\" && !uri) {\n                    strictFail(parser, \"Unbound namespace prefix: \" + JSON.stringify(prefix));\n                    a.uri = prefix;\n                }\n                parser.tag.attributes[name] = a;\n                emitNode(parser, \"onattribute\", a);\n            }\n            parser.attribList.length = 0;\n        }\n        parser.tag.isSelfClosing = !!selfClosing;\n        // process the tag\n        parser.sawRoot = true;\n        parser.tags.push(parser.tag);\n        emitNode(parser, \"onopentag\", parser.tag);\n        if (!selfClosing) {\n            // special case for <script> in non-strict mode.\n            if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n                parser.state = S.SCRIPT;\n            }\n            else {\n                parser.state = S.TEXT;\n            }\n            parser.tag = null;\n            parser.tagName = \"\";\n        }\n        parser.attribName = parser.attribValue = \"\";\n        parser.attribList.length = 0;\n    }\n    function closeTag(parser) {\n        if (!parser.tagName) {\n            strictFail(parser, \"Weird empty close tag.\");\n            parser.textNode += \"</>\";\n            parser.state = S.TEXT;\n            return;\n        }\n        if (parser.script) {\n            if (parser.tagName !== \"script\") {\n                parser.script += \"</\" + parser.tagName + \">\";\n                parser.tagName = \"\";\n                parser.state = S.SCRIPT;\n                return;\n            }\n            emitNode(parser, \"onscript\", parser.script);\n            parser.script = \"\";\n        }\n        // first make sure that the closing tag actually exists.\n        // <a><b></c></b></a> will close everything, otherwise.\n        var t = parser.tags.length;\n        var tagName = parser.tagName;\n        if (!parser.strict) {\n            tagName = tagName[parser.looseCase]();\n        }\n        var closeTo = tagName;\n        while (t--) {\n            var close = parser.tags[t];\n            if (close.name !== closeTo) {\n                // fail the first time in strict mode\n                strictFail(parser, \"Unexpected close tag\");\n            }\n            else {\n                break;\n            }\n        }\n        // didn't find it.  we already failed for strict, so just abort.\n        if (t < 0) {\n            strictFail(parser, \"Unmatched closing tag: \" + parser.tagName);\n            parser.textNode += \"</\" + parser.tagName + \">\";\n            parser.state = S.TEXT;\n            return;\n        }\n        parser.tagName = tagName;\n        var s = parser.tags.length;\n        while (s-- > t) {\n            var tag = (parser.tag = parser.tags.pop());\n            parser.tagName = parser.tag.name;\n            emitNode(parser, \"onclosetag\", parser.tagName);\n            var x = {};\n            for (var i in tag.ns) {\n                x[i] = tag.ns[i];\n            }\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n            if (parser.opt.xmlns && tag.ns !== parent.ns) {\n                // remove namespace bindings introduced by tag\n                Object.keys(tag.ns).forEach(function (p) {\n                    var n = tag.ns[p];\n                    emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n });\n                });\n            }\n        }\n        if (t === 0)\n            parser.closedRoot = true;\n        parser.tagName = parser.attribValue = parser.attribName = \"\";\n        parser.attribList.length = 0;\n        parser.state = S.TEXT;\n    }\n    function parseEntity(parser) {\n        var entity = parser.entity;\n        var entityLC = entity.toLowerCase();\n        var num;\n        var numStr = \"\";\n        if (parser.ENTITIES[entity]) {\n            return parser.ENTITIES[entity];\n        }\n        if (parser.ENTITIES[entityLC]) {\n            return parser.ENTITIES[entityLC];\n        }\n        entity = entityLC;\n        if (entity.charAt(0) === \"#\") {\n            if (entity.charAt(1) === \"x\") {\n                entity = entity.slice(2);\n                num = parseInt(entity, 16);\n                numStr = num.toString(16);\n            }\n            else {\n                entity = entity.slice(1);\n                num = parseInt(entity, 10);\n                numStr = num.toString(10);\n            }\n        }\n        entity = entity.replace(/^0+/, \"\");\n        if (isNaN(num) || numStr.toLowerCase() !== entity) {\n            strictFail(parser, \"Invalid character entity\");\n            return \"&\" + parser.entity + \";\";\n        }\n        return String.fromCodePoint(num);\n    }\n    function beginWhiteSpace(parser, c) {\n        if (c === \"<\") {\n            parser.state = S.OPEN_WAKA;\n            parser.startTagPosition = parser.position;\n        }\n        else if (!isWhitespace(c)) {\n            // have to process this as a text node.\n            // weird, but happens.\n            strictFail(parser, \"Non-whitespace before first tag.\");\n            parser.textNode = c;\n            parser.state = S.TEXT;\n        }\n    }\n    function charAt(chunk, i) {\n        var result = \"\";\n        if (i < chunk.length) {\n            result = chunk.charAt(i);\n        }\n        return result;\n    }\n    function write(chunk) {\n        var parser = this;\n        if (this.error) {\n            throw this.error;\n        }\n        if (parser.closed) {\n            return error(parser, \"Cannot write after close. Assign an onready handler.\");\n        }\n        if (chunk === null) {\n            return end(parser);\n        }\n        if (typeof chunk === \"object\") {\n            chunk = chunk.toString();\n        }\n        var i = 0;\n        var c = \"\";\n        while (true) {\n            c = charAt(chunk, i++);\n            parser.c = c;\n            if (!c) {\n                break;\n            }\n            if (parser.trackPosition) {\n                parser.position++;\n                if (c === \"\\n\") {\n                    parser.line++;\n                    parser.column = 0;\n                }\n                else {\n                    parser.column++;\n                }\n            }\n            switch (parser.state) {\n                case S.BEGIN:\n                    parser.state = S.BEGIN_WHITESPACE;\n                    if (c === \"\\uFEFF\") {\n                        continue;\n                    }\n                    beginWhiteSpace(parser, c);\n                    continue;\n                case S.BEGIN_WHITESPACE:\n                    beginWhiteSpace(parser, c);\n                    continue;\n                case S.TEXT:\n                    if (parser.sawRoot && !parser.closedRoot) {\n                        var starti = i - 1;\n                        while (c && c !== \"<\" && c !== \"&\") {\n                            c = charAt(chunk, i++);\n                            if (c && parser.trackPosition) {\n                                parser.position++;\n                                if (c === \"\\n\") {\n                                    parser.line++;\n                                    parser.column = 0;\n                                }\n                                else {\n                                    parser.column++;\n                                }\n                            }\n                        }\n                        parser.textNode += chunk.substring(starti, i - 1);\n                    }\n                    if (c === \"<\" &&\n                        !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n                        parser.state = S.OPEN_WAKA;\n                        parser.startTagPosition = parser.position;\n                    }\n                    else {\n                        if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n                            strictFail(parser, \"Text data outside of root node.\");\n                        }\n                        if (c === \"&\") {\n                            parser.state = S.TEXT_ENTITY;\n                        }\n                        else {\n                            parser.textNode += c;\n                        }\n                    }\n                    continue;\n                case S.SCRIPT:\n                    // only non-strict\n                    if (c === \"<\") {\n                        parser.state = S.SCRIPT_ENDING;\n                    }\n                    else {\n                        parser.script += c;\n                    }\n                    continue;\n                case S.SCRIPT_ENDING:\n                    if (c === \"/\") {\n                        parser.state = S.CLOSE_TAG;\n                    }\n                    else {\n                        parser.script += \"<\" + c;\n                        parser.state = S.SCRIPT;\n                    }\n                    continue;\n                case S.OPEN_WAKA:\n                    // either a /, ?, !, or text is coming next.\n                    if (c === \"!\") {\n                        parser.state = S.SGML_DECL;\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if (isWhitespace(c)) {\n                        // wait for it...\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        parser.state = S.OPEN_TAG;\n                        parser.tagName = c;\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.CLOSE_TAG;\n                        parser.tagName = \"\";\n                    }\n                    else if (c === \"?\") {\n                        parser.state = S.PROC_INST;\n                        parser.procInstName = parser.procInstBody = \"\";\n                    }\n                    else {\n                        strictFail(parser, \"Unencoded <\");\n                        // if there was some whitespace, then add that in.\n                        if (parser.startTagPosition + 1 < parser.position) {\n                            var pad = parser.position - parser.startTagPosition;\n                            c = new Array(pad).join(\" \") + c;\n                        }\n                        parser.textNode += \"<\" + c;\n                        parser.state = S.TEXT;\n                    }\n                    continue;\n                case S.SGML_DECL:\n                    if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n                        emitNode(parser, \"onopencdata\");\n                        parser.state = S.CDATA;\n                        parser.sgmlDecl = \"\";\n                        parser.cdata = \"\";\n                    }\n                    else if (parser.sgmlDecl + c === \"--\") {\n                        parser.state = S.COMMENT;\n                        parser.comment = \"\";\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n                        parser.state = S.DOCTYPE;\n                        if (parser.doctype || parser.sawRoot) {\n                            strictFail(parser, \"Inappropriately located doctype declaration\");\n                        }\n                        parser.doctype = \"\";\n                        parser.sgmlDecl = \"\";\n                    }\n                    else if (c === \">\") {\n                        emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl);\n                        parser.sgmlDecl = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else if (isQuote(c)) {\n                        parser.state = S.SGML_DECL_QUOTED;\n                        parser.sgmlDecl += c;\n                    }\n                    else {\n                        parser.sgmlDecl += c;\n                    }\n                    continue;\n                case S.SGML_DECL_QUOTED:\n                    if (c === parser.q) {\n                        parser.state = S.SGML_DECL;\n                        parser.q = \"\";\n                    }\n                    parser.sgmlDecl += c;\n                    continue;\n                case S.DOCTYPE:\n                    if (c === \">\") {\n                        parser.state = S.TEXT;\n                        emitNode(parser, \"ondoctype\", parser.doctype);\n                        parser.doctype = true; // just remember that we saw it.\n                    }\n                    else {\n                        parser.doctype += c;\n                        if (c === \"[\") {\n                            parser.state = S.DOCTYPE_DTD;\n                        }\n                        else if (isQuote(c)) {\n                            parser.state = S.DOCTYPE_QUOTED;\n                            parser.q = c;\n                        }\n                    }\n                    continue;\n                case S.DOCTYPE_QUOTED:\n                    parser.doctype += c;\n                    if (c === parser.q) {\n                        parser.q = \"\";\n                        parser.state = S.DOCTYPE;\n                    }\n                    continue;\n                case S.DOCTYPE_DTD:\n                    parser.doctype += c;\n                    if (c === \"]\") {\n                        parser.state = S.DOCTYPE;\n                    }\n                    else if (isQuote(c)) {\n                        parser.state = S.DOCTYPE_DTD_QUOTED;\n                        parser.q = c;\n                    }\n                    continue;\n                case S.DOCTYPE_DTD_QUOTED:\n                    parser.doctype += c;\n                    if (c === parser.q) {\n                        parser.state = S.DOCTYPE_DTD;\n                        parser.q = \"\";\n                    }\n                    continue;\n                case S.COMMENT:\n                    if (c === \"-\") {\n                        parser.state = S.COMMENT_ENDING;\n                    }\n                    else {\n                        parser.comment += c;\n                    }\n                    continue;\n                case S.COMMENT_ENDING:\n                    if (c === \"-\") {\n                        parser.state = S.COMMENT_ENDED;\n                        parser.comment = textopts(parser.opt, parser.comment);\n                        if (parser.comment) {\n                            emitNode(parser, \"oncomment\", parser.comment);\n                        }\n                        parser.comment = \"\";\n                    }\n                    else {\n                        parser.comment += \"-\" + c;\n                        parser.state = S.COMMENT;\n                    }\n                    continue;\n                case S.COMMENT_ENDED:\n                    if (c !== \">\") {\n                        strictFail(parser, \"Malformed comment\");\n                        // allow <!-- blah -- bloo --> in non-strict mode,\n                        // which is a comment of \" blah -- bloo \"\n                        parser.comment += \"--\" + c;\n                        parser.state = S.COMMENT;\n                    }\n                    else {\n                        parser.state = S.TEXT;\n                    }\n                    continue;\n                case S.CDATA:\n                    if (c === \"]\") {\n                        parser.state = S.CDATA_ENDING;\n                    }\n                    else {\n                        parser.cdata += c;\n                    }\n                    continue;\n                case S.CDATA_ENDING:\n                    if (c === \"]\") {\n                        parser.state = S.CDATA_ENDING_2;\n                    }\n                    else {\n                        parser.cdata += \"]\" + c;\n                        parser.state = S.CDATA;\n                    }\n                    continue;\n                case S.CDATA_ENDING_2:\n                    if (c === \">\") {\n                        if (parser.cdata) {\n                            emitNode(parser, \"oncdata\", parser.cdata);\n                        }\n                        emitNode(parser, \"onclosecdata\");\n                        parser.cdata = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else if (c === \"]\") {\n                        parser.cdata += \"]\";\n                    }\n                    else {\n                        parser.cdata += \"]]\" + c;\n                        parser.state = S.CDATA;\n                    }\n                    continue;\n                case S.PROC_INST:\n                    if (c === \"?\") {\n                        parser.state = S.PROC_INST_ENDING;\n                    }\n                    else if (isWhitespace(c)) {\n                        parser.state = S.PROC_INST_BODY;\n                    }\n                    else {\n                        parser.procInstName += c;\n                    }\n                    continue;\n                case S.PROC_INST_BODY:\n                    if (!parser.procInstBody && isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === \"?\") {\n                        parser.state = S.PROC_INST_ENDING;\n                    }\n                    else {\n                        parser.procInstBody += c;\n                    }\n                    continue;\n                case S.PROC_INST_ENDING:\n                    if (c === \">\") {\n                        emitNode(parser, \"onprocessinginstruction\", {\n                            name: parser.procInstName,\n                            body: parser.procInstBody,\n                        });\n                        parser.procInstName = parser.procInstBody = \"\";\n                        parser.state = S.TEXT;\n                    }\n                    else {\n                        parser.procInstBody += \"?\" + c;\n                        parser.state = S.PROC_INST_BODY;\n                    }\n                    continue;\n                case S.OPEN_TAG:\n                    if (isMatch(nameBody, c)) {\n                        parser.tagName += c;\n                    }\n                    else {\n                        newTag(parser);\n                        if (c === \">\") {\n                            openTag(parser);\n                        }\n                        else if (c === \"/\") {\n                            parser.state = S.OPEN_TAG_SLASH;\n                        }\n                        else {\n                            if (!isWhitespace(c)) {\n                                strictFail(parser, \"Invalid character in tag name\");\n                            }\n                            parser.state = S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case S.OPEN_TAG_SLASH:\n                    if (c === \">\") {\n                        openTag(parser, true);\n                        closeTag(parser);\n                    }\n                    else {\n                        strictFail(parser, \"Forward-slash in opening tag not followed by >\");\n                        parser.state = S.ATTRIB;\n                    }\n                    continue;\n                case S.ATTRIB:\n                    // haven't read the attribute name yet.\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.OPEN_TAG_SLASH;\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        parser.attribName = c;\n                        parser.attribValue = \"\";\n                        parser.state = S.ATTRIB_NAME;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_NAME:\n                    if (c === \"=\") {\n                        parser.state = S.ATTRIB_VALUE;\n                    }\n                    else if (c === \">\") {\n                        strictFail(parser, \"Attribute without value\");\n                        parser.attribValue = parser.attribName;\n                        attrib(parser);\n                        openTag(parser);\n                    }\n                    else if (isWhitespace(c)) {\n                        parser.state = S.ATTRIB_NAME_SAW_WHITE;\n                    }\n                    else if (isMatch(nameBody, c)) {\n                        parser.attribName += c;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_NAME_SAW_WHITE:\n                    if (c === \"=\") {\n                        parser.state = S.ATTRIB_VALUE;\n                    }\n                    else if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else {\n                        strictFail(parser, \"Attribute without value\");\n                        parser.tag.attributes[parser.attribName] = \"\";\n                        parser.attribValue = \"\";\n                        emitNode(parser, \"onattribute\", {\n                            name: parser.attribName,\n                            value: \"\",\n                        });\n                        parser.attribName = \"\";\n                        if (c === \">\") {\n                            openTag(parser);\n                        }\n                        else if (isMatch(nameStart, c)) {\n                            parser.attribName = c;\n                            parser.state = S.ATTRIB_NAME;\n                        }\n                        else {\n                            strictFail(parser, \"Invalid attribute name\");\n                            parser.state = S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case S.ATTRIB_VALUE:\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (isQuote(c)) {\n                        parser.q = c;\n                        parser.state = S.ATTRIB_VALUE_QUOTED;\n                    }\n                    else {\n                        strictFail(parser, \"Unquoted attribute value\");\n                        parser.state = S.ATTRIB_VALUE_UNQUOTED;\n                        parser.attribValue = c;\n                    }\n                    continue;\n                case S.ATTRIB_VALUE_QUOTED:\n                    if (c !== parser.q) {\n                        if (c === \"&\") {\n                            parser.state = S.ATTRIB_VALUE_ENTITY_Q;\n                        }\n                        else {\n                            parser.attribValue += c;\n                        }\n                        continue;\n                    }\n                    attrib(parser);\n                    parser.q = \"\";\n                    parser.state = S.ATTRIB_VALUE_CLOSED;\n                    continue;\n                case S.ATTRIB_VALUE_CLOSED:\n                    if (isWhitespace(c)) {\n                        parser.state = S.ATTRIB;\n                    }\n                    else if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else if (c === \"/\") {\n                        parser.state = S.OPEN_TAG_SLASH;\n                    }\n                    else if (isMatch(nameStart, c)) {\n                        strictFail(parser, \"No whitespace between attributes\");\n                        parser.attribName = c;\n                        parser.attribValue = \"\";\n                        parser.state = S.ATTRIB_NAME;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid attribute name\");\n                    }\n                    continue;\n                case S.ATTRIB_VALUE_UNQUOTED:\n                    if (!isAttribEnd(c)) {\n                        if (c === \"&\") {\n                            parser.state = S.ATTRIB_VALUE_ENTITY_U;\n                        }\n                        else {\n                            parser.attribValue += c;\n                        }\n                        continue;\n                    }\n                    attrib(parser);\n                    if (c === \">\") {\n                        openTag(parser);\n                    }\n                    else {\n                        parser.state = S.ATTRIB;\n                    }\n                    continue;\n                case S.CLOSE_TAG:\n                    if (!parser.tagName) {\n                        if (isWhitespace(c)) {\n                            continue;\n                        }\n                        else if (notMatch(nameStart, c)) {\n                            if (parser.script) {\n                                parser.script += \"</\" + c;\n                                parser.state = S.SCRIPT;\n                            }\n                            else {\n                                strictFail(parser, \"Invalid tagname in closing tag.\");\n                            }\n                        }\n                        else {\n                            parser.tagName = c;\n                        }\n                    }\n                    else if (c === \">\") {\n                        closeTag(parser);\n                    }\n                    else if (isMatch(nameBody, c)) {\n                        parser.tagName += c;\n                    }\n                    else if (parser.script) {\n                        parser.script += \"</\" + parser.tagName;\n                        parser.tagName = \"\";\n                        parser.state = S.SCRIPT;\n                    }\n                    else {\n                        if (!isWhitespace(c)) {\n                            strictFail(parser, \"Invalid tagname in closing tag\");\n                        }\n                        parser.state = S.CLOSE_TAG_SAW_WHITE;\n                    }\n                    continue;\n                case S.CLOSE_TAG_SAW_WHITE:\n                    if (isWhitespace(c)) {\n                        continue;\n                    }\n                    if (c === \">\") {\n                        closeTag(parser);\n                    }\n                    else {\n                        strictFail(parser, \"Invalid characters in closing tag\");\n                    }\n                    continue;\n                case S.TEXT_ENTITY:\n                case S.ATTRIB_VALUE_ENTITY_Q:\n                case S.ATTRIB_VALUE_ENTITY_U:\n                    var returnState;\n                    var buffer;\n                    switch (parser.state) {\n                        case S.TEXT_ENTITY:\n                            returnState = S.TEXT;\n                            buffer = \"textNode\";\n                            break;\n                        case S.ATTRIB_VALUE_ENTITY_Q:\n                            returnState = S.ATTRIB_VALUE_QUOTED;\n                            buffer = \"attribValue\";\n                            break;\n                        case S.ATTRIB_VALUE_ENTITY_U:\n                            returnState = S.ATTRIB_VALUE_UNQUOTED;\n                            buffer = \"attribValue\";\n                            break;\n                    }\n                    if (c === \";\") {\n                        if (parser.opt.unparsedEntities) {\n                            var parsedEntity = parseEntity(parser);\n                            parser.entity = \"\";\n                            parser.state = returnState;\n                            parser.write(parsedEntity);\n                        }\n                        else {\n                            parser[buffer] += parseEntity(parser);\n                            parser.entity = \"\";\n                            parser.state = returnState;\n                        }\n                    }\n                    else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n                        parser.entity += c;\n                    }\n                    else {\n                        strictFail(parser, \"Invalid character in entity name\");\n                        parser[buffer] += \"&\" + parser.entity + c;\n                        parser.entity = \"\";\n                        parser.state = returnState;\n                    }\n                    continue;\n                default: /* istanbul ignore next */ {\n                    throw new Error(parser, \"Unknown state: \" + parser.state);\n                }\n            }\n        } // while\n        if (parser.position >= parser.bufferCheckPosition) {\n            checkBufferLength(parser);\n        }\n        return parser;\n    }\n    /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n    /* istanbul ignore next */\n    if (!String.fromCodePoint) {\n        (function () {\n            var stringFromCharCode = String.fromCharCode;\n            var floor = Math.floor;\n            var fromCodePoint = function () {\n                var MAX_SIZE = 0x4000;\n                var codeUnits = [];\n                var highSurrogate;\n                var lowSurrogate;\n                var index = -1;\n                var length = arguments.length;\n                if (!length) {\n                    return \"\";\n                }\n                var result = \"\";\n                while (++index < length) {\n                    var codePoint = Number(arguments[index]);\n                    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                        codePoint < 0 || // not a valid Unicode code point\n                        codePoint > 0x10ffff || // not a valid Unicode code point\n                        floor(codePoint) !== codePoint // not an integer\n                    ) {\n                        throw RangeError(\"Invalid code point: \" + codePoint);\n                    }\n                    if (codePoint <= 0xffff) {\n                        // BMP code point\n                        codeUnits.push(codePoint);\n                    }\n                    else {\n                        // Astral code point; split in surrogate halves\n                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                        codePoint -= 0x10000;\n                        highSurrogate = (codePoint >> 10) + 0xd800;\n                        lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                        codeUnits.push(highSurrogate, lowSurrogate);\n                    }\n                    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                        result += stringFromCharCode.apply(null, codeUnits);\n                        codeUnits.length = 0;\n                    }\n                }\n                return result;\n            };\n            /* istanbul ignore next */\n            if (Object.defineProperty) {\n                Object.defineProperty(String, \"fromCodePoint\", {\n                    value: fromCodePoint,\n                    configurable: true,\n                    writable: true,\n                });\n            }\n            else {\n                String.fromCodePoint = fromCodePoint;\n            }\n        })();\n    }\n    return sax;\n};\nconst sax = /** #__PURE__ */ initializeSax();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/sax-js/sax.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncGeneratorWithSetup: () => (/* binding */ AsyncGeneratorWithSetup),\n/* harmony export */   IterableReadableStream: () => (/* binding */ IterableReadableStream),\n/* harmony export */   atee: () => (/* binding */ atee),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   pipeGeneratorWithSetup: () => (/* binding */ pipeGeneratorWithSetup)\n/* harmony export */ });\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nclass IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n            async cancel(reason) {\n                await generator.return(reason);\n            },\n        });\n    }\n}\nfunction atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nfunction concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk && !Array.isArray(chunk[key])) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nclass AsyncGeneratorWithSetup {\n    constructor(generator, startSetup) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = generator;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            this.firstResult = generator.next();\n            if (startSetup) {\n                this.firstResult.then(startSetup).then(resolve, reject);\n            }\n            else {\n                this.firstResult.then((_result) => resolve(undefined), reject);\n            }\n        });\n    }\n    async next(...args) {\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return this.generator.next(...args);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nasync function pipeGeneratorWithSetup(to, generator, startSetup, ...args) {\n    const gen = new AsyncGeneratorWithSetup(generator, startSetup);\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/tiktoken.js":
/*!************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/utils/tiktoken.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodingForModel: () => (/* binding */ encodingForModel),\n/* harmony export */   getEncoding: () => (/* binding */ getEncoding)\n/* harmony export */ });\n/* harmony import */ var js_tiktoken_lite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-tiktoken/lite */ \"(rsc)/./node_modules/js-tiktoken/dist/lite.js\");\n/* harmony import */ var _async_caller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./async_caller.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js\");\n\n\nconst cache = {};\nconst caller = /* #__PURE__ */ new _async_caller_js__WEBPACK_IMPORTED_MODULE_1__.AsyncCaller({});\nasync function getEncoding(encoding) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`)\n            .then((res) => res.json())\n            .then((data) => new js_tiktoken_lite__WEBPACK_IMPORTED_MODULE_0__.Tiktoken(data))\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return await cache[encoding];\n}\nasync function encodingForModel(model) {\n    return getEncoding((0,js_tiktoken_lite__WEBPACK_IMPORTED_MODULE_0__.getEncodingNameForModel)(model));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy90aWt0b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNFO0FBQ3RCO0FBQ2hEO0FBQ0EsbUNBQW1DLHlEQUFXLEdBQUc7QUFDMUM7QUFDUDtBQUNBO0FBQ0Esb0RBQW9ELFNBQVM7QUFDN0Q7QUFDQSxnQ0FBZ0Msc0RBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdUJBQXVCLHlFQUF1QjtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3F1YWxpZmljYXRpb24tYWdlbnQvLi9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2NvcmUvZGlzdC91dGlscy90aWt0b2tlbi5qcz9hODY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpa3Rva2VuLCBnZXRFbmNvZGluZ05hbWVGb3JNb2RlbCwgfSBmcm9tIFwianMtdGlrdG9rZW4vbGl0ZVwiO1xuaW1wb3J0IHsgQXN5bmNDYWxsZXIgfSBmcm9tIFwiLi9hc3luY19jYWxsZXIuanNcIjtcbmNvbnN0IGNhY2hlID0ge307XG5jb25zdCBjYWxsZXIgPSAvKiAjX19QVVJFX18gKi8gbmV3IEFzeW5jQ2FsbGVyKHt9KTtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRFbmNvZGluZyhlbmNvZGluZykge1xuICAgIGlmICghKGVuY29kaW5nIGluIGNhY2hlKSkge1xuICAgICAgICBjYWNoZVtlbmNvZGluZ10gPSBjYWxsZXJcbiAgICAgICAgICAgIC5mZXRjaChgaHR0cHM6Ly90aWt0b2tlbi5wYWdlcy5kZXYvanMvJHtlbmNvZGluZ30uanNvbmApXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiByZXMuanNvbigpKVxuICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IG5ldyBUaWt0b2tlbihkYXRhKSlcbiAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgZGVsZXRlIGNhY2hlW2VuY29kaW5nXTtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgY2FjaGVbZW5jb2RpbmddO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuY29kaW5nRm9yTW9kZWwobW9kZWwpIHtcbiAgICByZXR1cm4gZ2V0RW5jb2RpbmcoZ2V0RW5jb2RpbmdOYW1lRm9yTW9kZWwobW9kZWwpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/tiktoken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/vectorstores.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/dist/vectorstores.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SaveableVectorStore: () => (/* binding */ SaveableVectorStore),\n/* harmony export */   VectorStore: () => (/* binding */ VectorStore),\n/* harmony export */   VectorStoreRetriever: () => (/* binding */ VectorStoreRetriever)\n/* harmony export */ });\n/* harmony import */ var _retrievers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./retrievers/index.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/retrievers/index.js\");\n/* harmony import */ var _load_serializable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./load/serializable.js */ \"(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js\");\n\n\n/**\n * Class for performing document retrieval from a VectorStore. Can perform\n * similarity search or maximal marginal relevance search.\n */\nclass VectorStoreRetriever extends _retrievers_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseRetriever {\n    static lc_name() {\n        return \"VectorStoreRetriever\";\n    }\n    get lc_namespace() {\n        return [\"langchain_core\", \"vectorstores\"];\n    }\n    _vectorstoreType() {\n        return this.vectorStore._vectorstoreType();\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"searchType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"similarity\"\n        });\n        Object.defineProperty(this, \"searchKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.vectorStore = fields.vectorStore;\n        this.k = fields.k ?? this.k;\n        this.searchType = fields.searchType ?? this.searchType;\n        this.filter = fields.filter;\n        if (fields.searchType === \"mmr\") {\n            this.searchKwargs = fields.searchKwargs;\n        }\n    }\n    async _getRelevantDocuments(query, runManager) {\n        if (this.searchType === \"mmr\") {\n            if (typeof this.vectorStore.maxMarginalRelevanceSearch !== \"function\") {\n                throw new Error(`The vector store backing this retriever, ${this._vectorstoreType()} does not support max marginal relevance search.`);\n            }\n            return this.vectorStore.maxMarginalRelevanceSearch(query, {\n                k: this.k,\n                filter: this.filter,\n                ...this.searchKwargs,\n            }, runManager?.getChild(\"vectorstore\"));\n        }\n        return this.vectorStore.similaritySearch(query, this.k, this.filter, runManager?.getChild(\"vectorstore\"));\n    }\n    async addDocuments(documents, options) {\n        return this.vectorStore.addDocuments(documents, options);\n    }\n}\n/**\n * Abstract class representing a store of vectors. Provides methods for\n * adding vectors and documents, deleting from the store, and searching\n * the store.\n */\nclass VectorStore extends _load_serializable_js__WEBPACK_IMPORTED_MODULE_1__.Serializable {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(embeddings, dbConfig) {\n        super(dbConfig);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"vectorstores\", this._vectorstoreType()]\n        });\n        Object.defineProperty(this, \"embeddings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.embeddings = embeddings;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async delete(_params) {\n        throw new Error(\"Not implemented.\");\n    }\n    async similaritySearch(query, k = 4, filter = undefined, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        const results = await this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k, filter);\n        return results.map((result) => result[0]);\n    }\n    async similaritySearchWithScore(query, k = 4, filter = undefined, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        return this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k, filter);\n    }\n    static fromTexts(_texts, _metadatas, _embeddings, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _dbConfig) {\n        throw new Error(\"the Langchain vectorstore implementation you are using forgot to override this, please report a bug\");\n    }\n    static fromDocuments(_docs, _embeddings, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _dbConfig) {\n        throw new Error(\"the Langchain vectorstore implementation you are using forgot to override this, please report a bug\");\n    }\n    asRetriever(kOrFields, filter, callbacks, tags, metadata, verbose) {\n        if (typeof kOrFields === \"number\") {\n            return new VectorStoreRetriever({\n                vectorStore: this,\n                k: kOrFields,\n                filter,\n                tags: [...(tags ?? []), this._vectorstoreType()],\n                metadata,\n                verbose,\n                callbacks,\n            });\n        }\n        else {\n            const params = {\n                vectorStore: this,\n                k: kOrFields?.k,\n                filter: kOrFields?.filter,\n                tags: [...(kOrFields?.tags ?? []), this._vectorstoreType()],\n                metadata: kOrFields?.metadata,\n                verbose: kOrFields?.verbose,\n                callbacks: kOrFields?.callbacks,\n                searchType: kOrFields?.searchType,\n            };\n            if (kOrFields?.searchType === \"mmr\") {\n                return new VectorStoreRetriever({\n                    ...params,\n                    searchKwargs: kOrFields.searchKwargs,\n                });\n            }\n            return new VectorStoreRetriever({ ...params });\n        }\n    }\n}\n/**\n * Abstract class extending VectorStore with functionality for saving and\n * loading the vector store.\n */\nclass SaveableVectorStore extends VectorStore {\n    static load(_directory, _embeddings) {\n        throw new Error(\"Not implemented\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/vectorstores.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/documents.js":
/*!**************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/documents.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseDocumentTransformer: () => (/* reexport safe */ _dist_documents_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseDocumentTransformer),
/* harmony export */   Document: () => (/* reexport safe */ _dist_documents_index_js__WEBPACK_IMPORTED_MODULE_0__.Document),
/* harmony export */   MappingDocumentTransformer: () => (/* reexport safe */ _dist_documents_index_js__WEBPACK_IMPORTED_MODULE_0__.MappingDocumentTransformer)
/* harmony export */ });
/* harmony import */ var _dist_documents_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/documents/index.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/documents/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/example_selectors.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/example_selectors.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseExampleSelector: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseExampleSelector),
/* harmony export */   BasePromptSelector: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.BasePromptSelector),
/* harmony export */   ConditionalPromptSelector: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.ConditionalPromptSelector),
/* harmony export */   LengthBasedExampleSelector: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.LengthBasedExampleSelector),
/* harmony export */   SemanticSimilarityExampleSelector: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.SemanticSimilarityExampleSelector),
/* harmony export */   isChatModel: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.isChatModel),
/* harmony export */   isLLM: () => (/* reexport safe */ _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__.isLLM)
/* harmony export */ });
/* harmony import */ var _dist_example_selectors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/example_selectors/index.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/example_selectors/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/language_models/base.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/language_models/base.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseLangChain: () => (/* reexport safe */ _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseLangChain),
/* harmony export */   BaseLanguageModel: () => (/* reexport safe */ _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__.BaseLanguageModel),
/* harmony export */   calculateMaxTokens: () => (/* reexport safe */ _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__.calculateMaxTokens),
/* harmony export */   getEmbeddingContextSize: () => (/* reexport safe */ _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__.getEmbeddingContextSize),
/* harmony export */   getModelContextSize: () => (/* reexport safe */ _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__.getModelContextSize),
/* harmony export */   getModelNameForTiktoken: () => (/* reexport safe */ _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__.getModelNameForTiktoken)
/* harmony export */ });
/* harmony import */ var _dist_language_models_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/language_models/base.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/language_models/base.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/load/serializable.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/load/serializable.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Serializable: () => (/* reexport safe */ _dist_load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.Serializable),
/* harmony export */   get_lc_unique_name: () => (/* reexport safe */ _dist_load_serializable_js__WEBPACK_IMPORTED_MODULE_0__.get_lc_unique_name)
/* harmony export */ });
/* harmony import */ var _dist_load_serializable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/load/serializable.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/load/serializable.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/memory.js":
/*!***********************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/memory.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseMemory: () => (/* reexport safe */ _dist_memory_js__WEBPACK_IMPORTED_MODULE_0__.BaseMemory),
/* harmony export */   getInputValue: () => (/* reexport safe */ _dist_memory_js__WEBPACK_IMPORTED_MODULE_0__.getInputValue),
/* harmony export */   getOutputValue: () => (/* reexport safe */ _dist_memory_js__WEBPACK_IMPORTED_MODULE_0__.getOutputValue),
/* harmony export */   getPromptInputKey: () => (/* reexport safe */ _dist_memory_js__WEBPACK_IMPORTED_MODULE_0__.getPromptInputKey)
/* harmony export */ });
/* harmony import */ var _dist_memory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/memory.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/memory.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/messages.js":
/*!*************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/messages.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AIMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.AIMessage),
/* harmony export */   AIMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.AIMessageChunk),
/* harmony export */   BaseMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessage),
/* harmony export */   BaseMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageChunk),
/* harmony export */   ChatMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatMessage),
/* harmony export */   ChatMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatMessageChunk),
/* harmony export */   FunctionMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.FunctionMessage),
/* harmony export */   FunctionMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.FunctionMessageChunk),
/* harmony export */   HumanMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.HumanMessage),
/* harmony export */   HumanMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.HumanMessageChunk),
/* harmony export */   SystemMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.SystemMessage),
/* harmony export */   SystemMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.SystemMessageChunk),
/* harmony export */   ToolMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.ToolMessage),
/* harmony export */   ToolMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.ToolMessageChunk),
/* harmony export */   _mergeDicts: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__._mergeDicts),
/* harmony export */   _mergeLists: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__._mergeLists),
/* harmony export */   coerceMessageLikeToMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.coerceMessageLikeToMessage),
/* harmony export */   convertToChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.convertToChunk),
/* harmony export */   getBufferString: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.getBufferString),
/* harmony export */   isAIMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isAIMessage),
/* harmony export */   isBaseMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage),
/* harmony export */   isBaseMessageChunk: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isBaseMessageChunk),
/* harmony export */   isOpenAIToolCallArray: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.isOpenAIToolCallArray),
/* harmony export */   mapChatMessagesToStoredMessages: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.mapChatMessagesToStoredMessages),
/* harmony export */   mapStoredMessageToChatMessage: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.mapStoredMessageToChatMessage),
/* harmony export */   mapStoredMessagesToChatMessages: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.mapStoredMessagesToChatMessages),
/* harmony export */   mergeContent: () => (/* reexport safe */ _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__.mergeContent)
/* harmony export */ });
/* harmony import */ var _dist_messages_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/messages/index.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/messages/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/output_parsers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/output_parsers.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsymmetricStructuredOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.AsymmetricStructuredOutputParser),
/* harmony export */   BaseCumulativeTransformOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseCumulativeTransformOutputParser),
/* harmony export */   BaseLLMOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseLLMOutputParser),
/* harmony export */   BaseOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser),
/* harmony export */   BaseTransformOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseTransformOutputParser),
/* harmony export */   BytesOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.BytesOutputParser),
/* harmony export */   CommaSeparatedListOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.CommaSeparatedListOutputParser),
/* harmony export */   CustomListOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.CustomListOutputParser),
/* harmony export */   JsonMarkdownStructuredOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonMarkdownStructuredOutputParser),
/* harmony export */   JsonOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonOutputParser),
/* harmony export */   ListOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.ListOutputParser),
/* harmony export */   MarkdownListOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.MarkdownListOutputParser),
/* harmony export */   NumberedListOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.NumberedListOutputParser),
/* harmony export */   OutputParserException: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.OutputParserException),
/* harmony export */   StringOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.StringOutputParser),
/* harmony export */   StructuredOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredOutputParser),
/* harmony export */   XMLOutputParser: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.XMLOutputParser),
/* harmony export */   XML_FORMAT_INSTRUCTIONS: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.XML_FORMAT_INSTRUCTIONS),
/* harmony export */   parseJsonMarkdown: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.parseJsonMarkdown),
/* harmony export */   parsePartialJson: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.parsePartialJson),
/* harmony export */   parseXMLMarkdown: () => (/* reexport safe */ _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__.parseXMLMarkdown)
/* harmony export */ });
/* harmony import */ var _dist_output_parsers_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/output_parsers/index.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/output_parsers/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/outputs.js":
/*!************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/outputs.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChatGenerationChunk: () => (/* reexport safe */ _dist_outputs_js__WEBPACK_IMPORTED_MODULE_0__.ChatGenerationChunk),
/* harmony export */   GenerationChunk: () => (/* reexport safe */ _dist_outputs_js__WEBPACK_IMPORTED_MODULE_0__.GenerationChunk),
/* harmony export */   RUN_KEY: () => (/* reexport safe */ _dist_outputs_js__WEBPACK_IMPORTED_MODULE_0__.RUN_KEY)
/* harmony export */ });
/* harmony import */ var _dist_outputs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/outputs.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/outputs.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/prompts.js":
/*!************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/prompts.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AIMessagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.AIMessagePromptTemplate),
/* harmony export */   BaseChatPromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseChatPromptTemplate),
/* harmony export */   BaseMessagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessagePromptTemplate),
/* harmony export */   BaseMessageStringPromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseMessageStringPromptTemplate),
/* harmony export */   BasePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.BasePromptTemplate),
/* harmony export */   BaseStringPromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseStringPromptTemplate),
/* harmony export */   ChatMessagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatMessagePromptTemplate),
/* harmony export */   ChatPromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate),
/* harmony export */   DEFAULT_FORMATTER_MAPPING: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FORMATTER_MAPPING),
/* harmony export */   DEFAULT_PARSER_MAPPING: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_PARSER_MAPPING),
/* harmony export */   FewShotChatMessagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.FewShotChatMessagePromptTemplate),
/* harmony export */   FewShotPromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.FewShotPromptTemplate),
/* harmony export */   HumanMessagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate),
/* harmony export */   ImagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.ImagePromptTemplate),
/* harmony export */   MessagesPlaceholder: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.MessagesPlaceholder),
/* harmony export */   PipelinePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.PipelinePromptTemplate),
/* harmony export */   PromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate),
/* harmony export */   StructuredPrompt: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredPrompt),
/* harmony export */   SystemMessagePromptTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate),
/* harmony export */   checkValidTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.checkValidTemplate),
/* harmony export */   interpolateFString: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.interpolateFString),
/* harmony export */   interpolateMustache: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.interpolateMustache),
/* harmony export */   parseFString: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.parseFString),
/* harmony export */   parseMustache: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.parseMustache),
/* harmony export */   parseTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.parseTemplate),
/* harmony export */   renderTemplate: () => (/* reexport safe */ _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__.renderTemplate)
/* harmony export */ });
/* harmony import */ var _dist_prompts_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/prompts/index.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/prompts/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/runnables.js":
/*!**************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/runnables.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RouterRunnable: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RouterRunnable),
/* harmony export */   Runnable: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.Runnable),
/* harmony export */   RunnableAssign: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableAssign),
/* harmony export */   RunnableBinding: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableBinding),
/* harmony export */   RunnableBranch: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableBranch),
/* harmony export */   RunnableEach: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableEach),
/* harmony export */   RunnableLambda: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableLambda),
/* harmony export */   RunnableMap: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableMap),
/* harmony export */   RunnableParallel: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableParallel),
/* harmony export */   RunnablePassthrough: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough),
/* harmony export */   RunnablePick: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnablePick),
/* harmony export */   RunnableRetry: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableRetry),
/* harmony export */   RunnableSequence: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence),
/* harmony export */   RunnableWithFallbacks: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableWithFallbacks),
/* harmony export */   RunnableWithMessageHistory: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.RunnableWithMessageHistory),
/* harmony export */   _coerceToRunnable: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable),
/* harmony export */   ensureConfig: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.ensureConfig),
/* harmony export */   getCallbackManagerForConfig: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.getCallbackManagerForConfig),
/* harmony export */   mergeConfigs: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs),
/* harmony export */   patchConfig: () => (/* reexport safe */ _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__.patchConfig)
/* harmony export */ });
/* harmony import */ var _dist_runnables_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/runnables/index.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/runnables/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/tools.js":
/*!**********************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/tools.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseToolkit: () => (/* reexport safe */ _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__.BaseToolkit),
/* harmony export */   DynamicStructuredTool: () => (/* reexport safe */ _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__.DynamicStructuredTool),
/* harmony export */   DynamicTool: () => (/* reexport safe */ _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__.DynamicTool),
/* harmony export */   StructuredTool: () => (/* reexport safe */ _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__.StructuredTool),
/* harmony export */   Tool: () => (/* reexport safe */ _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__.Tool),
/* harmony export */   ToolInputParsingException: () => (/* reexport safe */ _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__.ToolInputParsingException)
/* harmony export */ });
/* harmony import */ var _dist_tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/tools.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/tools.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/async_caller.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/utils/async_caller.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncCaller: () => (/* reexport safe */ _dist_utils_async_caller_js__WEBPACK_IMPORTED_MODULE_0__.AsyncCaller)
/* harmony export */ });
/* harmony import */ var _dist_utils_async_caller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/utils/async_caller.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/async_caller.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/env.js":
/*!**************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/utils/env.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEnv: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.getEnv),
/* harmony export */   getEnvironmentVariable: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.getEnvironmentVariable),
/* harmony export */   getRuntimeEnvironment: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.getRuntimeEnvironment),
/* harmony export */   isBrowser: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.isBrowser),
/* harmony export */   isDeno: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.isDeno),
/* harmony export */   isJsDom: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.isJsDom),
/* harmony export */   isNode: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.isNode),
/* harmony export */   isWebWorker: () => (/* reexport safe */ _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__.isWebWorker)
/* harmony export */ });
/* harmony import */ var _dist_utils_env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/utils/env.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/env.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/function_calling.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/utils/function_calling.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   convertToOpenAIFunction: () => (/* reexport safe */ _dist_utils_function_calling_js__WEBPACK_IMPORTED_MODULE_0__.convertToOpenAIFunction),
/* harmony export */   convertToOpenAITool: () => (/* reexport safe */ _dist_utils_function_calling_js__WEBPACK_IMPORTED_MODULE_0__.convertToOpenAITool),
/* harmony export */   isStructuredTool: () => (/* reexport safe */ _dist_utils_function_calling_js__WEBPACK_IMPORTED_MODULE_0__.isStructuredTool)
/* harmony export */ });
/* harmony import */ var _dist_utils_function_calling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/utils/function_calling.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/function_calling.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/utils/stream.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/utils/stream.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncGeneratorWithSetup: () => (/* reexport safe */ _dist_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.AsyncGeneratorWithSetup),
/* harmony export */   IterableReadableStream: () => (/* reexport safe */ _dist_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.IterableReadableStream),
/* harmony export */   atee: () => (/* reexport safe */ _dist_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.atee),
/* harmony export */   concat: () => (/* reexport safe */ _dist_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.concat),
/* harmony export */   pipeGeneratorWithSetup: () => (/* reexport safe */ _dist_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__.pipeGeneratorWithSetup)
/* harmony export */ });
/* harmony import */ var _dist_utils_stream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/utils/stream.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/utils/stream.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/vectorstores.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/langchain/node_modules/@langchain/core/vectorstores.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SaveableVectorStore: () => (/* reexport safe */ _dist_vectorstores_js__WEBPACK_IMPORTED_MODULE_0__.SaveableVectorStore),
/* harmony export */   VectorStore: () => (/* reexport safe */ _dist_vectorstores_js__WEBPACK_IMPORTED_MODULE_0__.VectorStore),
/* harmony export */   VectorStoreRetriever: () => (/* reexport safe */ _dist_vectorstores_js__WEBPACK_IMPORTED_MODULE_0__.VectorStoreRetriever)
/* harmony export */ });
/* harmony import */ var _dist_vectorstores_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/vectorstores.js */ "(rsc)/./node_modules/langchain/node_modules/@langchain/core/dist/vectorstores.js");


/***/ }),

/***/ "(rsc)/./node_modules/langchain/tools/webbrowser.js":
/*!****************************************************!*\
  !*** ./node_modules/langchain/tools/webbrowser.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WebBrowser: () => (/* reexport safe */ _dist_tools_webbrowser_js__WEBPACK_IMPORTED_MODULE_0__.WebBrowser),
/* harmony export */   getText: () => (/* reexport safe */ _dist_tools_webbrowser_js__WEBPACK_IMPORTED_MODULE_0__.getText),
/* harmony export */   parseInputs: () => (/* reexport safe */ _dist_tools_webbrowser_js__WEBPACK_IMPORTED_MODULE_0__.parseInputs)
/* harmony export */ });
/* harmony import */ var _dist_tools_webbrowser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/tools/webbrowser.js */ "(rsc)/./node_modules/langchain/dist/tools/webbrowser.js");


/***/ })

};
;